ln: failed to create symbolic link './seq.fasta': File exists
ln: failed to create symbolic link './Lib_R1.fastq.gz': File exists
ln: failed to create symbolic link './Lib_R2.fastq.gz': File exists
[bwa_index] Pack FASTA... 3.15 sec
[bwa_index] Construct BWT for the packed sequence...
[BWTIncCreate] textLength=792795444, availableWord=67783896
[BWTIncConstructFromPacked] 10 iterations done. 99999988 characters processed.
[BWTIncConstructFromPacked] 20 iterations done. 195953108 characters processed.
[BWTIncConstructFromPacked] 30 iterations done. 281352084 characters processed.
[BWTIncConstructFromPacked] 40 iterations done. 357250900 characters processed.
[BWTIncConstructFromPacked] 50 iterations done. 424705972 characters processed.
[BWTIncConstructFromPacked] 60 iterations done. 484656196 characters processed.
[BWTIncConstructFromPacked] 70 iterations done. 537936068 characters processed.
[BWTIncConstructFromPacked] 80 iterations done. 585287332 characters processed.
[BWTIncConstructFromPacked] 90 iterations done. 627369252 characters processed.
[BWTIncConstructFromPacked] 100 iterations done. 664767732 characters processed.
[BWTIncConstructFromPacked] 110 iterations done. 698003540 characters processed.
[BWTIncConstructFromPacked] 120 iterations done. 727539604 characters processed.
[BWTIncConstructFromPacked] 130 iterations done. 753787316 characters processed.
[BWTIncConstructFromPacked] 140 iterations done. 777112308 characters processed.
[bwt_gen] Finished constructing BWT in 148 iterations.
[bwa_index] 311.62 seconds elapse.
[bwa_index] Update BWT... 1.77 sec
[bwa_index] Pack forward-only FASTA... 1.47 sec
[bwa_index] Construct SA from BWT and Occ... 129.21 sec
[main] Version: 0.7.17-r1188
[main] CMD: bwa index seq.fasta
[main] Real time: 451.825 sec; CPU: 447.236 sec
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 3333334 sequences (500000100 bp)...
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11133, 527840, 5870, 7852)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (175, 793, 3524)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10222)
[M::mem_pestat] mean and std.dev: (2166.35, 2658.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13571)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (269, 322, 381)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (45, 605)
[M::mem_pestat] mean and std.dev: (326.44, 81.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 717)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1417, 3173, 5829)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14653)
[M::mem_pestat] mean and std.dev: (3785.73, 2757.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19065)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (483, 2003, 4791)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13407)
[M::mem_pestat] mean and std.dev: (2938.05, 2805.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17715)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2558.871 CPU sec, 58.988 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10982, 526363, 6016, 7946)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (182, 918, 3756)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10904)
[M::mem_pestat] mean and std.dev: (2263.30, 2716.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14478)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (326.67, 81.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1326, 2998, 5655)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14313)
[M::mem_pestat] mean and std.dev: (3661.15, 2741.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18642)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (522, 2037, 4830)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13446)
[M::mem_pestat] mean and std.dev: (2966.61, 2790.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17754)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2668.153 CPU sec, 55.151 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10819, 527351, 5971, 7997)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (180, 872, 3561)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10323)
[M::mem_pestat] mean and std.dev: (2205.80, 2677.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13704)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 322, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (326.69, 81.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1334, 3001, 5645)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14267)
[M::mem_pestat] mean and std.dev: (3655.42, 2741.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18578)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (510, 2000, 4760)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13260)
[M::mem_pestat] mean and std.dev: (2927.70, 2780.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17510)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2513.243 CPU sec, 51.232 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10701, 525850, 5806, 7992)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (183, 889, 3634)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10536)
[M::mem_pestat] mean and std.dev: (2227.22, 2695.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13987)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 381)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 603)
[M::mem_pestat] mean and std.dev: (326.46, 81.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 714)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1364, 3066, 5629)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14159)
[M::mem_pestat] mean and std.dev: (3688.72, 2736.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18424)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (505, 1949, 4720)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13150)
[M::mem_pestat] mean and std.dev: (2904.98, 2766.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17365)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2710.921 CPU sec, 55.368 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10869, 527755, 5907, 8035)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (186, 918, 3706)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10746)
[M::mem_pestat] mean and std.dev: (2248.21, 2697.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14266)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (326.83, 81.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1404, 3232, 5940)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 15012)
[M::mem_pestat] mean and std.dev: (3814.89, 2770.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19548)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (494, 1976, 4804)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13424)
[M::mem_pestat] mean and std.dev: (2942.45, 2799.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17734)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2480.645 CPU sec, 52.141 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11157, 526800, 5971, 8078)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (177, 873, 3652)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10602)
[M::mem_pestat] mean and std.dev: (2242.56, 2716.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14077)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (326.73, 81.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1299, 3014, 5682)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14448)
[M::mem_pestat] mean and std.dev: (3663.33, 2728.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18831)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (515, 1995, 4698)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13064)
[M::mem_pestat] mean and std.dev: (2923.35, 2760.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17247)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2713.304 CPU sec, 55.236 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10591, 527078, 5997, 8042)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (187, 945, 3620)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10486)
[M::mem_pestat] mean and std.dev: (2231.38, 2674.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13919)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (269, 322, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (43, 608)
[M::mem_pestat] mean and std.dev: (326.49, 81.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 721)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1315, 2963, 5719)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14527)
[M::mem_pestat] mean and std.dev: (3645.55, 2740.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18931)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (556, 2088, 4838)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13402)
[M::mem_pestat] mean and std.dev: (2993.13, 2787.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17684)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2598.140 CPU sec, 52.819 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10872, 527412, 5870, 7865)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (181, 907, 3523)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10207)
[M::mem_pestat] mean and std.dev: (2199.84, 2657.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13549)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 322, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (326.87, 81.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1280, 2955, 5613)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14279)
[M::mem_pestat] mean and std.dev: (3630.36, 2753.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18612)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (528, 2008, 4903)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13653)
[M::mem_pestat] mean and std.dev: (2983.17, 2819.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18028)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2607.054 CPU sec, 53.191 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10727, 526155, 5809, 7879)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (181, 895, 3613)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10477)
[M::mem_pestat] mean and std.dev: (2237.03, 2703.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13909)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 322, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (326.67, 81.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1326, 3042, 5794)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14730)
[M::mem_pestat] mean and std.dev: (3702.50, 2766.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19198)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (503, 1956, 4685)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13049)
[M::mem_pestat] mean and std.dev: (2900.26, 2761.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17231)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2476.561 CPU sec, 50.711 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10884, 528298, 5926, 8015)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (172, 821, 3521)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10219)
[M::mem_pestat] mean and std.dev: (2188.69, 2691.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13568)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 381)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 603)
[M::mem_pestat] mean and std.dev: (326.60, 81.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 714)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1349, 3113, 5831)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14795)
[M::mem_pestat] mean and std.dev: (3758.76, 2793.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19277)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (534, 2035, 4861)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13515)
[M::mem_pestat] mean and std.dev: (2963.28, 2782.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17842)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2700.303 CPU sec, 59.029 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10659, 531335, 5789, 7928)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (182, 895, 3662)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10622)
[M::mem_pestat] mean and std.dev: (2246.93, 2697.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14102)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 601)
[M::mem_pestat] mean and std.dev: (324.52, 80.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 712)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1301, 3067, 5755)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14663)
[M::mem_pestat] mean and std.dev: (3696.34, 2766.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19117)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (517, 2050, 4815)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13411)
[M::mem_pestat] mean and std.dev: (2974.63, 2797.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17709)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2497.243 CPU sec, 50.950 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10231, 534962, 5825, 7808)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (184, 983, 3782)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10978)
[M::mem_pestat] mean and std.dev: (2291.93, 2707.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14576)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (267, 318, 376)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (49, 594)
[M::mem_pestat] mean and std.dev: (322.65, 79.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 703)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1340, 3017, 5775)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14645)
[M::mem_pestat] mean and std.dev: (3694.57, 2765.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19080)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (491, 1969, 4768)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13322)
[M::mem_pestat] mean and std.dev: (2927.00, 2799.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17599)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2653.954 CPU sec, 54.235 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10566, 534044, 5885, 7952)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (179, 955, 3683)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10691)
[M::mem_pestat] mean and std.dev: (2276.29, 2727.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14195)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (267, 319, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 597)
[M::mem_pestat] mean and std.dev: (323.11, 79.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 707)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1305, 2941, 5602)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14196)
[M::mem_pestat] mean and std.dev: (3632.35, 2741.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18493)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (508, 1981, 4706)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13102)
[M::mem_pestat] mean and std.dev: (2930.90, 2791.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17300)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2488.638 CPU sec, 50.568 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10326, 535281, 5934, 7968)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (191, 1055, 3740)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10838)
[M::mem_pestat] mean and std.dev: (2320.36, 2716.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14387)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (267, 318, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 597)
[M::mem_pestat] mean and std.dev: (323.08, 79.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 707)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1310, 3012, 5701)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14483)
[M::mem_pestat] mean and std.dev: (3680.57, 2777.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18874)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (500, 1990, 4785)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13355)
[M::mem_pestat] mean and std.dev: (2939.85, 2805.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17640)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_process_seqs] Processed 3333334 reads in 2620.097 CPU sec, 57.846 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10307, 533028, 5772, 7952)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (184, 947, 3678)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10666)
[M::mem_pestat] mean and std.dev: (2263.69, 2691.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14160)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (267, 318, 376)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (49, 594)
[M::mem_pestat] mean and std.dev: (322.76, 79.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 703)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 3150, 5790)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14626)
[M::mem_pestat] mean and std.dev: (3734.17, 2747.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19044)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (513, 2107, 4785)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13329)
[M::mem_pestat] mean and std.dev: (2965.67, 2787.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17601)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2730.977 CPU sec, 58.148 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10147, 535036, 5848, 8038)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (196, 1109, 3933)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11407)
[M::mem_pestat] mean and std.dev: (2366.42, 2728.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15144)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (267, 319, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 597)
[M::mem_pestat] mean and std.dev: (323.01, 79.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 707)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1337, 3065, 5620)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14186)
[M::mem_pestat] mean and std.dev: (3667.97, 2705.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18469)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (512, 1994, 4799)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13373)
[M::mem_pestat] mean and std.dev: (2938.58, 2781.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17660)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2503.222 CPU sec, 52.834 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10336, 533955, 5858, 7988)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (187, 969, 3870)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11236)
[M::mem_pestat] mean and std.dev: (2303.41, 2718.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14919)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (267, 318, 376)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (49, 594)
[M::mem_pestat] mean and std.dev: (322.94, 79.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 703)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1325, 3137, 5769)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14657)
[M::mem_pestat] mean and std.dev: (3717.04, 2759.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19101)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (499, 2033, 4849)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13549)
[M::mem_pestat] mean and std.dev: (2963.28, 2815.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17899)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2674.176 CPU sec, 54.596 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10309, 535348, 5878, 8088)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (194, 1076, 3859)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11189)
[M::mem_pestat] mean and std.dev: (2350.26, 2734.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14854)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 319, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (50, 595)
[M::mem_pestat] mean and std.dev: (323.13, 79.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 704)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1298, 3024, 5780)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14744)
[M::mem_pestat] mean and std.dev: (3697.63, 2775.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19226)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (508, 1991, 4797)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13375)
[M::mem_pestat] mean and std.dev: (2949.51, 2803.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17664)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2465.053 CPU sec, 51.384 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10395, 534776, 5724, 7855)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (188, 1031, 3784)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10976)
[M::mem_pestat] mean and std.dev: (2295.98, 2691.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14572)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (267, 318, 376)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (49, 594)
[M::mem_pestat] mean and std.dev: (322.79, 79.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 703)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1325, 3061, 5868)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14954)
[M::mem_pestat] mean and std.dev: (3735.41, 2795.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19497)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (480, 1930, 4710)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13170)
[M::mem_pestat] mean and std.dev: (2885.39, 2771.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17400)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2661.151 CPU sec, 54.618 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10168, 535064, 5787, 7879)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (191, 1005, 3735)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10823)
[M::mem_pestat] mean and std.dev: (2285.24, 2693.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14367)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (267, 319, 376)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (49, 594)
[M::mem_pestat] mean and std.dev: (322.94, 79.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 703)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1325, 3070, 5694)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14432)
[M::mem_pestat] mean and std.dev: (3693.84, 2744.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18801)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (504, 1975, 4715)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13137)
[M::mem_pestat] mean and std.dev: (2921.57, 2780.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17348)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2455.210 CPU sec, 52.170 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10537, 534989, 5881, 8004)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (178, 944, 3656)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10612)
[M::mem_pestat] mean and std.dev: (2252.97, 2707.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14090)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (267, 318, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 597)
[M::mem_pestat] mean and std.dev: (322.98, 79.65)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 707)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1351, 3111, 5778)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14632)
[M::mem_pestat] mean and std.dev: (3732.01, 2764.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19059)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (484, 1942, 4803)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13441)
[M::mem_pestat] mean and std.dev: (2911.22, 2784.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17760)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2545.028 CPU sec, 55.645 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10278, 533992, 5749, 7969)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (192, 1053, 3740)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10836)
[M::mem_pestat] mean and std.dev: (2306.85, 2714.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14384)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (267, 318, 376)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (49, 594)
[M::mem_pestat] mean and std.dev: (322.86, 79.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 703)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1379, 3082, 5805)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14657)
[M::mem_pestat] mean and std.dev: (3752.56, 2766.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19083)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (452, 1950, 4720)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13256)
[M::mem_pestat] mean and std.dev: (2896.60, 2788.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17524)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2672.013 CPU sec, 60.003 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10767, 525739, 5883, 8151)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (187, 908, 3610)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10456)
[M::mem_pestat] mean and std.dev: (2257.89, 2715.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13879)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (271, 324, 384)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (45, 610)
[M::mem_pestat] mean and std.dev: (328.69, 81.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 723)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1279, 2961, 5715)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14587)
[M::mem_pestat] mean and std.dev: (3652.54, 2779.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19023)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (549, 2034, 4901)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13605)
[M::mem_pestat] mean and std.dev: (2993.23, 2818.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17957)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2656.815 CPU sec, 57.199 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10498, 520243, 5985, 8215)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (200, 1059, 3990)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11570)
[M::mem_pestat] mean and std.dev: (2383.19, 2776.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15360)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (273, 326, 386)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 612)
[M::mem_pestat] mean and std.dev: (330.28, 81.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 725)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1330, 3156, 5799)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14737)
[M::mem_pestat] mean and std.dev: (3717.45, 2754.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19206)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (537, 2039, 4835)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13431)
[M::mem_pestat] mean and std.dev: (2975.14, 2797.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17729)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2661.744 CPU sec, 57.267 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10525, 522067, 6030, 7995)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (187, 972, 3672)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10642)
[M::mem_pestat] mean and std.dev: (2259.32, 2689.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14127)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (273, 326, 386)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 612)
[M::mem_pestat] mean and std.dev: (330.34, 82.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 725)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1299, 3020, 5807)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14823)
[M::mem_pestat] mean and std.dev: (3717.34, 2795.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19331)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (494, 1986, 4771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13325)
[M::mem_pestat] mean and std.dev: (2936.24, 2800.65)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17602)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2508.650 CPU sec, 52.401 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10356, 519315, 5920, 8030)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (193, 1054, 3797)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11005)
[M::mem_pestat] mean and std.dev: (2315.77, 2713.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14609)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (272, 326, 386)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (44, 614)
[M::mem_pestat] mean and std.dev: (330.00, 81.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 728)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1398, 3120, 5818)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14658)
[M::mem_pestat] mean and std.dev: (3767.52, 2775.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19078)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (568, 2041, 4888)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13528)
[M::mem_pestat] mean and std.dev: (3002.44, 2804.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17848)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2693.186 CPU sec, 55.244 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10538, 520904, 6012, 8134)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (195, 1066, 3913)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11349)
[M::mem_pestat] mean and std.dev: (2337.72, 2724.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15067)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (273, 326, 386)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 612)
[M::mem_pestat] mean and std.dev: (330.38, 82.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 725)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1340, 3074, 5674)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14342)
[M::mem_pestat] mean and std.dev: (3676.12, 2728.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18676)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (513, 1989, 4739)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13191)
[M::mem_pestat] mean and std.dev: (2909.01, 2746.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17417)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2509.356 CPU sec, 53.887 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10386, 520650, 5997, 7955)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (196, 1039, 3908)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11332)
[M::mem_pestat] mean and std.dev: (2352.66, 2741.65)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15044)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (273, 326, 386)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 612)
[M::mem_pestat] mean and std.dev: (330.38, 81.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 725)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1352, 3098, 5757)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14567)
[M::mem_pestat] mean and std.dev: (3698.63, 2725.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18972)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (557, 2091, 4888)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13550)
[M::mem_pestat] mean and std.dev: (3016.19, 2811.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17881)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2747.056 CPU sec, 58.872 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10263, 521492, 6017, 8037)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (204, 1115, 3874)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11214)
[M::mem_pestat] mean and std.dev: (2353.20, 2718.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14884)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (273, 327, 386)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 612)
[M::mem_pestat] mean and std.dev: (330.61, 82.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 725)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1365, 3055, 5713)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14409)
[M::mem_pestat] mean and std.dev: (3708.63, 2760.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18757)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (512, 2054, 4735)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13181)
[M::mem_pestat] mean and std.dev: (2928.18, 2763.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17404)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_process_seqs] Processed 3333334 reads in 2573.880 CPU sec, 56.819 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10834, 521265, 6019, 8166)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (191, 1018, 3675)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10643)
[M::mem_pestat] mean and std.dev: (2252.27, 2641.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14127)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (273, 326, 386)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 612)
[M::mem_pestat] mean and std.dev: (330.37, 82.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 725)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1293, 2972, 5687)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14475)
[M::mem_pestat] mean and std.dev: (3668.84, 2768.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18869)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (540, 2036, 4854)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13482)
[M::mem_pestat] mean and std.dev: (2976.66, 2784.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17796)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2689.542 CPU sec, 56.680 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10481, 521265, 5899, 8115)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (199, 1003, 3665)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10597)
[M::mem_pestat] mean and std.dev: (2287.58, 2709.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14063)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (273, 326, 386)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 612)
[M::mem_pestat] mean and std.dev: (330.48, 81.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 725)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1331, 3061, 5771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14651)
[M::mem_pestat] mean and std.dev: (3687.03, 2731.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19091)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (544, 2061, 4855)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13477)
[M::mem_pestat] mean and std.dev: (2994.37, 2801.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17788)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2645.176 CPU sec, 55.431 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10632, 522694, 5961, 8073)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (188, 990, 3708)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10748)
[M::mem_pestat] mean and std.dev: (2284.63, 2710.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14268)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (273, 326, 386)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 612)
[M::mem_pestat] mean and std.dev: (330.41, 82.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 725)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1347, 3049, 5653)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14265)
[M::mem_pestat] mean and std.dev: (3677.45, 2747.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18571)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (539, 2085, 4829)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13409)
[M::mem_pestat] mean and std.dev: (2995.71, 2804.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17699)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2539.427 CPU sec, 52.152 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10672, 524297, 5968, 7958)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (186, 975, 3722)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10794)
[M::mem_pestat] mean and std.dev: (2273.04, 2700.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14330)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (271, 324, 383)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 607)
[M::mem_pestat] mean and std.dev: (327.78, 81.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 719)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1298, 2976, 5730)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14594)
[M::mem_pestat] mean and std.dev: (3662.37, 2767.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19026)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (529, 1979, 4849)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13489)
[M::mem_pestat] mean and std.dev: (2960.38, 2803.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17809)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2577.763 CPU sec, 53.017 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10789, 531115, 5891, 7950)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (176, 889, 3648)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10592)
[M::mem_pestat] mean and std.dev: (2227.38, 2692.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14064)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 378)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 598)
[M::mem_pestat] mean and std.dev: (324.25, 80.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 708)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1308, 3064, 5745)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14619)
[M::mem_pestat] mean and std.dev: (3722.03, 2779.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19056)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (545, 2105, 4944)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13742)
[M::mem_pestat] mean and std.dev: (3015.32, 2803.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18141)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_process_seqs] Processed 3333334 reads in 2668.694 CPU sec, 54.890 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10778, 530584, 5797, 7887)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (182, 953, 3872)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11252)
[M::mem_pestat] mean and std.dev: (2304.08, 2726.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14942)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (269, 321, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (49, 599)
[M::mem_pestat] mean and std.dev: (324.88, 80.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 709)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1323, 3082, 5709)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14481)
[M::mem_pestat] mean and std.dev: (3705.57, 2753.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18867)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (520, 2000, 4824)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13432)
[M::mem_pestat] mean and std.dev: (2965.42, 2805.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17736)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2670.261 CPU sec, 60.434 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10446, 530070, 5823, 7897)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (184, 900, 3639)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10549)
[M::mem_pestat] mean and std.dev: (2249.00, 2696.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14004)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 378)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 598)
[M::mem_pestat] mean and std.dev: (324.37, 80.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 708)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1325, 3054, 5706)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14468)
[M::mem_pestat] mean and std.dev: (3679.40, 2754.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18849)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (515, 1998, 4765)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13265)
[M::mem_pestat] mean and std.dev: (2937.14, 2786.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17515)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2696.949 CPU sec, 59.879 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10766, 531242, 5795, 7993)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (184, 879, 3611)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10465)
[M::mem_pestat] mean and std.dev: (2234.01, 2716.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13892)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 378)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 598)
[M::mem_pestat] mean and std.dev: (324.28, 80.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 708)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1309, 3044, 5659)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14359)
[M::mem_pestat] mean and std.dev: (3702.52, 2794.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18709)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (489, 1992, 4780)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13362)
[M::mem_pestat] mean and std.dev: (2926.83, 2776.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17653)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2707.206 CPU sec, 58.032 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10465, 530212, 6014, 7965)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (191, 993, 3726)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10796)
[M::mem_pestat] mean and std.dev: (2283.33, 2696.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14331)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 378)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 598)
[M::mem_pestat] mean and std.dev: (324.48, 80.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 708)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1355, 3116, 5779)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14627)
[M::mem_pestat] mean and std.dev: (3751.08, 2781.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19051)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (521, 2043, 4765)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13253)
[M::mem_pestat] mean and std.dev: (2938.10, 2780.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17497)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2718.090 CPU sec, 56.735 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10744, 531166, 5742, 7850)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (180, 830, 3568)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10344)
[M::mem_pestat] mean and std.dev: (2210.01, 2708.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13732)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 601)
[M::mem_pestat] mean and std.dev: (324.62, 80.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 712)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1353, 3064, 5621)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14157)
[M::mem_pestat] mean and std.dev: (3703.78, 2748.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18425)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (485, 2041, 4838)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13544)
[M::mem_pestat] mean and std.dev: (2961.47, 2803.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17897)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2577.709 CPU sec, 53.002 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10582, 529591, 5870, 7924)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (191, 978, 3698)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10712)
[M::mem_pestat] mean and std.dev: (2283.69, 2707.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14219)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 378)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 598)
[M::mem_pestat] mean and std.dev: (324.20, 80.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 708)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1338, 3067, 5794)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14706)
[M::mem_pestat] mean and std.dev: (3706.77, 2753.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19162)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (540, 1998, 4718)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13074)
[M::mem_pestat] mean and std.dev: (2938.14, 2768.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17252)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2744.578 CPU sec, 56.995 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10621, 531609, 5882, 7858)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (185, 964, 3771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10943)
[M::mem_pestat] mean and std.dev: (2284.21, 2713.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14529)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 601)
[M::mem_pestat] mean and std.dev: (324.66, 80.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 712)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1298, 3091, 5734)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14606)
[M::mem_pestat] mean and std.dev: (3715.27, 2763.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19042)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (536, 2056, 5001)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13931)
[M::mem_pestat] mean and std.dev: (3032.09, 2848.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18396)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_process_seqs] Processed 3333334 reads in 2511.841 CPU sec, 52.571 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10746, 530684, 5808, 7864)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (177, 949, 3693)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10725)
[M::mem_pestat] mean and std.dev: (2265.81, 2716.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14241)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 601)
[M::mem_pestat] mean and std.dev: (324.56, 80.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 712)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1240, 2876, 5457)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13891)
[M::mem_pestat] mean and std.dev: (3547.73, 2691.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18108)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (481, 2010, 4702)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13144)
[M::mem_pestat] mean and std.dev: (2906.53, 2769.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17365)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_process_seqs] Processed 3333334 reads in 2666.841 CPU sec, 58.208 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10584, 531045, 5831, 7946)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (178, 933, 3736)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10852)
[M::mem_pestat] mean and std.dev: (2265.06, 2715.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14410)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 601)
[M::mem_pestat] mean and std.dev: (324.63, 80.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 712)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1329, 2952, 5784)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14694)
[M::mem_pestat] mean and std.dev: (3694.94, 2795.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19149)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (491, 2024, 4785)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13373)
[M::mem_pestat] mean and std.dev: (2941.16, 2791.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17667)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2610.625 CPU sec, 53.384 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10875, 530454, 5932, 8106)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (180, 906, 3683)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10689)
[M::mem_pestat] mean and std.dev: (2258.27, 2712.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14192)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 321, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 601)
[M::mem_pestat] mean and std.dev: (324.77, 80.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 712)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1331, 2962, 5732)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14534)
[M::mem_pestat] mean and std.dev: (3691.27, 2782.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18935)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (471, 1936, 4726)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13236)
[M::mem_pestat] mean and std.dev: (2906.92, 2788.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17491)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2619.464 CPU sec, 56.898 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10570, 530744, 5974, 7853)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (185, 962, 3669)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10637)
[M::mem_pestat] mean and std.dev: (2255.99, 2682.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14121)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 321, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 601)
[M::mem_pestat] mean and std.dev: (324.80, 80.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 712)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1412, 3033, 5835)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14681)
[M::mem_pestat] mean and std.dev: (3739.60, 2755.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19104)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (546, 2016, 4920)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13668)
[M::mem_pestat] mean and std.dev: (2997.68, 2820.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18042)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2635.287 CPU sec, 53.791 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10668, 530146, 6027, 8109)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (185, 929, 3741)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10853)
[M::mem_pestat] mean and std.dev: (2285.43, 2730.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14409)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (269, 321, 380)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 602)
[M::mem_pestat] mean and std.dev: (325.25, 80.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 713)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1275, 2994, 5820)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14910)
[M::mem_pestat] mean and std.dev: (3678.09, 2769.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19455)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (526, 2005, 4771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13261)
[M::mem_pestat] mean and std.dev: (2955.97, 2808.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17506)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2438.950 CPU sec, 49.715 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10506, 530652, 5863, 7852)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (195, 1022, 3790)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10980)
[M::mem_pestat] mean and std.dev: (2322.96, 2719.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14575)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 321, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 601)
[M::mem_pestat] mean and std.dev: (324.92, 80.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 712)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1312, 3066, 5753)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14635)
[M::mem_pestat] mean and std.dev: (3715.35, 2777.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19076)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (525, 1958, 4819)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13407)
[M::mem_pestat] mean and std.dev: (2940.61, 2782.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17701)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2740.295 CPU sec, 56.609 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10647, 531169, 5700, 7996)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (184, 926, 3655)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10597)
[M::mem_pestat] mean and std.dev: (2253.25, 2710.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14068)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 601)
[M::mem_pestat] mean and std.dev: (324.55, 80.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 712)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1353, 3092, 5750)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14544)
[M::mem_pestat] mean and std.dev: (3714.26, 2766.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18941)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (544, 1986, 4631)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12805)
[M::mem_pestat] mean and std.dev: (2909.33, 2747.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16892)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_process_seqs] Processed 3333334 reads in 2691.847 CPU sec, 55.587 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10428, 528984, 5929, 8056)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (191, 991, 3760)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10898)
[M::mem_pestat] mean and std.dev: (2308.86, 2732.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14467)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 321, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 601)
[M::mem_pestat] mean and std.dev: (324.89, 80.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 712)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1285, 3008, 5748)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14674)
[M::mem_pestat] mean and std.dev: (3692.64, 2786.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19137)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (533, 2039, 4767)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13235)
[M::mem_pestat] mean and std.dev: (2968.26, 2798.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17469)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2706.396 CPU sec, 58.368 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10639, 530314, 5939, 8023)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (186, 947, 3698)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10722)
[M::mem_pestat] mean and std.dev: (2270.47, 2703.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14234)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (269, 321, 380)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 602)
[M::mem_pestat] mean and std.dev: (325.14, 80.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 713)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1355, 3081, 5739)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14507)
[M::mem_pestat] mean and std.dev: (3720.69, 2752.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18891)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (503, 1984, 4737)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13205)
[M::mem_pestat] mean and std.dev: (2924.05, 2792.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17439)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2545.142 CPU sec, 51.768 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10321, 530659, 5890, 8081)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (195, 1054, 3751)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10863)
[M::mem_pestat] mean and std.dev: (2332.11, 2728.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14419)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (269, 321, 380)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 602)
[M::mem_pestat] mean and std.dev: (325.01, 80.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 713)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1319, 3023, 5700)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14462)
[M::mem_pestat] mean and std.dev: (3663.87, 2732.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18843)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (517, 2048, 4784)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13318)
[M::mem_pestat] mean and std.dev: (2954.75, 2798.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17585)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2703.798 CPU sec, 56.024 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10793, 530472, 5868, 8101)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (183, 951, 3601)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10437)
[M::mem_pestat] mean and std.dev: (2234.95, 2671.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13855)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (269, 321, 380)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 602)
[M::mem_pestat] mean and std.dev: (325.12, 80.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 713)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1367, 3075, 5875)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14891)
[M::mem_pestat] mean and std.dev: (3761.86, 2787.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19399)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (528, 2011, 4881)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13587)
[M::mem_pestat] mean and std.dev: (2963.96, 2794.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17940)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2646.420 CPU sec, 58.472 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10688, 529788, 5946, 7833)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (183, 984, 3792)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11010)
[M::mem_pestat] mean and std.dev: (2295.01, 2708.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14619)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 321, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 601)
[M::mem_pestat] mean and std.dev: (324.95, 80.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 712)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1318, 3034, 5718)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14518)
[M::mem_pestat] mean and std.dev: (3680.18, 2765.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18918)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (501, 1989, 4832)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13494)
[M::mem_pestat] mean and std.dev: (2950.26, 2801.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17825)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2371.726 CPU sec, 50.542 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10653, 530500, 5982, 7902)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (176, 911, 3655)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10613)
[M::mem_pestat] mean and std.dev: (2243.67, 2699.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14092)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 321, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 601)
[M::mem_pestat] mean and std.dev: (324.75, 80.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 712)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1324, 3088, 5767)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14653)
[M::mem_pestat] mean and std.dev: (3718.13, 2776.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19096)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (493, 1967, 4739)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13231)
[M::mem_pestat] mean and std.dev: (2934.35, 2805.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2429.319 CPU sec, 50.091 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10546, 526935, 5825, 7936)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (194, 1071, 3856)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11180)
[M::mem_pestat] mean and std.dev: (2339.19, 2717.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14842)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (269, 322, 381)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (45, 605)
[M::mem_pestat] mean and std.dev: (325.91, 80.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 717)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1378, 3015, 5793)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14623)
[M::mem_pestat] mean and std.dev: (3720.16, 2764.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19038)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (496, 1967, 4672)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13024)
[M::mem_pestat] mean and std.dev: (2895.34, 2759.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17200)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2354.066 CPU sec, 48.289 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10471, 525849, 6000, 7972)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (183, 920, 3582)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10380)
[M::mem_pestat] mean and std.dev: (2221.00, 2671.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13779)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (271, 324, 384)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (45, 610)
[M::mem_pestat] mean and std.dev: (328.64, 81.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 723)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1385, 3114, 5783)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14579)
[M::mem_pestat] mean and std.dev: (3751.21, 2780.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18977)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (565, 2031, 4778)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13204)
[M::mem_pestat] mean and std.dev: (2957.26, 2762.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17417)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2526.148 CPU sec, 51.636 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10565, 524429, 5894, 8097)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (188, 998, 3706)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10742)
[M::mem_pestat] mean and std.dev: (2280.16, 2690.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14260)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (272, 325, 384)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 608)
[M::mem_pestat] mean and std.dev: (328.65, 81.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 720)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1345, 3080, 5874)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14932)
[M::mem_pestat] mean and std.dev: (3767.79, 2805.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19461)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (523, 2033, 4853)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13513)
[M::mem_pestat] mean and std.dev: (2971.51, 2794.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17843)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2097.178 CPU sec, 42.534 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10553, 525651, 5987, 7832)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (192, 1098, 3844)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11148)
[M::mem_pestat] mean and std.dev: (2340.34, 2704.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14800)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (272, 325, 384)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 608)
[M::mem_pestat] mean and std.dev: (328.99, 81.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 720)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1335, 3108, 5790)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14700)
[M::mem_pestat] mean and std.dev: (3730.28, 2771.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19155)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (510, 2014, 4837)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13491)
[M::mem_pestat] mean and std.dev: (2962.19, 2794.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17818)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 1854.164 CPU sec, 39.749 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10373, 525327, 5845, 7937)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (196, 1043, 3806)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11026)
[M::mem_pestat] mean and std.dev: (2309.32, 2694.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14636)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (271, 324, 384)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (45, 610)
[M::mem_pestat] mean and std.dev: (328.44, 81.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 723)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1287, 3054, 5698)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14520)
[M::mem_pestat] mean and std.dev: (3659.59, 2727.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18931)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (546, 2043, 4835)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13413)
[M::mem_pestat] mean and std.dev: (2970.91, 2790.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17702)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2133.667 CPU sec, 43.538 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10367, 524860, 5794, 8008)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (204, 1147, 3974)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11514)
[M::mem_pestat] mean and std.dev: (2388.25, 2729.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15284)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (271, 324, 384)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (45, 610)
[M::mem_pestat] mean and std.dev: (328.53, 81.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 723)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1319, 3004, 5799)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14759)
[M::mem_pestat] mean and std.dev: (3704.44, 2788.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19239)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (495, 1975, 4896)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13698)
[M::mem_pestat] mean and std.dev: (2954.31, 2812.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18099)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2637.875 CPU sec, 70.965 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10432, 524503, 5926, 7977)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (197, 1014, 3734)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10808)
[M::mem_pestat] mean and std.dev: (2299.87, 2707.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14345)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (272, 325, 384)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 608)
[M::mem_pestat] mean and std.dev: (328.96, 81.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 720)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1339, 3064, 5765)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14617)
[M::mem_pestat] mean and std.dev: (3708.46, 2750.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19043)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (573, 2063, 4837)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13365)
[M::mem_pestat] mean and std.dev: (2993.83, 2808.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17629)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2842.482 CPU sec, 58.275 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10188, 525106, 5973, 7982)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (199, 1065, 3761)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10885)
[M::mem_pestat] mean and std.dev: (2316.75, 2701.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14447)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (272, 325, 384)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 608)
[M::mem_pestat] mean and std.dev: (328.78, 81.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 720)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1324, 3107, 5722)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14518)
[M::mem_pestat] mean and std.dev: (3706.79, 2755.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18916)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (524, 2010, 4798)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13346)
[M::mem_pestat] mean and std.dev: (2943.29, 2785.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17620)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2516.562 CPU sec, 51.306 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10492, 524534, 6028, 8156)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (193, 1018, 3686)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10672)
[M::mem_pestat] mean and std.dev: (2287.56, 2699.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14165)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (272, 324, 384)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 608)
[M::mem_pestat] mean and std.dev: (328.57, 81.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 720)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1341, 2968, 5575)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14043)
[M::mem_pestat] mean and std.dev: (3640.13, 2738.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18277)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (533, 2046, 4978)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13868)
[M::mem_pestat] mean and std.dev: (3006.62, 2829.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18313)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2466.437 CPU sec, 50.045 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10284, 523800, 6006, 8141)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (201, 1106, 3865)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11193)
[M::mem_pestat] mean and std.dev: (2360.02, 2703.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14857)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (272, 325, 384)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 608)
[M::mem_pestat] mean and std.dev: (328.77, 81.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 720)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1326, 3071, 5808)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14772)
[M::mem_pestat] mean and std.dev: (3730.78, 2767.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19254)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (521, 1987, 4879)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13595)
[M::mem_pestat] mean and std.dev: (2954.07, 2801.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17953)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2493.244 CPU sec, 50.608 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10628, 525714, 5979, 7978)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (187, 985, 3623)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10495)
[M::mem_pestat] mean and std.dev: (2241.03, 2669.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13931)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (272, 324, 384)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 608)
[M::mem_pestat] mean and std.dev: (328.60, 81.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 720)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1366, 3121, 5741)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14491)
[M::mem_pestat] mean and std.dev: (3732.27, 2761.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18866)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (526, 2040, 4810)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13378)
[M::mem_pestat] mean and std.dev: (2960.27, 2796.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17662)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2311.435 CPU sec, 47.057 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10361, 524885, 5919, 7996)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (197, 1035, 3779)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10943)
[M::mem_pestat] mean and std.dev: (2310.88, 2709.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14525)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (271, 324, 384)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (45, 610)
[M::mem_pestat] mean and std.dev: (328.50, 81.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 723)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1355, 3115, 5907)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 15011)
[M::mem_pestat] mean and std.dev: (3758.53, 2782.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19563)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (535, 2108, 4842)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13456)
[M::mem_pestat] mean and std.dev: (2989.84, 2796.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17763)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2623.862 CPU sec, 53.344 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10892, 526396, 5876, 8100)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (190, 1015, 3766)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10918)
[M::mem_pestat] mean and std.dev: (2320.48, 2741.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14494)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (326.68, 81.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1276, 2991, 5674)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14470)
[M::mem_pestat] mean and std.dev: (3647.14, 2769.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18868)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (563, 2096, 4838)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13388)
[M::mem_pestat] mean and std.dev: (2989.73, 2783.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17663)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2455.272 CPU sec, 52.393 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10380, 524050, 5901, 7890)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (192, 1074, 3803)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11025)
[M::mem_pestat] mean and std.dev: (2336.81, 2730.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14636)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (326.86, 81.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1369, 3055, 5759)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14539)
[M::mem_pestat] mean and std.dev: (3714.02, 2759.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18929)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (499, 2022, 4763)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13291)
[M::mem_pestat] mean and std.dev: (2921.82, 2761.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17555)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2500.845 CPU sec, 54.504 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10583, 526328, 5905, 7975)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (191, 1011, 3722)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10784)
[M::mem_pestat] mean and std.dev: (2294.07, 2704.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14315)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (327.06, 81.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1338, 3094, 5654)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14286)
[M::mem_pestat] mean and std.dev: (3696.84, 2740.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18602)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (501, 2050, 4862)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13584)
[M::mem_pestat] mean and std.dev: (2975.76, 2821.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17945)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2566.529 CPU sec, 52.945 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10209, 524743, 5932, 8209)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (203, 1101, 3859)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11171)
[M::mem_pestat] mean and std.dev: (2347.39, 2711.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14827)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (326.90, 81.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1320, 3065, 5813)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14799)
[M::mem_pestat] mean and std.dev: (3729.54, 2780.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19292)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (535, 2077, 4894)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13612)
[M::mem_pestat] mean and std.dev: (3004.29, 2804.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17971)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2443.163 CPU sec, 50.616 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10159, 525398, 5831, 8064)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (194, 1009, 3694)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10694)
[M::mem_pestat] mean and std.dev: (2296.50, 2714.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14194)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (269, 322, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (43, 608)
[M::mem_pestat] mean and std.dev: (326.55, 81.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 721)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1300, 3067, 5796)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14788)
[M::mem_pestat] mean and std.dev: (3707.19, 2767.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19284)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (534, 2059, 4894)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13614)
[M::mem_pestat] mean and std.dev: (2989.84, 2818.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17974)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2736.207 CPU sec, 55.958 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10362, 526591, 5806, 7921)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (200, 1108, 3826)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11078)
[M::mem_pestat] mean and std.dev: (2364.68, 2733.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14704)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (326.93, 81.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1374, 3101, 5780)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14592)
[M::mem_pestat] mean and std.dev: (3731.63, 2745.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18998)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (503, 1970, 4788)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13358)
[M::mem_pestat] mean and std.dev: (2935.92, 2797.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17643)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2504.145 CPU sec, 50.966 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10459, 525931, 5817, 7961)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (194, 1044, 3818)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11066)
[M::mem_pestat] mean and std.dev: (2311.02, 2691.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14690)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (327.07, 81.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1312, 3060, 5657)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14347)
[M::mem_pestat] mean and std.dev: (3679.80, 2749.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18692)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (504, 2041, 4814)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13434)
[M::mem_pestat] mean and std.dev: (2962.10, 2803.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17744)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2524.600 CPU sec, 51.169 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10347, 525548, 5970, 7952)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (198, 1095, 3875)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11229)
[M::mem_pestat] mean and std.dev: (2362.94, 2744.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14906)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (326.94, 81.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1352, 3073, 5754)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14558)
[M::mem_pestat] mean and std.dev: (3734.87, 2783.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18960)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (541, 2032, 4818)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13372)
[M::mem_pestat] mean and std.dev: (2951.83, 2776.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17649)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2499.857 CPU sec, 50.604 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10530, 525724, 5801, 8006)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (197, 1082, 3935)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11411)
[M::mem_pestat] mean and std.dev: (2358.61, 2721.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15149)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (327.02, 81.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1330, 3061, 5773)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14659)
[M::mem_pestat] mean and std.dev: (3695.72, 2738.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19102)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (548, 2082, 4780)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13244)
[M::mem_pestat] mean and std.dev: (2972.88, 2781.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17476)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2398.450 CPU sec, 48.580 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10303, 526646, 5860, 8064)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (205, 1095, 3906)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11308)
[M::mem_pestat] mean and std.dev: (2368.16, 2729.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15009)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (326.79, 81.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1349, 3077, 5791)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14675)
[M::mem_pestat] mean and std.dev: (3723.16, 2764.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19117)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (541, 2008, 4805)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13333)
[M::mem_pestat] mean and std.dev: (2972.04, 2800.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17597)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2533.053 CPU sec, 51.421 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10483, 526374, 5845, 7992)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (193, 986, 3798)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11008)
[M::mem_pestat] mean and std.dev: (2316.94, 2737.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14613)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (326.89, 81.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1314, 3052, 5742)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14598)
[M::mem_pestat] mean and std.dev: (3700.01, 2769.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19026)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (511, 2068, 4875)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13603)
[M::mem_pestat] mean and std.dev: (2984.01, 2802.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17967)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2894.065 CPU sec, 64.376 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10531, 527198, 5894, 8119)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (194, 1017, 3755)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10877)
[M::mem_pestat] mean and std.dev: (2306.68, 2716.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14438)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (327.08, 81.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1317, 3082, 5839)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14883)
[M::mem_pestat] mean and std.dev: (3727.60, 2788.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19405)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (538, 2061, 4823)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13393)
[M::mem_pestat] mean and std.dev: (2977.75, 2784.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17678)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2998.738 CPU sec, 88.402 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10945, 528031, 5867, 8084)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (185, 1009, 3792)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11006)
[M::mem_pestat] mean and std.dev: (2306.00, 2709.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14613)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (269, 321, 380)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 602)
[M::mem_pestat] mean and std.dev: (325.17, 80.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 713)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1326, 3116, 5789)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14715)
[M::mem_pestat] mean and std.dev: (3741.28, 2789.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19178)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (526, 2081, 4811)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13381)
[M::mem_pestat] mean and std.dev: (2974.28, 2793.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17666)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2922.529 CPU sec, 63.554 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10543, 531751, 5817, 7973)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (182, 897, 3624)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10508)
[M::mem_pestat] mean and std.dev: (2220.45, 2683.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13950)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 378)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 598)
[M::mem_pestat] mean and std.dev: (323.63, 80.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 708)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1237, 3042, 5807)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14947)
[M::mem_pestat] mean and std.dev: (3683.11, 2780.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19517)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (514, 2046, 4792)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13348)
[M::mem_pestat] mean and std.dev: (2950.85, 2771.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17626)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2819.026 CPU sec, 57.351 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10746, 532462, 6001, 8067)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (176, 868, 3612)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10484)
[M::mem_pestat] mean and std.dev: (2214.83, 2699.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13920)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 378)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 598)
[M::mem_pestat] mean and std.dev: (323.87, 80.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 708)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1347, 3061, 5796)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14694)
[M::mem_pestat] mean and std.dev: (3703.34, 2764.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19143)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (485, 1984, 4822)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13496)
[M::mem_pestat] mean and std.dev: (2932.47, 2803.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17833)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2529.226 CPU sec, 51.395 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10498, 530022, 5827, 7986)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (190, 1040, 3753)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10879)
[M::mem_pestat] mean and std.dev: (2318.88, 2715.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14442)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 319, 378)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 598)
[M::mem_pestat] mean and std.dev: (323.49, 80.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 708)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1338, 3165, 5887)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14985)
[M::mem_pestat] mean and std.dev: (3775.94, 2774.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19534)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (513, 2076, 4826)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13452)
[M::mem_pestat] mean and std.dev: (2969.34, 2804.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17765)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2746.583 CPU sec, 56.563 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10774, 532541, 5771, 7928)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (180, 920, 3710)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10770)
[M::mem_pestat] mean and std.dev: (2268.08, 2709.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14300)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (267, 319, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 597)
[M::mem_pestat] mean and std.dev: (323.34, 80.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 707)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1271, 2992, 5615)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14303)
[M::mem_pestat] mean and std.dev: (3652.06, 2766.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18647)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (524, 2115, 4906)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13670)
[M::mem_pestat] mean and std.dev: (3001.15, 2794.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18052)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2471.471 CPU sec, 50.247 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10520, 530792, 5819, 7850)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (191, 1077, 3885)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11273)
[M::mem_pestat] mean and std.dev: (2351.31, 2732.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14967)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 319, 378)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 598)
[M::mem_pestat] mean and std.dev: (323.60, 79.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 708)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1348, 3043, 5685)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14359)
[M::mem_pestat] mean and std.dev: (3685.51, 2734.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18696)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (505, 1995, 4857)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13561)
[M::mem_pestat] mean and std.dev: (2960.53, 2819.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17913)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2608.291 CPU sec, 52.895 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10910, 531990, 5829, 8063)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (181, 960, 3699)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10735)
[M::mem_pestat] mean and std.dev: (2269.54, 2719.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14253)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 319, 378)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 598)
[M::mem_pestat] mean and std.dev: (323.87, 80.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 708)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1366, 3059, 5832)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14764)
[M::mem_pestat] mean and std.dev: (3744.73, 2763.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19230)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (511, 2021, 4841)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13501)
[M::mem_pestat] mean and std.dev: (2961.40, 2798.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17831)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2647.183 CPU sec, 53.918 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10518, 532102, 5772, 8030)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (184, 961, 3636)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10540)
[M::mem_pestat] mean and std.dev: (2265.40, 2706.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13992)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 378)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 598)
[M::mem_pestat] mean and std.dev: (323.73, 80.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 708)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1307, 2940, 5654)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14348)
[M::mem_pestat] mean and std.dev: (3646.65, 2756.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18695)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (518, 2068, 4888)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13628)
[M::mem_pestat] mean and std.dev: (2970.86, 2794.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17998)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2527.365 CPU sec, 51.313 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10631, 532154, 5788, 8050)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (179, 947, 3552)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10298)
[M::mem_pestat] mean and std.dev: (2225.15, 2670.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13671)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 378)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 598)
[M::mem_pestat] mean and std.dev: (323.94, 80.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 708)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1342, 3066, 5802)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14722)
[M::mem_pestat] mean and std.dev: (3722.13, 2780.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19182)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (479, 2033, 4836)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13550)
[M::mem_pestat] mean and std.dev: (2955.06, 2800.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17907)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2606.032 CPU sec, 53.275 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10697, 530504, 5751, 7923)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (184, 985, 3732)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10828)
[M::mem_pestat] mean and std.dev: (2292.07, 2719.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14376)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 319, 378)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 598)
[M::mem_pestat] mean and std.dev: (323.69, 80.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 708)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1346, 3022, 5736)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14516)
[M::mem_pestat] mean and std.dev: (3682.55, 2752.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18906)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (495, 2021, 4710)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13140)
[M::mem_pestat] mean and std.dev: (2929.75, 2782.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17355)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2404.798 CPU sec, 48.911 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10573, 531921, 5835, 7925)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (182, 942, 3662)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10622)
[M::mem_pestat] mean and std.dev: (2252.97, 2692.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14102)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 319, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (50, 595)
[M::mem_pestat] mean and std.dev: (323.58, 80.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 704)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1248, 3004, 5848)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 15048)
[M::mem_pestat] mean and std.dev: (3677.79, 2803.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19648)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (495, 1947, 4715)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13155)
[M::mem_pestat] mean and std.dev: (2897.92, 2776.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17375)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2641.109 CPU sec, 53.538 real sec
[M::process] read 3256594 sequences (488489100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9353, 519856, 5579, 7800)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (226, 1262, 3985)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11503)
[M::mem_pestat] mean and std.dev: (2440.82, 2721.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15262)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (269, 321, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (49, 599)
[M::mem_pestat] mean and std.dev: (325.01, 80.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 709)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1348, 3148, 5806)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14722)
[M::mem_pestat] mean and std.dev: (3768.85, 2789.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19180)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (573, 2070, 4791)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13227)
[M::mem_pestat] mean and std.dev: (2977.18, 2780.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17445)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2409.033 CPU sec, 49.034 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9146, 514925, 5869, 7642)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (246, 1396, 4090)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11778)
[M::mem_pestat] mean and std.dev: (2513.51, 2739.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15622)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 322, 380)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (50, 600)
[M::mem_pestat] mean and std.dev: (325.54, 79.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 710)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1350, 3067, 5720)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14460)
[M::mem_pestat] mean and std.dev: (3696.53, 2740.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18830)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (600, 2137, 4876)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13428)
[M::mem_pestat] mean and std.dev: (3039.12, 2802.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17704)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3256594 reads in 2620.402 CPU sec, 53.649 real sec
[main] Version: 0.7.17-r1188
[main] CMD: bwa mem -t 50 seq.fasta Lib_R1.fastq.gz Lib_R2.fastq.gz
[main] Real time: 5167.973 sec; CPU: 234883.359 sec
[bam_sort_core] merging from 150 files and 50 in-memory blocks...
[32m[12:36:21][0m Reading mapping
[32m[12:36:21][0m Running pipeline
[32m[12:36:21][0m 	Contig: tig00000616_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00000616_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00000616_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00000616_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:36:22][0m 	Contig: tig00000616_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:22][0m 	Contig: tig00031592_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00031592_pilon_pilon_pilon Could not found mapping list
[32m[12:36:22][0m 	Contig: tig00031594_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00031594_pilon_pilon_pilon Could not found mapping list
[32m[12:36:22][0m 	Contig: tig00031596_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00031596_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00031596_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00031596_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031598_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00031598_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00031598_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00031598_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00241100_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00241100_pilon_pilon_pilon Could not found mapping list
[32m[12:36:22][0m 	Contig: tig00241101_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00241101_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00241101_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00241101_pilon_pilon_pilon Could not found mismatch
[32m[12:36:23][0m 	Contig: tig00241102_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00241102_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00241102_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00241102_pilon_pilon_pilon Could not found mismatch
[32m[12:36:23][0m 	Contig: tig00241103_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00241103_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00241103_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00241103_pilon_pilon_pilon Could not found mismatch
[32m[12:36:23][0m 	Contig: tig00241105_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00241105_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00241105_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00241105_pilon_pilon_pilon Could not found mismatch
[32m[12:36:23][0m 	Contig: tig00241106_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00241106_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00241106_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00241106_pilon_pilon_pilon Could not found mismatch
[32m[12:36:23][0m 	Contig: tig00241111_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00241111_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00241111_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00241111_pilon_pilon_pilon Could not found mismatch
[32m[12:36:23][0m 	Contig: tig00241113_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00241113_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00241113_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00241113_pilon_pilon_pilon Could not found mismatch
[32m[12:36:23][0m 	Contig: tig00241114_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00241114_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00241114_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00241114_pilon_pilon_pilon Could not found mismatch
[32m[12:36:23][0m 	Contig: tig00241118_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00241118_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00241118_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00241118_pilon_pilon_pilon Could not found mismatch
[32m[12:36:23][0m 	Contig: tig00241121_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00241121_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00241121_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00241121_pilon_pilon_pilon Could not found mismatch
[32m[12:36:23][0m 	Contig: tig00241123_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00241123_pilon_pilon_pilon Could not found mapping list
[32m[12:36:21][0m 	Contig: tig00001856_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00001856_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00001856_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00001856_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00002340_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00002340_pilon_pilon_pilon Could not found mapping list
[32m[12:36:21][0m 	Contig: tig00002359_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00002359_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00002359_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00002359_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031569_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00031569_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00031569_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00031569_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:36:23][0m 	Contig: tig00031569_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:21][0m 	Contig: tig00000572_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00000572_pilon_pilon_pilon Could not found mapping list
[32m[12:36:21][0m 	Contig: tig00001987_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00001987_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00001987_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00001987_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:36:23][0m 	Contig: tig00001987_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:23][0m 	Contig: tig00241124_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00241124_pilon_pilon_pilon Could not found mapping list
[32m[12:36:21][0m 	Contig: tig00000303_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00000303_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00000303_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00000303_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:36:22][0m 	Contig: tig00000303_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:22][0m 	Contig: tig00031593_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00031593_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00031593_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00031593_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00241096_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00241096_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00241096_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00241096_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00241098_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00241098_pilon_pilon_pilon Could not found mapping list
[32m[12:36:22][0m 	Contig: tig00241099_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00241099_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00241099_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00241099_pilon_pilon_pilon Could not found mismatch
[32m[12:36:23][0m 	Contig: tig00241108_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00241108_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00241108_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00241108_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00001613_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00001613_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00001613_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00001613_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00002008_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00002008_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00002008_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00002008_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00002066_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00002066_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00002066_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00002066_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031586_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00031586_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00031586_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00031586_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00000686_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00000686_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00000686_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00000686_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00002201_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00002201_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00002201_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00002201_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00000327_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00000327_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00000327_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00000327_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00002009_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00002009_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00002009_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00002009_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00002124_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00002124_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00002124_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00002124_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00002274_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00002274_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00002274_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00002274_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00000186_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00000186_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00000186_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00000186_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00002258_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00002258_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00002258_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00002258_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00002521_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00002521_pilon_pilon_pilon Could not found mapping list
[32m[12:36:21][0m 	Contig: tig00008901_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00008901_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00008901_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00008901_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00013558_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00013558_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00013558_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00013558_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00016880_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00016880_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00016880_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00016880_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00021570_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00021570_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00021570_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00021570_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00025561_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00025561_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00025561_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00025561_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031553_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00031553_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00031553_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00031553_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031581_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00031581_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00031581_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00031581_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00000688_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00000688_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00000688_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00000688_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00002236_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00002236_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00002236_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00002236_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031585_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00031585_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00031585_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00031585_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031595_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00031595_pilon_pilon_pilon Could not found mapping list
[32m[12:36:22][0m 	Contig: tig00031597_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00031597_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00031597_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00031597_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:36:23][0m 	Contig: tig00031597_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:21][0m 	Contig: tig00000109_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00000109_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00000109_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00000109_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00002012_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00002012_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00002012_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00002012_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:36:22][0m 	Contig: tig00002012_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:22][0m 	Contig: tig00031588_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00031588_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00031588_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00031588_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031591_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00031591_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00031591_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00031591_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:36:23][0m 	Contig: tig00031591_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:21][0m 	Contig: tig00000977_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00000977_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00000977_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00000977_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00001915_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00001915_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00001915_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00001915_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00000613_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00000613_pilon_pilon_pilon Could not found mapping list
[32m[12:36:21][0m 	Contig: tig00001894_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00001894_pilon_pilon_pilon Could not found mapping list
[32m[12:36:22][0m 	Contig: tig00030374_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00030374_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00030374_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00030374_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031563_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00031563_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00031563_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00031563_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:36:23][0m 	Contig: tig00031563_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:21][0m 	Contig: tig00001378_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00001378_pilon_pilon_pilon Could not found mapping list
[32m[12:36:21][0m 	Contig: tig00002011_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00002011_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00002011_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00002011_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031583_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00031583_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:24][0m 	Contig: tig00031583_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:24][0m 	Contig: tig00031583_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00001861_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00001861_pilon_pilon_pilon Could not found mapping list
[32m[12:36:21][0m 	Contig: tig00002468_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00002468_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00002468_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00002468_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00006100_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00006100_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00006100_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00006100_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00010097_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00010097_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00010097_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00010097_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00014678_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00014678_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00014678_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00014678_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00020191_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00020191_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00020191_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00020191_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00023415_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00023415_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00023415_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00023415_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00025771_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00025771_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00025771_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00025771_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031548_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00031548_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00031548_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00031548_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031579_pilon_pilon_pilon Getting mapping list
[32m[12:36:24][0m 	Contig: tig00031579_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:24][0m 	Contig: tig00031579_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:24][0m 	Contig: tig00031579_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00001890_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00001890_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00001890_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00001890_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00002439_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00002439_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00002439_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00002439_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00006878_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00006878_pilon_pilon_pilon Could not found mapping list
[32m[12:36:21][0m 	Contig: tig00009039_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00009039_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00009039_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00009039_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00013929_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00013929_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00013929_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00013929_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00017223_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00017223_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00017223_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00017223_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00023478_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00023478_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00023478_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00023478_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00025907_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00025907_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00025907_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00025907_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031555_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00031555_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00031555_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00031555_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:36:24][0m 	Contig: tig00031555_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:24][0m 	Contig: tig00031555_pilon_pilon_pilon Wide mismatch without update
[32m[12:36:21][0m 	Contig: tig00000281_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00000281_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00000281_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00000281_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00002409_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00002409_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00002409_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00002409_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00007720_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00007720_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00007720_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00007720_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00012671_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00012671_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00012671_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00012671_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00017685_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00017685_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00017685_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00017685_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00023013_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00023013_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00023013_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00023013_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00029519_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00029519_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00029519_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00029519_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031567_pilon_pilon_pilon Getting mapping list
[32m[12:36:24][0m 	Contig: tig00031567_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:24][0m 	Contig: tig00031567_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:24][0m 	Contig: tig00031567_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00000777_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00000777_pilon_pilon_pilon Could not found mapping list
[32m[12:36:21][0m 	Contig: tig00001921_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00001921_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00001921_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00001921_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031577_pilon_pilon_pilon Getting mapping list
[32m[12:36:25][0m 	Contig: tig00031577_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:25][0m 	Contig: tig00031577_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:25][0m 	Contig: tig00031577_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00001289_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00001289_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00001289_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00001289_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00001973_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00001973_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00001973_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00001973_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00002220_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00002220_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00002220_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00002220_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00002417_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00002417_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00002417_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00002417_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00002441_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00002441_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00002441_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00002441_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00005212_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00005212_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00005212_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00005212_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00008191_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00008191_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00008191_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00008191_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00011767_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00011767_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00011767_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00011767_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00015554_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00015554_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00015554_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00015554_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00021060_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00021060_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00021060_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00021060_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00023710_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00023710_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00023710_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00023710_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00025863_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00025863_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00025863_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00025863_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031552_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00031552_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00031552_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00031552_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:36:22][0m 	Contig: tig00031552_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:22][0m 	Contig: tig00031589_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00031589_pilon_pilon_pilon Could not found mapping list
[32m[12:36:22][0m 	Contig: tig00031590_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00031590_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00031590_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00031590_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:36:23][0m 	Contig: tig00031590_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:23][0m 	Contig: tig00241104_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00241104_pilon_pilon_pilon Could not found mapping list
[32m[12:36:23][0m 	Contig: tig00241107_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00241107_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00241107_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00241107_pilon_pilon_pilon Could not found mismatch
[32m[12:36:23][0m 	Contig: tig00241117_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00241117_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00241117_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00241117_pilon_pilon_pilon Could not found mismatch
[32m[12:36:23][0m 	Contig: tig00241120_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00241120_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00241120_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00241120_pilon_pilon_pilon Could not found mismatch
[32m[12:36:23][0m 	Contig: tig00241122_pilon_pilon_pilon Getting mapping list
[32m[12:36:24][0m 	Contig: tig00241122_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:24][0m 	Contig: tig00241122_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:24][0m 	Contig: tig00241122_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:36:25][0m 	Contig: tig00241122_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:21][0m 	Contig: tig00001865_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00001865_pilon_pilon_pilon Could not found mapping list
[32m[12:36:21][0m 	Contig: tig00005758_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00005758_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00005758_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00005758_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00009115_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00009115_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00009115_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00009115_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00012630_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00012630_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00012630_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00012630_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00015148_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00015148_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00015148_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00015148_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00019430_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00019430_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00019430_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00019430_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00023785_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00023785_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00023785_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00023785_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00029579_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00029579_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00029579_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00029579_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031566_pilon_pilon_pilon Getting mapping list
[32m[12:36:27][0m 	Contig: tig00031566_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:27][0m 	Contig: tig00031566_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:27][0m 	Contig: tig00031566_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:36:27][0m 	Contig: tig00031566_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:27][0m 	Contig: tig00031566_pilon_pilon_pilon Wide mismatch without update
[32m[12:36:21][0m 	Contig: tig00000176_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00000176_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00000176_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00000176_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031573_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00031573_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00031573_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00031573_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031584_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00031584_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00031584_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00031584_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00241095_pilon_pilon_pilon Getting mapping list
[32m[12:36:28][0m 	Contig: tig00241095_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:33][0m 	Contig: tig00241095_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:33][0m 	Contig: tig00241095_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:36:52][0m 	Contig: tig00241095_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:21][0m 	Contig: tig00001230_pilon_pilon_pilon Getting mapping list
[32m[12:36:40][0m 	Contig: tig00001230_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:37:03][0m 	Contig: tig00001230_pilon_pilon_pilon Getting wide mismatch
[32m[12:37:03][0m 	Contig: tig00001230_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00000142_pilon_pilon_pilon Getting mapping list
[32m[12:36:29][0m 	Contig: tig00000142_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:53][0m 	Contig: tig00000142_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:53][0m 	Contig: tig00000142_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:37:03][0m 	Contig: tig00000142_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:21][0m 	Contig: tig00001158_pilon_pilon_pilon Getting mapping list
[32m[12:36:45][0m 	Contig: tig00001158_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:37:12][0m 	Contig: tig00001158_pilon_pilon_pilon Getting wide mismatch
[32m[12:37:12][0m 	Contig: tig00001158_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00000419_pilon_pilon_pilon Getting mapping list
[32m[12:36:29][0m 	Contig: tig00000419_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:34][0m 	Contig: tig00000419_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:34][0m 	Contig: tig00000419_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:36:55][0m 	Contig: tig00000419_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:21][0m 	Contig: tig00001749_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00001749_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00001749_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00001749_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00002324_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00002324_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00002324_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00002324_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031580_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00031580_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00031580_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00031580_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00241097_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00241097_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00241097_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00241097_pilon_pilon_pilon Could not found mismatch
[32m[12:36:23][0m 	Contig: tig00241110_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00241110_pilon_pilon_pilon Could not found mapping list
[32m[12:36:23][0m 	Contig: tig00241112_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00241112_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00241112_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00241112_pilon_pilon_pilon Could not found mismatch
[32m[12:36:23][0m 	Contig: tig00241115_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00241115_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00241115_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00241115_pilon_pilon_pilon Could not found mismatch
[32m[12:36:23][0m 	Contig: tig00241116_pilon_pilon_pilon Getting mapping list
[32m[12:36:23][0m 	Contig: tig00241116_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:23][0m 	Contig: tig00241116_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:23][0m 	Contig: tig00241116_pilon_pilon_pilon Could not found mismatch
[32m[12:36:23][0m 	Contig: tig00241119_pilon_pilon_pilon Getting mapping list
[32m[12:36:30][0m 	Contig: tig00241119_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:55][0m 	Contig: tig00241119_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:55][0m 	Contig: tig00241119_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:37:12][0m 	Contig: tig00241119_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:21][0m 	Contig: tig00000904_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00000904_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00000904_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00000904_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00002372_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00002372_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00002372_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00002372_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00002498_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00002498_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00002498_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00002498_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00005671_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00005671_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00005671_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00005671_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00011142_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00011142_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00011142_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00011142_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00014439_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00014439_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00014439_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00014439_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00017649_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00017649_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00017649_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00017649_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00022916_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00022916_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00022916_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00022916_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00024495_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00024495_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00024495_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00024495_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00027025_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00027025_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00027025_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00027025_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031556_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00031556_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00031556_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00031556_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031582_pilon_pilon_pilon Getting mapping list
[32m[12:36:32][0m 	Contig: tig00031582_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:59][0m 	Contig: tig00031582_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:59][0m 	Contig: tig00031582_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:37:13][0m 	Contig: tig00031582_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:21][0m 	Contig: tig00001854_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00001854_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00001854_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00001854_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00002431_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00002431_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00002431_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00002431_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031550_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00031550_pilon_pilon_pilon Could not found mapping list
[32m[12:36:22][0m 	Contig: tig00031578_pilon_pilon_pilon Getting mapping list
[32m[12:36:35][0m 	Contig: tig00031578_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:59][0m 	Contig: tig00031578_pilon_pilon_pilon Getting wide mismatch
[32m[12:37:00][0m 	Contig: tig00031578_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:37:16][0m 	Contig: tig00031578_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:21][0m 	Contig: tig00000270_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00000270_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00000270_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00000270_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00026836_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00026836_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00026836_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00026836_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031562_pilon_pilon_pilon Getting mapping list
[32m[12:37:00][0m 	Contig: tig00031562_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:37:49][0m 	Contig: tig00031562_pilon_pilon_pilon Getting wide mismatch
[32m[12:37:50][0m 	Contig: tig00031562_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00000540_pilon_pilon_pilon Getting mapping list
[32m[12:36:53][0m 	Contig: tig00000540_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:37:20][0m 	Contig: tig00000540_pilon_pilon_pilon Getting wide mismatch
[32m[12:37:21][0m 	Contig: tig00000540_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:37:51][0m 	Contig: tig00000540_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:21][0m 	Contig: tig00000535_pilon_pilon_pilon Getting mapping list
[32m[12:36:39][0m 	Contig: tig00000535_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:37:09][0m 	Contig: tig00000535_pilon_pilon_pilon Getting wide mismatch
[32m[12:37:09][0m 	Contig: tig00000535_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:37:35][0m 	Contig: tig00000535_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:21][0m 	Contig: tig00000628_pilon_pilon_pilon Getting mapping list
[32m[12:37:07][0m 	Contig: tig00000628_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:37:52][0m 	Contig: tig00000628_pilon_pilon_pilon Getting wide mismatch
[32m[12:37:52][0m 	Contig: tig00000628_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00000148_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00000148_pilon_pilon_pilon Could not found mapping list
[32m[12:36:21][0m 	Contig: tig00001901_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00001901_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00001901_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00001901_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00002273_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00002273_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00002273_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00002273_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031575_pilon_pilon_pilon Getting mapping list
[32m[12:37:11][0m 	Contig: tig00031575_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:38:06][0m 	Contig: tig00031575_pilon_pilon_pilon Getting wide mismatch
[32m[12:38:06][0m 	Contig: tig00031575_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00000472_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00000472_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00000472_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00000472_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00002060_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00002060_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00002060_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00002060_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00002326_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00002326_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00002326_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00002326_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00002357_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00002357_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00002357_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00002357_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00024051_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00024051_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00024051_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00024051_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00027661_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00027661_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00027661_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00027661_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031560_pilon_pilon_pilon Getting mapping list
[32m[12:36:52][0m 	Contig: tig00031560_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:37:32][0m 	Contig: tig00031560_pilon_pilon_pilon Getting wide mismatch
[32m[12:37:33][0m 	Contig: tig00031560_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:38:09][0m 	Contig: tig00031560_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:21][0m 	Contig: tig00001070_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00001070_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00001070_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00001070_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031576_pilon_pilon_pilon Getting mapping list
[32m[12:36:56][0m 	Contig: tig00031576_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:37:44][0m 	Contig: tig00031576_pilon_pilon_pilon Getting wide mismatch
[32m[12:37:45][0m 	Contig: tig00031576_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:38:10][0m 	Contig: tig00031576_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:21][0m 	Contig: tig00000676_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00000676_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00000676_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00000676_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00002838_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00002838_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00002838_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00002838_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00007414_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00007414_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00007414_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00007414_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00010342_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00010342_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00010342_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00010342_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00014800_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00014800_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00014800_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00014800_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00018403_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00018403_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00018403_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00018403_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00023933_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00023933_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00023933_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00023933_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00027286_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00027286_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00027286_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00027286_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031559_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00031559_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00031559_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00031559_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031571_pilon_pilon_pilon Getting mapping list
[32m[12:37:11][0m 	Contig: tig00031571_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:38:15][0m 	Contig: tig00031571_pilon_pilon_pilon Getting wide mismatch
[32m[12:38:16][0m 	Contig: tig00031571_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00000639_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00000639_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00000639_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00000639_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00001895_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00001895_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00001895_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00001895_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00025689_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00025689_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00025689_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00025689_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031549_pilon_pilon_pilon Getting mapping list
[32m[12:37:15][0m 	Contig: tig00031549_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:37:54][0m 	Contig: tig00031549_pilon_pilon_pilon Getting wide mismatch
[32m[12:37:55][0m 	Contig: tig00031549_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:38:35][0m 	Contig: tig00031549_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:21][0m 	Contig: tig00001863_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00001863_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00001863_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00001863_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031568_pilon_pilon_pilon Getting mapping list
[32m[12:37:41][0m 	Contig: tig00031568_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:38:45][0m 	Contig: tig00031568_pilon_pilon_pilon Getting wide mismatch
[32m[12:38:47][0m 	Contig: tig00031568_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00000617_pilon_pilon_pilon Getting mapping list
[32m[12:37:05][0m 	Contig: tig00000617_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:38:16][0m 	Contig: tig00000617_pilon_pilon_pilon Getting wide mismatch
[32m[12:38:17][0m 	Contig: tig00000617_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00000411_pilon_pilon_pilon Getting mapping list
[32m[12:37:16][0m 	Contig: tig00000411_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:38:15][0m 	Contig: tig00000411_pilon_pilon_pilon Getting wide mismatch
[32m[12:38:16][0m 	Contig: tig00000411_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:38:58][0m 	Contig: tig00000411_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:21][0m 	Contig: tig00000073_pilon_pilon_pilon Getting mapping list
[32m[12:37:50][0m 	Contig: tig00000073_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:38:55][0m 	Contig: tig00000073_pilon_pilon_pilon Getting wide mismatch
[32m[12:38:57][0m 	Contig: tig00000073_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00001849_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00001849_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00001849_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00001849_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00002434_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00002434_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00002434_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00002434_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00003558_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00003558_pilon_pilon_pilon Could not found mapping list
[32m[12:36:21][0m 	Contig: tig00007608_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00007608_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00007608_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00007608_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00011762_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00011762_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00011762_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00011762_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00016707_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00016707_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00016707_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00016707_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00022332_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00022332_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00022332_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00022332_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00025666_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00025666_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00025666_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00025666_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031547_pilon_pilon_pilon Getting mapping list
[32m[12:37:30][0m 	Contig: tig00031547_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:38:44][0m 	Contig: tig00031547_pilon_pilon_pilon Getting wide mismatch
[32m[12:38:45][0m 	Contig: tig00031547_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00000610_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00000610_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00000610_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00000610_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00002035_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00002035_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00002035_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00002035_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00014174_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00014174_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00014174_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00014174_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00017538_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00017538_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00017538_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00017538_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00022394_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00022394_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00022394_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00022394_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00024389_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00024389_pilon_pilon_pilon Could not found mapping list
[32m[12:36:21][0m 	Contig: tig00026331_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00026331_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00026331_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00026331_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031554_pilon_pilon_pilon Getting mapping list
[32m[12:37:26][0m 	Contig: tig00031554_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:38:24][0m 	Contig: tig00031554_pilon_pilon_pilon Getting wide mismatch
[32m[12:38:25][0m 	Contig: tig00031554_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:39:12][0m 	Contig: tig00031554_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:21][0m 	Contig: tig00001201_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00001201_pilon_pilon_pilon Could not found mapping list
[32m[12:36:21][0m 	Contig: tig00001898_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00001898_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00001898_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00001898_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00002209_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00002209_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00002209_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00002209_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031570_pilon_pilon_pilon Getting mapping list
[32m[12:37:20][0m 	Contig: tig00031570_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:38:20][0m 	Contig: tig00031570_pilon_pilon_pilon Getting wide mismatch
[32m[12:38:20][0m 	Contig: tig00031570_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:39:05][0m 	Contig: tig00031570_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:21][0m 	Contig: tig00000244_pilon_pilon_pilon Getting mapping list
[32m[12:37:28][0m 	Contig: tig00000244_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:38:37][0m 	Contig: tig00000244_pilon_pilon_pilon Getting wide mismatch
[32m[12:38:38][0m 	Contig: tig00000244_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:39:27][0m 	Contig: tig00000244_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:21][0m 	Contig: tig00000385_pilon_pilon_pilon Getting mapping list
[32m[12:37:12][0m 	Contig: tig00000385_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:38:14][0m 	Contig: tig00000385_pilon_pilon_pilon Getting wide mismatch
[32m[12:38:15][0m 	Contig: tig00000385_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:38:49][0m 	Contig: tig00000385_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:21][0m 	Contig: tig00000271_pilon_pilon_pilon Getting mapping list
[32m[12:36:21][0m 	Contig: tig00000271_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:21][0m 	Contig: tig00000271_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:21][0m 	Contig: tig00000271_pilon_pilon_pilon Could not found mismatch
[32m[12:36:21][0m 	Contig: tig00024250_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00024250_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00024250_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00024250_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00030192_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00030192_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:36:22][0m 	Contig: tig00030192_pilon_pilon_pilon Getting wide mismatch
[32m[12:36:22][0m 	Contig: tig00030192_pilon_pilon_pilon Could not found mismatch
[32m[12:36:22][0m 	Contig: tig00031565_pilon_pilon_pilon Getting mapping list
[32m[12:38:03][0m 	Contig: tig00031565_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:39:08][0m 	Contig: tig00031565_pilon_pilon_pilon Getting wide mismatch
[32m[12:39:09][0m 	Contig: tig00031565_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:40:22][0m 	Contig: tig00031565_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:21][0m 	Contig: tig00000004_pilon_pilon_pilon Getting mapping list
[32m[12:38:34][0m 	Contig: tig00000004_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:40:12][0m 	Contig: tig00000004_pilon_pilon_pilon Getting wide mismatch
[32m[12:40:14][0m 	Contig: tig00000004_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:41:50][0m 	Contig: tig00000004_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:21][0m 	Contig: tig00001871_pilon_pilon_pilon Getting mapping list
[32m[12:36:22][0m 	Contig: tig00001871_pilon_pilon_pilon Could not found mapping list
[32m[12:36:22][0m 	Contig: tig00031557_pilon_pilon_pilon Getting mapping list
[32m[12:38:19][0m 	Contig: tig00031557_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:39:31][0m 	Contig: tig00031557_pilon_pilon_pilon Getting wide mismatch
[32m[12:39:32][0m 	Contig: tig00031557_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:40:50][0m 	Contig: tig00031557_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:21][0m 	Contig: tig00001141_pilon_pilon_pilon Getting mapping list
[32m[12:36:38][0m 	Contig: tig00001141_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:37:02][0m 	Contig: tig00001141_pilon_pilon_pilon Getting wide mismatch
[32m[12:37:02][0m 	Contig: tig00001141_pilon_pilon_pilon Getting narrow score with bin size: 1000
[32m[12:37:20][0m 	Contig: tig00001141_pilon_pilon_pilon Getting narrow mismatch
[32m[12:36:21][0m 	Contig: tig00000494_pilon_pilon_pilon Getting mapping list
[32m[12:37:08][0m 	Contig: tig00000494_pilon_pilon_pilon Getting hic list with bin size: 25000
[32m[12:38:15][0m 	Contig: tig00000494_pilon_pilon_pilon Getting wide mismatch
[32m[12:38:15][0m 	Contig: tig00000494_pilon_pilon_pilon Could not found mismatch
[32m[12:41:54][0m Found all mismatches
[32m[12:41:54][0m Reading origin fasta
[32m[12:41:57][0m Writing result
[32m[12:41:57][0m Finished
[bwa_index] Pack FASTA... 3.23 sec
[bwa_index] Construct BWT for the packed sequence...
[BWTIncCreate] textLength=792795444, availableWord=67783896
[BWTIncConstructFromPacked] 10 iterations done. 99999988 characters processed.
[BWTIncConstructFromPacked] 20 iterations done. 195953108 characters processed.
[BWTIncConstructFromPacked] 30 iterations done. 281352084 characters processed.
[BWTIncConstructFromPacked] 40 iterations done. 357250900 characters processed.
[BWTIncConstructFromPacked] 50 iterations done. 424705972 characters processed.
[BWTIncConstructFromPacked] 60 iterations done. 484656196 characters processed.
[BWTIncConstructFromPacked] 70 iterations done. 537936068 characters processed.
[BWTIncConstructFromPacked] 80 iterations done. 585287332 characters processed.
[BWTIncConstructFromPacked] 90 iterations done. 627369252 characters processed.
[BWTIncConstructFromPacked] 100 iterations done. 664767732 characters processed.
[BWTIncConstructFromPacked] 110 iterations done. 698003540 characters processed.
[BWTIncConstructFromPacked] 120 iterations done. 727539604 characters processed.
[BWTIncConstructFromPacked] 130 iterations done. 753787316 characters processed.
[BWTIncConstructFromPacked] 140 iterations done. 777112308 characters processed.
[bwt_gen] Finished constructing BWT in 148 iterations.
[bwa_index] 463.98 seconds elapse.
[bwa_index] Update BWT... 4.14 sec
[bwa_index] Pack forward-only FASTA... 3.13 sec
[bwa_index] Construct SA from BWT and Occ... 169.53 sec
[main] Version: 0.7.17-r1188
[main] CMD: bwa index seq.HiCcorrected.fasta
[main] Real time: 651.532 sec; CPU: 644.017 sec
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 3333334 sequences (500000100 bp)...
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11132, 527832, 5870, 7851)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (175, 793, 3523)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10219)
[M::mem_pestat] mean and std.dev: (2165.79, 2657.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13567)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (269, 322, 381)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (45, 605)
[M::mem_pestat] mean and std.dev: (326.43, 81.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 717)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1417, 3173, 5829)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14653)
[M::mem_pestat] mean and std.dev: (3785.73, 2757.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19065)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (483, 2002, 4791)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13407)
[M::mem_pestat] mean and std.dev: (2937.44, 2804.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17715)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 3035.972 CPU sec, 74.453 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10982, 526350, 6016, 7946)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (182, 918, 3756)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10904)
[M::mem_pestat] mean and std.dev: (2263.30, 2716.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14478)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (326.67, 81.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1326, 2998, 5655)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14313)
[M::mem_pestat] mean and std.dev: (3661.15, 2741.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18642)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (522, 2037, 4830)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13446)
[M::mem_pestat] mean and std.dev: (2966.61, 2790.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17754)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 3038.094 CPU sec, 65.602 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10819, 527350, 5971, 7996)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (180, 872, 3561)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10323)
[M::mem_pestat] mean and std.dev: (2205.80, 2677.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13704)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 322, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (326.69, 81.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1334, 3001, 5645)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14267)
[M::mem_pestat] mean and std.dev: (3655.42, 2741.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18578)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (510, 2000, 4755)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13245)
[M::mem_pestat] mean and std.dev: (2926.82, 2779.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17490)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2719.723 CPU sec, 55.299 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10700, 525843, 5806, 7992)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (183, 890, 3634)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10536)
[M::mem_pestat] mean and std.dev: (2227.34, 2695.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13987)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 381)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 603)
[M::mem_pestat] mean and std.dev: (326.46, 81.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 714)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1364, 3066, 5629)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14159)
[M::mem_pestat] mean and std.dev: (3688.72, 2736.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18424)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (505, 1949, 4720)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13150)
[M::mem_pestat] mean and std.dev: (2904.98, 2766.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17365)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 3190.731 CPU sec, 66.558 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10868, 527738, 5907, 8034)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (186, 918, 3703)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10737)
[M::mem_pestat] mean and std.dev: (2247.79, 2696.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14254)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (326.83, 81.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1404, 3232, 5940)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 15012)
[M::mem_pestat] mean and std.dev: (3814.89, 2770.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19548)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (494, 1976, 4803)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13421)
[M::mem_pestat] mean and std.dev: (2941.94, 2798.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17730)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_process_seqs] Processed 3333334 reads in 2783.921 CPU sec, 63.163 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11155, 526782, 5971, 8078)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (177, 872, 3652)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10602)
[M::mem_pestat] mean and std.dev: (2242.18, 2716.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14077)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (326.73, 81.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1299, 3014, 5682)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14448)
[M::mem_pestat] mean and std.dev: (3663.33, 2728.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18831)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (515, 1995, 4698)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13064)
[M::mem_pestat] mean and std.dev: (2923.34, 2760.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17247)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2923.498 CPU sec, 66.421 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10590, 527070, 5996, 8040)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (187, 945, 3620)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10486)
[M::mem_pestat] mean and std.dev: (2230.78, 2674.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13919)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (269, 322, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (43, 608)
[M::mem_pestat] mean and std.dev: (326.49, 81.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 721)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1315, 2963, 5718)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14524)
[M::mem_pestat] mean and std.dev: (3645.18, 2740.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18927)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (557, 2088, 4839)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13403)
[M::mem_pestat] mean and std.dev: (2993.35, 2787.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17685)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_process_seqs] Processed 3333334 reads in 2891.353 CPU sec, 62.489 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10870, 527404, 5869, 7865)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (181, 907, 3520)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10198)
[M::mem_pestat] mean and std.dev: (2199.44, 2656.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13537)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 322, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (326.87, 81.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1280, 2955, 5614)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14282)
[M::mem_pestat] mean and std.dev: (3630.17, 2753.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18616)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (528, 2008, 4903)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13653)
[M::mem_pestat] mean and std.dev: (2983.17, 2819.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18028)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_process_seqs] Processed 3333334 reads in 2770.259 CPU sec, 61.212 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10727, 526142, 5808, 7878)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (181, 895, 3613)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10477)
[M::mem_pestat] mean and std.dev: (2237.03, 2703.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13909)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 322, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (326.67, 81.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1326, 3042, 5793)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14727)
[M::mem_pestat] mean and std.dev: (3701.90, 2766.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19194)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (501, 1956, 4685)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13053)
[M::mem_pestat] mean and std.dev: (2899.73, 2761.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17237)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2717.106 CPU sec, 60.516 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10884, 528293, 5926, 8014)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (172, 821, 3521)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10219)
[M::mem_pestat] mean and std.dev: (2188.69, 2691.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13568)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 381)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 603)
[M::mem_pestat] mean and std.dev: (326.60, 81.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 714)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1349, 3113, 5831)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14795)
[M::mem_pestat] mean and std.dev: (3758.76, 2793.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19277)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (533, 2040, 4861)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13517)
[M::mem_pestat] mean and std.dev: (2963.47, 2783.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17845)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2567.323 CPU sec, 53.613 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10658, 531322, 5789, 7928)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (182, 895, 3660)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10616)
[M::mem_pestat] mean and std.dev: (2246.38, 2696.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14094)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 601)
[M::mem_pestat] mean and std.dev: (324.52, 80.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 712)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1301, 3067, 5755)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14663)
[M::mem_pestat] mean and std.dev: (3696.34, 2766.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19117)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (517, 2050, 4815)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13411)
[M::mem_pestat] mean and std.dev: (2974.63, 2797.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17709)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2514.052 CPU sec, 51.621 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10231, 534951, 5825, 7807)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (184, 983, 3782)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10978)
[M::mem_pestat] mean and std.dev: (2291.93, 2707.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14576)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (267, 318, 376)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (49, 594)
[M::mem_pestat] mean and std.dev: (322.65, 79.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 703)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1340, 3017, 5775)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14645)
[M::mem_pestat] mean and std.dev: (3694.57, 2765.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19080)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (491, 1968, 4767)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13319)
[M::mem_pestat] mean and std.dev: (2926.74, 2799.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17595)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2549.323 CPU sec, 52.491 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10566, 534033, 5885, 7951)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (179, 955, 3683)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10691)
[M::mem_pestat] mean and std.dev: (2276.29, 2727.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14195)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (267, 319, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 597)
[M::mem_pestat] mean and std.dev: (323.11, 79.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 707)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1305, 2941, 5602)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14196)
[M::mem_pestat] mean and std.dev: (3632.35, 2741.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18493)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (508, 1981, 4706)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13102)
[M::mem_pestat] mean and std.dev: (2931.18, 2791.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17300)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2578.322 CPU sec, 54.707 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10325, 535269, 5933, 7966)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (191, 1055, 3740)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10838)
[M::mem_pestat] mean and std.dev: (2320.17, 2716.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14387)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (267, 318, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 597)
[M::mem_pestat] mean and std.dev: (323.09, 79.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 707)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1310, 3012, 5705)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14495)
[M::mem_pestat] mean and std.dev: (3681.11, 2777.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18890)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (499, 1990, 4785)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13357)
[M::mem_pestat] mean and std.dev: (2939.96, 2805.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17643)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2613.300 CPU sec, 54.943 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10305, 533022, 5772, 7952)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (184, 947, 3678)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10666)
[M::mem_pestat] mean and std.dev: (2263.30, 2690.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14160)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (267, 318, 376)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (49, 594)
[M::mem_pestat] mean and std.dev: (322.76, 79.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 703)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 3150, 5790)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14626)
[M::mem_pestat] mean and std.dev: (3734.17, 2747.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19044)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (513, 2107, 4785)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13329)
[M::mem_pestat] mean and std.dev: (2965.67, 2787.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17601)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2928.741 CPU sec, 60.118 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10146, 535031, 5848, 8038)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (195, 1110, 3933)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11409)
[M::mem_pestat] mean and std.dev: (2366.60, 2728.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15147)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (267, 319, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 597)
[M::mem_pestat] mean and std.dev: (323.01, 79.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 707)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1337, 3065, 5620)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14186)
[M::mem_pestat] mean and std.dev: (3667.97, 2705.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18469)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (512, 1994, 4799)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13373)
[M::mem_pestat] mean and std.dev: (2938.58, 2781.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17660)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2499.908 CPU sec, 51.200 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10336, 533947, 5858, 7988)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (187, 969, 3870)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11236)
[M::mem_pestat] mean and std.dev: (2303.41, 2718.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14919)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (267, 318, 376)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (49, 594)
[M::mem_pestat] mean and std.dev: (322.94, 79.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 703)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1325, 3137, 5769)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14657)
[M::mem_pestat] mean and std.dev: (3717.04, 2759.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19101)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (499, 2033, 4849)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13549)
[M::mem_pestat] mean and std.dev: (2963.28, 2815.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17899)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2634.505 CPU sec, 53.631 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10308, 535336, 5878, 8088)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (194, 1076, 3855)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11177)
[M::mem_pestat] mean and std.dev: (2349.87, 2733.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14838)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 319, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (50, 595)
[M::mem_pestat] mean and std.dev: (323.13, 79.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 704)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1298, 3024, 5780)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14744)
[M::mem_pestat] mean and std.dev: (3697.63, 2775.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19226)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (508, 1991, 4797)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13375)
[M::mem_pestat] mean and std.dev: (2949.51, 2803.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17664)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2610.090 CPU sec, 53.577 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10395, 534766, 5724, 7855)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (188, 1031, 3784)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10976)
[M::mem_pestat] mean and std.dev: (2295.98, 2691.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14572)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (267, 318, 376)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (49, 594)
[M::mem_pestat] mean and std.dev: (322.79, 79.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 703)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1325, 3061, 5868)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14954)
[M::mem_pestat] mean and std.dev: (3735.41, 2795.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19497)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (480, 1930, 4710)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13170)
[M::mem_pestat] mean and std.dev: (2885.39, 2771.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17400)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2611.782 CPU sec, 54.033 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10168, 535058, 5786, 7878)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (191, 1005, 3735)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10823)
[M::mem_pestat] mean and std.dev: (2285.24, 2693.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14367)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (267, 319, 376)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (49, 594)
[M::mem_pestat] mean and std.dev: (322.94, 79.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 703)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1325, 3071, 5694)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14432)
[M::mem_pestat] mean and std.dev: (3694.04, 2744.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18801)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (504, 1975, 4714)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13134)
[M::mem_pestat] mean and std.dev: (2921.31, 2780.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17344)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2654.143 CPU sec, 54.404 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10535, 534975, 5881, 8003)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (178, 943, 3653)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10603)
[M::mem_pestat] mean and std.dev: (2252.54, 2707.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14078)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (267, 318, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 597)
[M::mem_pestat] mean and std.dev: (322.98, 79.65)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 707)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1352, 3111, 5778)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14630)
[M::mem_pestat] mean and std.dev: (3732.09, 2764.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19056)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (484, 1942, 4803)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13441)
[M::mem_pestat] mean and std.dev: (2910.64, 2784.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17760)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2580.990 CPU sec, 52.947 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10275, 533976, 5749, 7968)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (192, 1050, 3739)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10833)
[M::mem_pestat] mean and std.dev: (2306.13, 2714.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14380)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (267, 318, 376)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (49, 594)
[M::mem_pestat] mean and std.dev: (322.86, 79.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 703)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1379, 3082, 5805)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14657)
[M::mem_pestat] mean and std.dev: (3752.56, 2766.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19083)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (452, 1950, 4720)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13256)
[M::mem_pestat] mean and std.dev: (2896.60, 2788.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17524)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2589.220 CPU sec, 53.020 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10767, 525729, 5883, 8150)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (187, 908, 3610)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10456)
[M::mem_pestat] mean and std.dev: (2257.89, 2715.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13879)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (271, 324, 384)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (45, 610)
[M::mem_pestat] mean and std.dev: (328.69, 81.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 723)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1279, 2961, 5715)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14587)
[M::mem_pestat] mean and std.dev: (3652.54, 2779.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19023)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (549, 2035, 4901)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13605)
[M::mem_pestat] mean and std.dev: (2993.49, 2818.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17957)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2541.611 CPU sec, 52.227 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10498, 520230, 5985, 8215)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (200, 1059, 3990)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11570)
[M::mem_pestat] mean and std.dev: (2383.19, 2776.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15360)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (273, 326, 386)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 612)
[M::mem_pestat] mean and std.dev: (330.28, 81.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 725)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1330, 3156, 5799)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14737)
[M::mem_pestat] mean and std.dev: (3717.45, 2754.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19206)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (537, 2039, 4835)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13431)
[M::mem_pestat] mean and std.dev: (2975.14, 2797.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17729)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2632.306 CPU sec, 54.282 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10526, 522056, 6030, 7994)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (187, 972, 3672)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10642)
[M::mem_pestat] mean and std.dev: (2259.66, 2689.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14127)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (273, 326, 386)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 612)
[M::mem_pestat] mean and std.dev: (330.34, 82.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 725)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1299, 3020, 5807)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14823)
[M::mem_pestat] mean and std.dev: (3717.34, 2795.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19331)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (494, 1986, 4770)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13322)
[M::mem_pestat] mean and std.dev: (2935.74, 2800.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17598)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2568.331 CPU sec, 53.199 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10356, 519304, 5919, 8029)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (193, 1054, 3797)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11005)
[M::mem_pestat] mean and std.dev: (2315.77, 2713.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14609)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (272, 326, 386)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (44, 614)
[M::mem_pestat] mean and std.dev: (330.00, 81.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 728)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1398, 3117, 5816)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14652)
[M::mem_pestat] mean and std.dev: (3766.80, 2774.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19070)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (568, 2039, 4888)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13528)
[M::mem_pestat] mean and std.dev: (3001.73, 2803.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17848)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2525.919 CPU sec, 51.413 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10538, 520895, 6012, 8133)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (195, 1066, 3913)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11349)
[M::mem_pestat] mean and std.dev: (2337.72, 2724.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15067)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (273, 326, 386)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 612)
[M::mem_pestat] mean and std.dev: (330.38, 82.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 725)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1340, 3074, 5674)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14342)
[M::mem_pestat] mean and std.dev: (3676.12, 2728.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18676)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (513, 1989, 4739)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13191)
[M::mem_pestat] mean and std.dev: (2908.76, 2746.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17417)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2537.331 CPU sec, 52.102 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10386, 520646, 5997, 7955)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (196, 1039, 3908)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11332)
[M::mem_pestat] mean and std.dev: (2352.66, 2741.65)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15044)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (273, 326, 386)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 612)
[M::mem_pestat] mean and std.dev: (330.38, 81.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 725)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1352, 3098, 5757)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14567)
[M::mem_pestat] mean and std.dev: (3698.63, 2725.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18972)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (557, 2091, 4888)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13550)
[M::mem_pestat] mean and std.dev: (3016.19, 2811.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17881)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2645.885 CPU sec, 54.380 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10262, 521483, 6016, 8037)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (204, 1115, 3874)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11214)
[M::mem_pestat] mean and std.dev: (2353.27, 2718.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14884)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (273, 327, 386)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 612)
[M::mem_pestat] mean and std.dev: (330.61, 82.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 725)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1365, 3055, 5713)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14409)
[M::mem_pestat] mean and std.dev: (3707.85, 2759.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18757)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (512, 2054, 4735)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13181)
[M::mem_pestat] mean and std.dev: (2928.18, 2763.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17404)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2444.557 CPU sec, 50.098 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10834, 521261, 6019, 8167)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (191, 1018, 3674)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10640)
[M::mem_pestat] mean and std.dev: (2252.05, 2641.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14123)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (273, 326, 386)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 612)
[M::mem_pestat] mean and std.dev: (330.37, 82.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 725)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1293, 2972, 5687)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14475)
[M::mem_pestat] mean and std.dev: (3668.84, 2768.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18869)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (540, 2036, 4854)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13482)
[M::mem_pestat] mean and std.dev: (2976.69, 2784.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17796)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2591.794 CPU sec, 53.305 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10480, 521252, 5898, 8115)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (199, 1003, 3665)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10597)
[M::mem_pestat] mean and std.dev: (2287.53, 2709.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14063)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (273, 326, 386)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 612)
[M::mem_pestat] mean and std.dev: (330.48, 81.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 725)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1326, 3061, 5771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14661)
[M::mem_pestat] mean and std.dev: (3686.84, 2731.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19106)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (544, 2061, 4855)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13477)
[M::mem_pestat] mean and std.dev: (2994.37, 2801.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17788)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2540.435 CPU sec, 51.758 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10632, 522689, 5960, 8070)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (188, 990, 3708)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10748)
[M::mem_pestat] mean and std.dev: (2284.63, 2710.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14268)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (273, 326, 386)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 612)
[M::mem_pestat] mean and std.dev: (330.41, 82.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 725)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1348, 3050, 5653)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14263)
[M::mem_pestat] mean and std.dev: (3677.96, 2747.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18568)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (539, 2085, 4825)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13397)
[M::mem_pestat] mean and std.dev: (2995.01, 2804.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17683)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2534.140 CPU sec, 51.709 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10671, 524286, 5968, 7958)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (186, 975, 3721)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10791)
[M::mem_pestat] mean and std.dev: (2272.44, 2699.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14326)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (271, 324, 383)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 607)
[M::mem_pestat] mean and std.dev: (327.78, 81.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 719)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1298, 2976, 5730)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14594)
[M::mem_pestat] mean and std.dev: (3662.37, 2767.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19026)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (529, 1979, 4849)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13489)
[M::mem_pestat] mean and std.dev: (2960.38, 2803.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17809)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2618.355 CPU sec, 53.920 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10789, 531109, 5891, 7950)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (176, 889, 3648)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10592)
[M::mem_pestat] mean and std.dev: (2227.38, 2692.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14064)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 378)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 598)
[M::mem_pestat] mean and std.dev: (324.25, 80.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 708)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1308, 3064, 5745)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14619)
[M::mem_pestat] mean and std.dev: (3722.03, 2779.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19056)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (545, 2105, 4944)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13742)
[M::mem_pestat] mean and std.dev: (3015.32, 2803.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18141)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2498.338 CPU sec, 51.522 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10778, 530576, 5796, 7887)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (182, 953, 3872)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11252)
[M::mem_pestat] mean and std.dev: (2304.08, 2726.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14942)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (269, 321, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (49, 599)
[M::mem_pestat] mean and std.dev: (324.88, 80.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 709)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1323, 3082, 5707)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14475)
[M::mem_pestat] mean and std.dev: (3705.00, 2753.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18859)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (520, 2000, 4824)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13432)
[M::mem_pestat] mean and std.dev: (2965.42, 2805.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17736)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2594.361 CPU sec, 52.874 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10444, 530060, 5823, 7896)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (184, 898, 3639)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10549)
[M::mem_pestat] mean and std.dev: (2248.35, 2696.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14004)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 378)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 598)
[M::mem_pestat] mean and std.dev: (324.37, 80.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 708)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1325, 3054, 5706)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14468)
[M::mem_pestat] mean and std.dev: (3679.40, 2754.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18849)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (515, 1998, 4764)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13262)
[M::mem_pestat] mean and std.dev: (2936.65, 2786.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17511)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2579.799 CPU sec, 53.032 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10766, 531234, 5794, 7993)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (184, 879, 3611)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10465)
[M::mem_pestat] mean and std.dev: (2234.01, 2716.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13892)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 378)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 598)
[M::mem_pestat] mean and std.dev: (324.28, 80.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 708)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1309, 3048, 5659)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14359)
[M::mem_pestat] mean and std.dev: (3702.85, 2794.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18709)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (489, 1992, 4780)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13362)
[M::mem_pestat] mean and std.dev: (2926.83, 2776.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17653)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2767.798 CPU sec, 57.844 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10464, 530207, 6013, 7965)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (191, 993, 3726)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10796)
[M::mem_pestat] mean and std.dev: (2283.24, 2696.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14331)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 378)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 598)
[M::mem_pestat] mean and std.dev: (324.48, 80.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 708)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1352, 3111, 5783)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14645)
[M::mem_pestat] mean and std.dev: (3750.45, 2782.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19076)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (521, 2043, 4765)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13253)
[M::mem_pestat] mean and std.dev: (2938.10, 2780.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17497)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2626.580 CPU sec, 54.758 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10743, 531154, 5741, 7850)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (180, 830, 3567)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10341)
[M::mem_pestat] mean and std.dev: (2209.43, 2707.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13728)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 601)
[M::mem_pestat] mean and std.dev: (324.61, 80.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 712)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1353, 3063, 5621)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14157)
[M::mem_pestat] mean and std.dev: (3703.36, 2748.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18425)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (485, 2041, 4838)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13544)
[M::mem_pestat] mean and std.dev: (2961.47, 2803.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17897)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_process_seqs] Processed 3333334 reads in 2734.350 CPU sec, 58.614 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10582, 529579, 5868, 7923)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (191, 978, 3698)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10712)
[M::mem_pestat] mean and std.dev: (2283.69, 2707.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14219)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 378)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 598)
[M::mem_pestat] mean and std.dev: (324.20, 80.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 708)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1338, 3056, 5794)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14706)
[M::mem_pestat] mean and std.dev: (3706.06, 2753.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19162)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (540, 1997, 4718)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13074)
[M::mem_pestat] mean and std.dev: (2938.00, 2768.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17252)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2874.320 CPU sec, 59.913 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10621, 531601, 5880, 7858)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (185, 964, 3771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10943)
[M::mem_pestat] mean and std.dev: (2284.21, 2713.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14529)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 601)
[M::mem_pestat] mean and std.dev: (324.65, 80.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 712)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1298, 3091, 5732)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14600)
[M::mem_pestat] mean and std.dev: (3713.98, 2762.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19034)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (536, 2056, 5001)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13931)
[M::mem_pestat] mean and std.dev: (3032.09, 2848.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18396)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2671.168 CPU sec, 56.081 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10746, 530677, 5808, 7864)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (177, 949, 3697)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10737)
[M::mem_pestat] mean and std.dev: (2266.13, 2716.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14257)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 601)
[M::mem_pestat] mean and std.dev: (324.56, 80.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 712)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1240, 2876, 5457)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13891)
[M::mem_pestat] mean and std.dev: (3547.73, 2691.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18108)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (481, 2010, 4702)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13144)
[M::mem_pestat] mean and std.dev: (2906.53, 2769.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17365)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2762.715 CPU sec, 57.246 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10583, 531032, 5831, 7946)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (178, 933, 3736)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10852)
[M::mem_pestat] mean and std.dev: (2265.03, 2715.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14410)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 601)
[M::mem_pestat] mean and std.dev: (324.63, 80.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 712)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1329, 2952, 5784)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14694)
[M::mem_pestat] mean and std.dev: (3694.94, 2795.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19149)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (491, 2024, 4785)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13373)
[M::mem_pestat] mean and std.dev: (2941.16, 2791.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17667)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2770.436 CPU sec, 58.347 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10875, 530444, 5931, 8105)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (180, 906, 3683)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10689)
[M::mem_pestat] mean and std.dev: (2258.27, 2712.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14192)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 321, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 601)
[M::mem_pestat] mean and std.dev: (324.77, 80.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 712)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1331, 2961, 5729)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14525)
[M::mem_pestat] mean and std.dev: (3690.82, 2782.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18923)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (471, 1936, 4727)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13239)
[M::mem_pestat] mean and std.dev: (2907.19, 2788.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17495)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2645.165 CPU sec, 54.272 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10569, 530738, 5973, 7853)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (185, 960, 3669)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10637)
[M::mem_pestat] mean and std.dev: (2255.60, 2682.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14121)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 321, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 601)
[M::mem_pestat] mean and std.dev: (324.80, 80.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 712)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1412, 3033, 5836)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14684)
[M::mem_pestat] mean and std.dev: (3739.43, 2755.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19108)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (546, 2016, 4920)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13668)
[M::mem_pestat] mean and std.dev: (2997.68, 2820.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18042)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2521.160 CPU sec, 51.777 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10667, 530139, 6027, 8109)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (185, 928, 3740)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10850)
[M::mem_pestat] mean and std.dev: (2284.81, 2729.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14405)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (269, 321, 380)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 602)
[M::mem_pestat] mean and std.dev: (325.25, 80.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 713)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1275, 2994, 5820)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14910)
[M::mem_pestat] mean and std.dev: (3678.09, 2769.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19455)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (526, 2005, 4771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13261)
[M::mem_pestat] mean and std.dev: (2955.97, 2808.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17506)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2693.695 CPU sec, 55.261 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10506, 530638, 5862, 7850)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (195, 1022, 3790)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10980)
[M::mem_pestat] mean and std.dev: (2322.96, 2719.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14575)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 321, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 601)
[M::mem_pestat] mean and std.dev: (324.92, 80.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 712)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1312, 3067, 5753)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14635)
[M::mem_pestat] mean and std.dev: (3715.54, 2777.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19076)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (524, 1957, 4819)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13409)
[M::mem_pestat] mean and std.dev: (2940.16, 2782.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17704)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2535.734 CPU sec, 51.487 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10647, 531159, 5700, 7996)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (184, 926, 3655)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10597)
[M::mem_pestat] mean and std.dev: (2253.25, 2710.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14068)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 601)
[M::mem_pestat] mean and std.dev: (324.55, 80.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 712)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1353, 3092, 5750)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14544)
[M::mem_pestat] mean and std.dev: (3714.26, 2766.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18941)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (544, 1986, 4631)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12805)
[M::mem_pestat] mean and std.dev: (2909.33, 2747.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16892)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2567.725 CPU sec, 52.211 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10427, 528974, 5927, 8055)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (191, 990, 3760)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10898)
[M::mem_pestat] mean and std.dev: (2308.15, 2731.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14467)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 321, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 601)
[M::mem_pestat] mean and std.dev: (324.89, 80.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 712)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1286, 3008, 5748)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14672)
[M::mem_pestat] mean and std.dev: (3693.41, 2786.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19134)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (533, 2038, 4767)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13235)
[M::mem_pestat] mean and std.dev: (2968.28, 2798.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17469)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2512.598 CPU sec, 51.297 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10639, 530304, 5938, 8023)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (186, 947, 3698)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10722)
[M::mem_pestat] mean and std.dev: (2270.47, 2703.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14234)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (269, 321, 380)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 602)
[M::mem_pestat] mean and std.dev: (325.14, 80.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 713)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1355, 3081, 5731)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14483)
[M::mem_pestat] mean and std.dev: (3720.32, 2752.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18859)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (503, 1984, 4737)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13205)
[M::mem_pestat] mean and std.dev: (2924.05, 2792.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17439)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2584.008 CPU sec, 53.011 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10320, 530657, 5889, 8081)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (195, 1054, 3750)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10860)
[M::mem_pestat] mean and std.dev: (2331.38, 2727.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14415)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (269, 321, 380)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 602)
[M::mem_pestat] mean and std.dev: (325.01, 80.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 713)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1321, 3023, 5707)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14479)
[M::mem_pestat] mean and std.dev: (3664.37, 2732.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18865)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (517, 2048, 4784)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13318)
[M::mem_pestat] mean and std.dev: (2954.75, 2798.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17585)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2770.053 CPU sec, 57.991 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10793, 530466, 5868, 8101)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (183, 951, 3601)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10437)
[M::mem_pestat] mean and std.dev: (2234.95, 2671.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13855)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (269, 321, 380)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 602)
[M::mem_pestat] mean and std.dev: (325.12, 80.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 713)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1367, 3075, 5875)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14891)
[M::mem_pestat] mean and std.dev: (3761.86, 2787.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19399)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (528, 2011, 4881)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13587)
[M::mem_pestat] mean and std.dev: (2963.96, 2794.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17940)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2366.651 CPU sec, 51.567 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10688, 529786, 5945, 7831)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (183, 984, 3792)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11010)
[M::mem_pestat] mean and std.dev: (2295.01, 2708.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14619)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 321, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 601)
[M::mem_pestat] mean and std.dev: (324.95, 80.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 712)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1318, 3032, 5718)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14518)
[M::mem_pestat] mean and std.dev: (3679.62, 2765.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18918)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (501, 1988, 4827)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13479)
[M::mem_pestat] mean and std.dev: (2949.26, 2800.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17805)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2483.601 CPU sec, 52.164 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10652, 530497, 5981, 7900)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (176, 911, 3655)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10613)
[M::mem_pestat] mean and std.dev: (2243.67, 2699.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14092)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 321, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 601)
[M::mem_pestat] mean and std.dev: (324.74, 80.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 712)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1324, 3088, 5769)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14659)
[M::mem_pestat] mean and std.dev: (3718.47, 2776.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19104)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (493, 1966, 4738)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13228)
[M::mem_pestat] mean and std.dev: (2933.50, 2805.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17473)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2548.277 CPU sec, 52.997 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10545, 526926, 5824, 7935)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (194, 1070, 3856)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11180)
[M::mem_pestat] mean and std.dev: (2338.56, 2717.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14842)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (269, 322, 381)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (45, 605)
[M::mem_pestat] mean and std.dev: (325.91, 80.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 717)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1378, 3015, 5793)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14623)
[M::mem_pestat] mean and std.dev: (3720.42, 2764.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19038)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (496, 1966, 4672)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13024)
[M::mem_pestat] mean and std.dev: (2895.29, 2759.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17200)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2562.413 CPU sec, 52.526 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10471, 525841, 5998, 7972)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (183, 920, 3582)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10380)
[M::mem_pestat] mean and std.dev: (2221.00, 2671.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13779)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (271, 324, 384)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (45, 610)
[M::mem_pestat] mean and std.dev: (328.64, 81.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 723)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1383, 3115, 5783)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14583)
[M::mem_pestat] mean and std.dev: (3751.50, 2780.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18983)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (565, 2031, 4778)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13204)
[M::mem_pestat] mean and std.dev: (2957.26, 2762.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17417)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2551.670 CPU sec, 51.891 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10564, 524414, 5892, 8096)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (188, 998, 3704)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10736)
[M::mem_pestat] mean and std.dev: (2279.70, 2689.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14252)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (272, 325, 384)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 608)
[M::mem_pestat] mean and std.dev: (328.64, 81.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 720)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1345, 3080, 5882)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14956)
[M::mem_pestat] mean and std.dev: (3767.68, 2805.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19493)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (523, 2033, 4850)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13504)
[M::mem_pestat] mean and std.dev: (2971.21, 2794.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17831)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2473.362 CPU sec, 50.399 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10552, 525636, 5987, 7832)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (192, 1098, 3839)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11133)
[M::mem_pestat] mean and std.dev: (2340.02, 2704.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14780)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (272, 325, 384)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 608)
[M::mem_pestat] mean and std.dev: (328.99, 81.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 720)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1335, 3108, 5790)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14700)
[M::mem_pestat] mean and std.dev: (3730.28, 2771.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19155)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (510, 2014, 4837)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13491)
[M::mem_pestat] mean and std.dev: (2962.19, 2794.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17818)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2535.030 CPU sec, 51.752 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10373, 525315, 5845, 7937)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (196, 1043, 3806)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11026)
[M::mem_pestat] mean and std.dev: (2309.32, 2694.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14636)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (271, 324, 384)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (45, 610)
[M::mem_pestat] mean and std.dev: (328.44, 81.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 723)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1287, 3054, 5698)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14520)
[M::mem_pestat] mean and std.dev: (3659.59, 2727.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18931)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (546, 2043, 4835)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13413)
[M::mem_pestat] mean and std.dev: (2970.91, 2790.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17702)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2839.674 CPU sec, 58.073 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10367, 524844, 5795, 8008)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (204, 1147, 3974)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11514)
[M::mem_pestat] mean and std.dev: (2388.25, 2729.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15284)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (271, 324, 384)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (45, 610)
[M::mem_pestat] mean and std.dev: (328.53, 81.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 723)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1322, 3003, 5799)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14753)
[M::mem_pestat] mean and std.dev: (3704.19, 2788.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19230)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (495, 1975, 4896)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13698)
[M::mem_pestat] mean and std.dev: (2954.31, 2812.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18099)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2681.920 CPU sec, 58.186 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10431, 524492, 5926, 7976)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (197, 1014, 3733)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10805)
[M::mem_pestat] mean and std.dev: (2299.55, 2707.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14341)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (272, 325, 384)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 608)
[M::mem_pestat] mean and std.dev: (328.96, 81.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 720)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1339, 3064, 5765)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14617)
[M::mem_pestat] mean and std.dev: (3708.46, 2750.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19043)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (573, 2063, 4834)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13356)
[M::mem_pestat] mean and std.dev: (2992.99, 2807.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17617)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2774.831 CPU sec, 59.432 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10187, 525092, 5971, 7982)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (199, 1064, 3761)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10885)
[M::mem_pestat] mean and std.dev: (2316.26, 2701.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14447)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (272, 325, 384)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 608)
[M::mem_pestat] mean and std.dev: (328.78, 81.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 720)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1324, 3107, 5717)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14503)
[M::mem_pestat] mean and std.dev: (3705.31, 2754.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18896)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (524, 2010, 4798)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13346)
[M::mem_pestat] mean and std.dev: (2943.29, 2785.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17620)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_process_seqs] Processed 3333334 reads in 2565.284 CPU sec, 53.697 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10491, 524534, 6027, 8155)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (193, 1017, 3686)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10672)
[M::mem_pestat] mean and std.dev: (2287.47, 2700.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14165)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (272, 324, 384)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 608)
[M::mem_pestat] mean and std.dev: (328.57, 81.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 720)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1341, 2968, 5575)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14043)
[M::mem_pestat] mean and std.dev: (3640.26, 2738.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18277)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (533, 2045, 4976)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13862)
[M::mem_pestat] mean and std.dev: (3006.11, 2829.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18305)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2718.580 CPU sec, 57.227 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10282, 523790, 6006, 8141)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (201, 1106, 3863)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11187)
[M::mem_pestat] mean and std.dev: (2359.75, 2703.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14849)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (272, 325, 384)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 608)
[M::mem_pestat] mean and std.dev: (328.77, 81.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 720)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1326, 3071, 5808)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14772)
[M::mem_pestat] mean and std.dev: (3730.78, 2767.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19254)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (521, 1987, 4879)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13595)
[M::mem_pestat] mean and std.dev: (2954.07, 2801.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17953)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_process_seqs] Processed 3333334 reads in 2525.234 CPU sec, 53.196 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10627, 525703, 5978, 7978)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (187, 983, 3623)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10495)
[M::mem_pestat] mean and std.dev: (2240.84, 2669.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13931)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (272, 324, 384)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 608)
[M::mem_pestat] mean and std.dev: (328.60, 81.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 720)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1364, 3121, 5741)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14495)
[M::mem_pestat] mean and std.dev: (3731.40, 2760.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18872)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (526, 2040, 4810)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13378)
[M::mem_pestat] mean and std.dev: (2960.27, 2796.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17662)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_process_seqs] Processed 3333334 reads in 2632.069 CPU sec, 55.063 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10361, 524879, 5917, 7995)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (197, 1035, 3779)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10943)
[M::mem_pestat] mean and std.dev: (2310.88, 2709.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14525)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (271, 324, 384)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (45, 610)
[M::mem_pestat] mean and std.dev: (328.50, 81.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 723)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1355, 3115, 5914)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 15032)
[M::mem_pestat] mean and std.dev: (3758.74, 2782.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19591)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (535, 2106, 4839)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13447)
[M::mem_pestat] mean and std.dev: (2989.50, 2796.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17751)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_process_seqs] Processed 3333334 reads in 2513.820 CPU sec, 51.942 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10892, 526382, 5876, 8099)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (190, 1015, 3766)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10918)
[M::mem_pestat] mean and std.dev: (2320.48, 2741.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14494)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (326.68, 81.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1276, 2991, 5674)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14470)
[M::mem_pestat] mean and std.dev: (3647.14, 2769.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18868)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (563, 2095, 4838)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13388)
[M::mem_pestat] mean and std.dev: (2989.54, 2783.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17663)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2691.191 CPU sec, 57.908 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10379, 524038, 5900, 7890)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (192, 1074, 3802)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11022)
[M::mem_pestat] mean and std.dev: (2336.29, 2730.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14632)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (326.85, 81.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1370, 3056, 5759)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14537)
[M::mem_pestat] mean and std.dev: (3714.49, 2759.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18926)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (499, 2022, 4763)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13291)
[M::mem_pestat] mean and std.dev: (2921.82, 2761.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17555)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2631.710 CPU sec, 55.883 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10582, 526319, 5905, 7974)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (191, 1013, 3722)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10784)
[M::mem_pestat] mean and std.dev: (2294.27, 2704.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14315)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (327.06, 81.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1338, 3094, 5654)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14286)
[M::mem_pestat] mean and std.dev: (3696.84, 2740.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18602)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (501, 2050, 4862)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13584)
[M::mem_pestat] mean and std.dev: (2975.48, 2821.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17945)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2581.877 CPU sec, 53.512 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10207, 524731, 5932, 8208)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (203, 1101, 3858)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11168)
[M::mem_pestat] mean and std.dev: (2347.06, 2711.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14823)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (326.89, 81.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1320, 3065, 5813)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14799)
[M::mem_pestat] mean and std.dev: (3729.54, 2780.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19292)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (535, 2077, 4894)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13612)
[M::mem_pestat] mean and std.dev: (3004.40, 2804.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17971)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2637.403 CPU sec, 56.280 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10160, 525393, 5830, 8064)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (194, 1010, 3694)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10694)
[M::mem_pestat] mean and std.dev: (2296.56, 2714.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14194)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (269, 322, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (43, 608)
[M::mem_pestat] mean and std.dev: (326.55, 81.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 721)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1300, 3067, 5796)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14788)
[M::mem_pestat] mean and std.dev: (3706.30, 2766.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19284)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (534, 2059, 4894)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13614)
[M::mem_pestat] mean and std.dev: (2989.84, 2818.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17974)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2666.441 CPU sec, 55.359 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10361, 526589, 5806, 7921)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (200, 1108, 3826)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11078)
[M::mem_pestat] mean and std.dev: (2364.90, 2733.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14704)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (326.93, 81.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1374, 3101, 5780)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14592)
[M::mem_pestat] mean and std.dev: (3731.63, 2745.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18998)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (503, 1970, 4788)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13358)
[M::mem_pestat] mean and std.dev: (2935.92, 2797.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17643)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_process_seqs] Processed 3333334 reads in 2606.462 CPU sec, 56.079 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10459, 525921, 5816, 7960)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (194, 1044, 3818)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11066)
[M::mem_pestat] mean and std.dev: (2311.02, 2691.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14690)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (327.07, 81.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1312, 3060, 5656)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14344)
[M::mem_pestat] mean and std.dev: (3679.06, 2748.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18688)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (504, 2042, 4814)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13434)
[M::mem_pestat] mean and std.dev: (2962.22, 2803.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17744)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_process_seqs] Processed 3333334 reads in 2593.540 CPU sec, 55.380 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10347, 525534, 5970, 7952)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (198, 1095, 3875)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11229)
[M::mem_pestat] mean and std.dev: (2362.94, 2744.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14906)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (326.94, 81.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1352, 3073, 5754)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14558)
[M::mem_pestat] mean and std.dev: (3734.87, 2783.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18960)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (541, 2032, 4818)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13372)
[M::mem_pestat] mean and std.dev: (2951.83, 2776.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17649)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_process_seqs] Processed 3333334 reads in 2615.164 CPU sec, 55.605 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10529, 525708, 5799, 8006)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (197, 1082, 3937)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11417)
[M::mem_pestat] mean and std.dev: (2358.70, 2721.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15157)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (327.02, 81.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1330, 3061, 5771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14653)
[M::mem_pestat] mean and std.dev: (3695.56, 2738.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19094)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (548, 2082, 4780)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13244)
[M::mem_pestat] mean and std.dev: (2972.88, 2781.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17476)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2537.766 CPU sec, 51.591 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10302, 526631, 5860, 8061)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (205, 1095, 3906)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11308)
[M::mem_pestat] mean and std.dev: (2368.13, 2729.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15009)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (326.79, 81.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1349, 3077, 5791)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14675)
[M::mem_pestat] mean and std.dev: (3723.16, 2764.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19117)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (540, 2007, 4806)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13338)
[M::mem_pestat] mean and std.dev: (2972.25, 2800.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17604)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2444.086 CPU sec, 50.758 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10483, 526359, 5844, 7992)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (193, 986, 3798)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11008)
[M::mem_pestat] mean and std.dev: (2316.94, 2737.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14613)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (326.89, 81.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1315, 3054, 5742)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14596)
[M::mem_pestat] mean and std.dev: (3700.59, 2769.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19023)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (511, 2068, 4875)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13603)
[M::mem_pestat] mean and std.dev: (2984.01, 2802.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17967)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2351.708 CPU sec, 49.422 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10530, 527191, 5894, 8118)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (194, 1017, 3752)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10868)
[M::mem_pestat] mean and std.dev: (2306.16, 2716.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14426)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 323, 382)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (46, 606)
[M::mem_pestat] mean and std.dev: (327.08, 81.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1317, 3082, 5839)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14883)
[M::mem_pestat] mean and std.dev: (3727.60, 2788.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19405)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (538, 2061, 4823)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13393)
[M::mem_pestat] mean and std.dev: (2977.85, 2784.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17678)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2323.710 CPU sec, 49.141 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10945, 528025, 5865, 8084)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (185, 1009, 3792)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11006)
[M::mem_pestat] mean and std.dev: (2306.00, 2709.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14613)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (269, 321, 380)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 602)
[M::mem_pestat] mean and std.dev: (325.17, 80.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 713)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1326, 3117, 5790)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14718)
[M::mem_pestat] mean and std.dev: (3742.12, 2789.65)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19182)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (526, 2081, 4811)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13381)
[M::mem_pestat] mean and std.dev: (2974.28, 2793.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17666)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2390.449 CPU sec, 49.412 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10543, 531743, 5817, 7972)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (182, 897, 3624)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10508)
[M::mem_pestat] mean and std.dev: (2220.45, 2683.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13950)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 378)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 598)
[M::mem_pestat] mean and std.dev: (323.63, 80.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 708)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1237, 3042, 5807)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14947)
[M::mem_pestat] mean and std.dev: (3683.11, 2780.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19517)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (514, 2046, 4788)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13336)
[M::mem_pestat] mean and std.dev: (2950.03, 2770.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17610)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2233.922 CPU sec, 45.242 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10745, 532450, 6001, 8065)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (176, 867, 3613)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10487)
[M::mem_pestat] mean and std.dev: (2214.92, 2699.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13924)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 378)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 598)
[M::mem_pestat] mean and std.dev: (323.87, 80.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 708)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1347, 3061, 5796)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14694)
[M::mem_pestat] mean and std.dev: (3703.34, 2764.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19143)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (485, 1984, 4825)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13505)
[M::mem_pestat] mean and std.dev: (2932.55, 2803.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17845)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2442.294 CPU sec, 50.393 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10497, 530016, 5826, 7985)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (190, 1039, 3753)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10879)
[M::mem_pestat] mean and std.dev: (2318.53, 2715.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14442)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 319, 378)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 598)
[M::mem_pestat] mean and std.dev: (323.49, 80.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 708)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1337, 3166, 5887)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14987)
[M::mem_pestat] mean and std.dev: (3776.31, 2774.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19537)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (513, 2074, 4826)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13452)
[M::mem_pestat] mean and std.dev: (2968.52, 2804.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17765)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2591.166 CPU sec, 56.650 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10773, 532537, 5770, 7927)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (180, 919, 3710)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10770)
[M::mem_pestat] mean and std.dev: (2267.53, 2709.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14300)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (267, 319, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (47, 597)
[M::mem_pestat] mean and std.dev: (323.34, 80.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 707)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1271, 2993, 5615)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14303)
[M::mem_pestat] mean and std.dev: (3652.26, 2766.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18647)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (524, 2115, 4906)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13670)
[M::mem_pestat] mean and std.dev: (3001.10, 2794.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18052)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2593.752 CPU sec, 55.735 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10519, 530783, 5818, 7850)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (191, 1077, 3885)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11273)
[M::mem_pestat] mean and std.dev: (2350.95, 2732.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14967)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 319, 378)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 598)
[M::mem_pestat] mean and std.dev: (323.60, 79.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 708)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1348, 3046, 5685)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14359)
[M::mem_pestat] mean and std.dev: (3685.88, 2734.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18696)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (505, 1995, 4857)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13561)
[M::mem_pestat] mean and std.dev: (2960.53, 2819.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17913)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2581.258 CPU sec, 53.617 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10909, 531983, 5828, 8063)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (181, 960, 3700)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10738)
[M::mem_pestat] mean and std.dev: (2269.51, 2719.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14257)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 319, 378)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 598)
[M::mem_pestat] mean and std.dev: (323.86, 80.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 708)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1366, 3060, 5832)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14764)
[M::mem_pestat] mean and std.dev: (3744.96, 2763.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19230)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (511, 2021, 4841)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13501)
[M::mem_pestat] mean and std.dev: (2961.40, 2798.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17831)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2566.619 CPU sec, 53.172 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10518, 532092, 5772, 8029)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (184, 961, 3636)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10540)
[M::mem_pestat] mean and std.dev: (2265.40, 2706.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13992)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 378)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 598)
[M::mem_pestat] mean and std.dev: (323.73, 80.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 708)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1307, 2940, 5654)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14348)
[M::mem_pestat] mean and std.dev: (3646.65, 2756.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18695)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (518, 2067, 4895)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13649)
[M::mem_pestat] mean and std.dev: (2970.90, 2794.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18026)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2535.446 CPU sec, 53.051 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10631, 532152, 5786, 8049)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (179, 947, 3552)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10298)
[M::mem_pestat] mean and std.dev: (2225.15, 2670.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13671)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 320, 378)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 598)
[M::mem_pestat] mean and std.dev: (323.94, 80.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 708)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1342, 3070, 5802)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14722)
[M::mem_pestat] mean and std.dev: (3722.62, 2780.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19182)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (479, 2033, 4837)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13553)
[M::mem_pestat] mean and std.dev: (2954.91, 2800.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17911)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2551.221 CPU sec, 57.509 real sec
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10697, 530495, 5751, 7923)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (184, 985, 3732)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10828)
[M::mem_pestat] mean and std.dev: (2292.07, 2719.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14376)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 319, 378)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (48, 598)
[M::mem_pestat] mean and std.dev: (323.69, 80.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 708)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1346, 3022, 5736)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14516)
[M::mem_pestat] mean and std.dev: (3682.55, 2752.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18906)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (495, 2021, 4710)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13140)
[M::mem_pestat] mean and std.dev: (2929.75, 2782.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17355)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2430.781 CPU sec, 52.168 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10573, 531915, 5835, 7925)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (182, 942, 3662)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10622)
[M::mem_pestat] mean and std.dev: (2252.97, 2692.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14102)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (268, 319, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (50, 595)
[M::mem_pestat] mean and std.dev: (323.57, 80.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 704)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1248, 3004, 5848)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 15048)
[M::mem_pestat] mean and std.dev: (3677.79, 2803.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19648)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (495, 1947, 4715)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13155)
[M::mem_pestat] mean and std.dev: (2897.92, 2776.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17375)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 3333334 sequences (500000100 bp)...
[M::mem_process_seqs] Processed 3333334 reads in 2698.322 CPU sec, 56.940 real sec
[M::process] read 3256594 sequences (488489100 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9353, 519846, 5579, 7800)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (226, 1262, 3985)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11503)
[M::mem_pestat] mean and std.dev: (2440.82, 2721.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15262)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (269, 321, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (49, 599)
[M::mem_pestat] mean and std.dev: (325.01, 80.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 709)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1348, 3148, 5806)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14722)
[M::mem_pestat] mean and std.dev: (3768.85, 2789.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19180)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (573, 2070, 4791)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13227)
[M::mem_pestat] mean and std.dev: (2977.18, 2780.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17445)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3333334 reads in 2548.284 CPU sec, 53.570 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9146, 514911, 5869, 7641)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (246, 1396, 4090)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11778)
[M::mem_pestat] mean and std.dev: (2513.51, 2739.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15622)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (270, 322, 380)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (50, 600)
[M::mem_pestat] mean and std.dev: (325.54, 79.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 710)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1350, 3067, 5720)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14460)
[M::mem_pestat] mean and std.dev: (3696.53, 2740.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18830)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (600, 2137, 4877)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13431)
[M::mem_pestat] mean and std.dev: (3039.32, 2802.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17708)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 3256594 reads in 2438.531 CPU sec, 51.330 real sec
[main] Version: 0.7.17-r1188
[main] CMD: bwa mem -t 50 seq.HiCcorrected.fasta Lib_R1.fastq.gz Lib_R2.fastq.gz
[main] Real time: 5040.715 sec; CPU: 238001.312 sec
[bam_sort_core] merging from 150 files and 50 in-memory blocks...
/ifs1/User/pengjx/biosoft/ALLHiC-master/scripts/PreprocessSAMs.pl sample.unique.bam seq.HiCcorrected.fasta GATC

Mon Mar 29 15:15:55 2021: PreprocessSAMs.pl: make_bed_around_RE_site.pl seq.HiCcorrected.fasta GATC 500
Mon Mar 29 15:15:55 2021: Reading file seq.HiCcorrected.fasta...
Mon Mar 29 15:15:58 2021: Done!  Found 1402917 total instances of motif GATC.  Created files:
seq.HiCcorrected.fasta.near_GATC.500.bed
seq.HiCcorrected.fasta.pos_of_GATC.txt
Mon Mar 29 15:15:58 2021: PreprocessSAMs.pl: bedtools intersect -abam sample.unique.bam -b seq.HiCcorrected.fasta.near_GATC.500.bed > sample.unique.REduced.bam
Mon Mar 29 17:08:23 2021: PreprocessSAMs.pl: samtools view -F12 sample.unique.REduced.bam -b -o sample.unique.REduced.paired_only.bam
Mon Mar 29 17:43:01 2021: PreprocessSAMs.pl: samtools flagstat sample.unique.REduced.paired_only.bam > sample.unique.REduced.paired_only.flagstat
Extract function: calculate an empirical distribution of Hi-C link size based on intra-contig links
CMD: allhic extract sample.unique.REduced.paired_only.bam seq.HiCcorrected.fasta --RE GATC
[32m17:48:29 writeRE | NOTICE [0m RE counts in 398 contigs (total: 1403315, avg 1 per 282 bp) written to `sample.unique.REduced.paired_only.counts_GATC.txt`
[32m17:48:29 extractContigLinks | NOTICE [0m Parse bamfile `sample.unique.REduced.paired_only.bam`
[32m17:56:51 extractContigLinks | NOTICE [0m Extracted 148 intra-contig link groups (total = 35663723)
[32m17:58:56 extractContigLinks | NOTICE [0m Extracted 18955 inter-contig groups to `sample.unique.REduced.paired_only.clm` (total = 316125992, maxLinks = 909702, minLinks = 3)
[32m17:58:58 fitPowerLaw | NOTICE [0m Power law Y = 0.000686 * X ^ -0.7661
[32m17:58:58 writeDistribution | NOTICE [0m Link size distribution written to `sample.unique.REduced.paired_only.distribution.txt`
[32m17:58:58 readClmLines | NOTICE [0m Parse clmfile `sample.unique.REduced.paired_only.clm`
[32m17:59:12 calcInterContigs | NOTICE [0m Contig pair analyses written to `sample.unique.REduced.paired_only.pairs.txt`
[32m17:59:12 Run | NOTICE [0m Success
Partition contigs based on prunning bam file
CMD: allhic partition sample.unique.REduced.paired_only.counts_GATC.txt sample.unique.REduced.paired_only.pairs.txt 12 --minREs 25
[32m17:59:12 ReadCSVLines | NOTICE [0m Parse csvfile `sample.unique.REduced.paired_only.counts_GATC.txt`
[32m17:59:12 readRE | NOTICE [0m Loaded 398 contig RE lengths for normalization from `sample.unique.REduced.paired_only.counts_GATC.txt`
[32m17:59:12 skipContigsWithFewREs | NOTICE [0m skipContigsWithFewREs with MinREs = 25 (RE = only.counts)
Contig #1 (tig00000004_pilon_pilon_pilon_13685000_13686999) has 7 RE sites -> MARKED SHORT
Contig #3 (tig00000004_pilon_pilon_pilon_13697000_13698999) has 7 RE sites -> MARKED SHORT
Contig #8 (tig00000142_pilon_pilon_pilon_754000_754999) has 4 RE sites -> MARKED SHORT
Contig #10 (tig00000142_pilon_pilon_pilon_818000_818999) has 6 RE sites -> MARKED SHORT
Contig #14 (tig00000186_pilon_pilon_pilon) has 1 RE sites -> MARKED SHORT
Contig #16 (tig00000244_pilon_pilon_pilon_139000_140999) has 2 RE sites -> MARKED SHORT
Contig #17 (tig00000244_pilon_pilon_pilon_141000_147999) has 1 RE sites -> MARKED SHORT
Contig #18 (tig00000244_pilon_pilon_pilon_148000_148999) has 1 RE sites -> MARKED SHORT
Contig #24 (tig00000303_pilon_pilon_pilon_110000_110999) has 3 RE sites -> MARKED SHORT
Contig #25 (tig00000303_pilon_pilon_pilon_111000_114999) has 8 RE sites -> MARKED SHORT
Contig #26 (tig00000303_pilon_pilon_pilon_115000_115999) has 3 RE sites -> MARKED SHORT
Contig #30 (tig00000385_pilon_pilon_pilon_10850000_10850999) has 7 RE sites -> MARKED SHORT
Contig #33 (tig00000411_pilon_pilon_pilon_12225000_12227999) has 9 RE sites -> MARKED SHORT
Contig #36 (tig00000419_pilon_pilon_pilon_270000_270999) has 2 RE sites -> MARKED SHORT
Contig #38 (tig00000419_pilon_pilon_pilon_585000_586999) has 7 RE sites -> MARKED SHORT
Contig #39 (tig00000419_pilon_pilon_pilon_587000_590999) has 11 RE sites -> MARKED SHORT
Contig #40 (tig00000419_pilon_pilon_pilon_591000_591999) has 5 RE sites -> MARKED SHORT
Contig #42 (tig00000419_pilon_pilon_pilon_1143000_1144999) has 9 RE sites -> MARKED SHORT
Contig #44 (tig00000419_pilon_pilon_pilon_1528000_1528999) has 7 RE sites -> MARKED SHORT
Contig #49 (tig00000535_pilon_pilon_pilon_1400000_1403999) has 17 RE sites -> MARKED SHORT
Contig #52 (tig00000540_pilon_pilon_pilon_6154000_6156999) has 9 RE sites -> MARKED SHORT
Contig #54 (tig00000540_pilon_pilon_pilon_7106000_7114999) has 22 RE sites -> MARKED SHORT
Contig #58 (tig00000613_pilon_pilon_pilon) has 18 RE sites -> MARKED SHORT
Contig #60 (tig00000616_pilon_pilon_pilon_161000_173999) has 12 RE sites -> MARKED SHORT
Contig #68 (tig00000777_pilon_pilon_pilon) has 12 RE sites -> MARKED SHORT
Contig #73 (tig00001141_pilon_pilon_pilon_4165000_4170999) has 1 RE sites -> MARKED SHORT
Contig #74 (tig00001141_pilon_pilon_pilon_4171000_4175999) has 1 RE sites -> MARKED SHORT
Contig #75 (tig00001141_pilon_pilon_pilon_4176000_4177999) has 1 RE sites -> MARKED SHORT
Contig #76 (tig00001141_pilon_pilon_pilon_4178000_4182999) has 1 RE sites -> MARKED SHORT
Contig #77 (tig00001141_pilon_pilon_pilon_4183000_4189999) has 1 RE sites -> MARKED SHORT
Contig #78 (tig00001141_pilon_pilon_pilon_4190000_4205999) has 15 RE sites -> MARKED SHORT
Contig #79 (tig00001141_pilon_pilon_pilon_4206000_4226999) has 1 RE sites -> MARKED SHORT
Contig #80 (tig00001141_pilon_pilon_pilon_4227000_4243999) has 1 RE sites -> MARKED SHORT
Contig #81 (tig00001141_pilon_pilon_pilon_4244000_4244999) has 1 RE sites -> MARKED SHORT
Contig #84 (tig00001201_pilon_pilon_pilon) has 11 RE sites -> MARKED SHORT
Contig #106 (tig00001987_pilon_pilon_pilon_106000_107999) has 4 RE sites -> MARKED SHORT
Contig #108 (tig00002008_pilon_pilon_pilon) has 1 RE sites -> MARKED SHORT
Contig #109 (tig00002009_pilon_pilon_pilon) has 3 RE sites -> MARKED SHORT
Contig #112 (tig00002012_pilon_pilon_pilon_141000_142999) has 9 RE sites -> MARKED SHORT
Contig #114 (tig00002012_pilon_pilon_pilon_173000_179999) has 12 RE sites -> MARKED SHORT
Contig #115 (tig00002012_pilon_pilon_pilon_180000_193999) has 15 RE sites -> MARKED SHORT
Contig #116 (tig00002012_pilon_pilon_pilon_194000_194999) has 2 RE sites -> MARKED SHORT
Contig #126 (tig00002258_pilon_pilon_pilon) has 2 RE sites -> MARKED SHORT
Contig #130 (tig00002326_pilon_pilon_pilon) has 1 RE sites -> MARKED SHORT
Contig #131 (tig00002340_pilon_pilon_pilon) has 1 RE sites -> MARKED SHORT
Contig #133 (tig00002359_pilon_pilon_pilon) has 1 RE sites -> MARKED SHORT
Contig #134 (tig00002372_pilon_pilon_pilon) has 1 RE sites -> MARKED SHORT
Contig #135 (tig00002409_pilon_pilon_pilon) has 1 RE sites -> MARKED SHORT
Contig #137 (tig00002431_pilon_pilon_pilon) has 3 RE sites -> MARKED SHORT
Contig #138 (tig00002434_pilon_pilon_pilon) has 15 RE sites -> MARKED SHORT
Contig #139 (tig00002439_pilon_pilon_pilon) has 1 RE sites -> MARKED SHORT
Contig #140 (tig00002441_pilon_pilon_pilon) has 1 RE sites -> MARKED SHORT
Contig #143 (tig00002521_pilon_pilon_pilon) has 18 RE sites -> MARKED SHORT
Contig #145 (tig00003558_pilon_pilon_pilon) has 12 RE sites -> MARKED SHORT
Contig #157 (tig00009115_pilon_pilon_pilon) has 23 RE sites -> MARKED SHORT
Contig #163 (tig00012630_pilon_pilon_pilon) has 18 RE sites -> MARKED SHORT
Contig #193 (tig00024051_pilon_pilon_pilon) has 20 RE sites -> MARKED SHORT
Contig #195 (tig00024389_pilon_pilon_pilon) has 23 RE sites -> MARKED SHORT
Contig #196 (tig00024495_pilon_pilon_pilon) has 11 RE sites -> MARKED SHORT
Contig #211 (tig00030374_pilon_pilon_pilon) has 1 RE sites -> MARKED SHORT
Contig #215 (tig00031549_pilon_pilon_pilon_87000_88999) has 11 RE sites -> MARKED SHORT
Contig #217 (tig00031549_pilon_pilon_pilon_5531000_5531999) has 6 RE sites -> MARKED SHORT
Contig #221 (tig00031549_pilon_pilon_pilon_5854000_5854999) has 9 RE sites -> MARKED SHORT
Contig #222 (tig00031549_pilon_pilon_pilon_5855000_5858999) has 10 RE sites -> MARKED SHORT
Contig #223 (tig00031549_pilon_pilon_pilon_5859000_5859999) has 3 RE sites -> MARKED SHORT
Contig #225 (tig00031549_pilon_pilon_pilon_6006000_6008999) has 13 RE sites -> MARKED SHORT
Contig #227 (tig00031549_pilon_pilon_pilon_6132000_6135999) has 12 RE sites -> MARKED SHORT
Contig #228 (tig00031549_pilon_pilon_pilon_6136000_6139999) has 9 RE sites -> MARKED SHORT
Contig #229 (tig00031549_pilon_pilon_pilon_6140000_6142999) has 13 RE sites -> MARKED SHORT
Contig #231 (tig00031549_pilon_pilon_pilon_6225000_6225999) has 3 RE sites -> MARKED SHORT
Contig #233 (tig00031549_pilon_pilon_pilon_6775000_6775999) has 3 RE sites -> MARKED SHORT
Contig #237 (tig00031552_pilon_pilon_pilon_107000_107999) has 2 RE sites -> MARKED SHORT
Contig #241 (tig00031554_pilon_pilon_pilon_678000_678999) has 8 RE sites -> MARKED SHORT
Contig #243 (tig00031554_pilon_pilon_pilon_703000_703999) has 5 RE sites -> MARKED SHORT
Contig #252 (tig00031559_pilon_pilon_pilon) has 3 RE sites -> MARKED SHORT
Contig #254 (tig00031560_pilon_pilon_pilon_7175000_7175999) has 5 RE sites -> MARKED SHORT
Contig #258 (tig00031563_pilon_pilon_pilon_89000_89999) has 7 RE sites -> MARKED SHORT
Contig #261 (tig00031565_pilon_pilon_pilon_4200000_4200999) has 6 RE sites -> MARKED SHORT
Contig #263 (tig00031565_pilon_pilon_pilon_26666000_26678999) has 5 RE sites -> MARKED SHORT
Contig #264 (tig00031565_pilon_pilon_pilon_26679000_26680999) has 2 RE sites -> MARKED SHORT
Contig #265 (tig00031565_pilon_pilon_pilon_26681000_26692999) has 1 RE sites -> MARKED SHORT
Contig #273 (tig00031569_pilon_pilon_pilon_90000_97999) has 11 RE sites -> MARKED SHORT
Contig #275 (tig00031569_pilon_pilon_pilon_152000_159999) has 12 RE sites -> MARKED SHORT
Contig #277 (tig00031569_pilon_pilon_pilon_179000_184999) has 10 RE sites -> MARKED SHORT
Contig #280 (tig00031570_pilon_pilon_pilon_1620000_1620999) has 6 RE sites -> MARKED SHORT
Contig #282 (tig00031570_pilon_pilon_pilon_8250000_8253999) has 11 RE sites -> MARKED SHORT
Contig #284 (tig00031570_pilon_pilon_pilon_12250000_12250999) has 7 RE sites -> MARKED SHORT
Contig #290 (tig00031576_pilon_pilon_pilon_1325000_1325999) has 5 RE sites -> MARKED SHORT
Contig #294 (tig00031578_pilon_pilon_pilon_89000_89999) has 4 RE sites -> MARKED SHORT
Contig #300 (tig00031582_pilon_pilon_pilon_116000_120999) has 9 RE sites -> MARKED SHORT
Contig #302 (tig00031582_pilon_pilon_pilon_158000_158999) has 5 RE sites -> MARKED SHORT
Contig #304 (tig00031582_pilon_pilon_pilon_378000_379999) has 12 RE sites -> MARKED SHORT
Contig #306 (tig00031582_pilon_pilon_pilon_501000_501999) has 3 RE sites -> MARKED SHORT
Contig #308 (tig00031582_pilon_pilon_pilon_550000_550999) has 3 RE sites -> MARKED SHORT
Contig #315 (tig00031589_pilon_pilon_pilon) has 1 RE sites -> MARKED SHORT
Contig #317 (tig00031590_pilon_pilon_pilon_140000_140999) has 2 RE sites -> MARKED SHORT
Contig #318 (tig00031590_pilon_pilon_pilon_141000_177999) has 1 RE sites -> MARKED SHORT
Contig #319 (tig00031590_pilon_pilon_pilon_178000_186999) has 1 RE sites -> MARKED SHORT
Contig #320 (tig00031590_pilon_pilon_pilon_187000_197999) has 1 RE sites -> MARKED SHORT
Contig #321 (tig00031590_pilon_pilon_pilon_198000_200999) has 1 RE sites -> MARKED SHORT
Contig #322 (tig00031590_pilon_pilon_pilon_201000_217999) has 21 RE sites -> MARKED SHORT
Contig #323 (tig00031590_pilon_pilon_pilon_218000_218999) has 1 RE sites -> MARKED SHORT
Contig #324 (tig00031590_pilon_pilon_pilon_218999_288703) has 19 RE sites -> MARKED SHORT
Contig #326 (tig00031591_pilon_pilon_pilon_178000_179999) has 7 RE sites -> MARKED SHORT
Contig #330 (tig00031592_pilon_pilon_pilon) has 10 RE sites -> MARKED SHORT
Contig #332 (tig00031594_pilon_pilon_pilon) has 3 RE sites -> MARKED SHORT
Contig #334 (tig00031596_pilon_pilon_pilon) has 2 RE sites -> MARKED SHORT
Contig #336 (tig00031597_pilon_pilon_pilon_108000_109999) has 18 RE sites -> MARKED SHORT
Contig #340 (tig00241095_pilon_pilon_pilon_141000_141999) has 3 RE sites -> MARKED SHORT
Contig #342 (tig00241095_pilon_pilon_pilon_372000_372999) has 5 RE sites -> MARKED SHORT
Contig #344 (tig00241095_pilon_pilon_pilon_381000_381999) has 4 RE sites -> MARKED SHORT
Contig #345 (tig00241095_pilon_pilon_pilon_382000_383999) has 4 RE sites -> MARKED SHORT
Contig #346 (tig00241095_pilon_pilon_pilon_384000_384999) has 4 RE sites -> MARKED SHORT
Contig #347 (tig00241095_pilon_pilon_pilon_385000_387999) has 11 RE sites -> MARKED SHORT
Contig #348 (tig00241095_pilon_pilon_pilon_388000_388999) has 6 RE sites -> MARKED SHORT
Contig #350 (tig00241095_pilon_pilon_pilon_425000_425999) has 4 RE sites -> MARKED SHORT
Contig #352 (tig00241095_pilon_pilon_pilon_708000_709999) has 7 RE sites -> MARKED SHORT
Contig #354 (tig00241095_pilon_pilon_pilon_1050000_1051999) has 7 RE sites -> MARKED SHORT
Contig #356 (tig00241095_pilon_pilon_pilon_1576000_1577999) has 9 RE sites -> MARKED SHORT
Contig #360 (tig00241098_pilon_pilon_pilon) has 16 RE sites -> MARKED SHORT
Contig #362 (tig00241100_pilon_pilon_pilon) has 6 RE sites -> MARKED SHORT
Contig #365 (tig00241103_pilon_pilon_pilon) has 24 RE sites -> MARKED SHORT
Contig #366 (tig00241104_pilon_pilon_pilon) has 20 RE sites -> MARKED SHORT
Contig #369 (tig00241107_pilon_pilon_pilon) has 4 RE sites -> MARKED SHORT
Contig #370 (tig00241108_pilon_pilon_pilon) has 3 RE sites -> MARKED SHORT
Contig #371 (tig00241110_pilon_pilon_pilon) has 13 RE sites -> MARKED SHORT
Contig #372 (tig00241111_pilon_pilon_pilon) has 1 RE sites -> MARKED SHORT
Contig #373 (tig00241112_pilon_pilon_pilon) has 1 RE sites -> MARKED SHORT
Contig #374 (tig00241113_pilon_pilon_pilon) has 1 RE sites -> MARKED SHORT
Contig #375 (tig00241114_pilon_pilon_pilon) has 1 RE sites -> MARKED SHORT
Contig #381 (tig00241119_pilon_pilon_pilon_325000_325999) has 5 RE sites -> MARKED SHORT
Contig #383 (tig00241119_pilon_pilon_pilon_850000_850999) has 9 RE sites -> MARKED SHORT
Contig #385 (tig00241119_pilon_pilon_pilon_1107000_1107999) has 5 RE sites -> MARKED SHORT
Contig #389 (tig00241119_pilon_pilon_pilon_2320000_2320999) has 6 RE sites -> MARKED SHORT
Contig #394 (tig00241122_pilon_pilon_pilon_96000_96999) has 4 RE sites -> MARKED SHORT
Contig #396 (tig00241123_pilon_pilon_pilon) has 2 RE sites -> MARKED SHORT
Contig #397 (tig00241124_pilon_pilon_pilon) has 1 RE sites -> MARKED SHORT
[32m17:59:12 skipContigsWithFewREs | NOTICE [0m Marked 137 contigs (avg 6.8 RE sites, len 9069) since they contain too few REs (MinREs = 25)
[32m17:59:12 ReadCSVLines | NOTICE [0m Parse csvfile `sample.unique.REduced.paired_only.pairs.txt`
[32m17:59:12 skipRepeats | NOTICE [0m skipRepeats with multiplicity = 2
Contig #7 (tig00000142_pilon_pilon_pilon_1_753999) has 2.3x the average number of Hi-C links -> MARKED REPETITIVE
Contig #8 (tig00000142_pilon_pilon_pilon_754000_754999) has 7.2x the average number of Hi-C links -> MARKED REPETITIVE
Contig #9 (tig00000142_pilon_pilon_pilon_755000_817999) has 7.5x the average number of Hi-C links -> MARKED REPETITIVE
Contig #14 (tig00000186_pilon_pilon_pilon) has 73.8x the average number of Hi-C links -> MARKED REPETITIVE
Contig #34 (tig00000411_pilon_pilon_pilon_12227999_14155842) has 2.4x the average number of Hi-C links -> MARKED REPETITIVE
Contig #126 (tig00002258_pilon_pilon_pilon) has 2.8x the average number of Hi-C links -> MARKED REPETITIVE
Contig #133 (tig00002359_pilon_pilon_pilon) has 10.2x the average number of Hi-C links -> MARKED REPETITIVE
Contig #134 (tig00002372_pilon_pilon_pilon) has 2.6x the average number of Hi-C links -> MARKED REPETITIVE
Contig #135 (tig00002409_pilon_pilon_pilon) has 2.6x the average number of Hi-C links -> MARKED REPETITIVE
Contig #137 (tig00002431_pilon_pilon_pilon) has 2.3x the average number of Hi-C links -> MARKED REPETITIVE
Contig #228 (tig00031549_pilon_pilon_pilon_6136000_6139999) has 3.2x the average number of Hi-C links -> MARKED REPETITIVE
Contig #231 (tig00031549_pilon_pilon_pilon_6225000_6225999) has 3.7x the average number of Hi-C links -> MARKED REPETITIVE
Contig #246 (tig00031555_pilon_pilon_pilon_75000_299999) has 2.1x the average number of Hi-C links -> MARKED REPETITIVE
Contig #255 (tig00031560_pilon_pilon_pilon_7175999_7633732) has 2.0x the average number of Hi-C links -> MARKED REPETITIVE
Contig #257 (tig00031563_pilon_pilon_pilon_1_88999) has 2.9x the average number of Hi-C links -> MARKED REPETITIVE
Contig #259 (tig00031563_pilon_pilon_pilon_89999_177156) has 3.9x the average number of Hi-C links -> MARKED REPETITIVE
Contig #264 (tig00031565_pilon_pilon_pilon_26679000_26680999) has 56.2x the average number of Hi-C links -> MARKED REPETITIVE
Contig #269 (tig00031566_pilon_pilon_pilon_124999_187994) has 2.1x the average number of Hi-C links -> MARKED REPETITIVE
Contig #310 (tig00031583_pilon_pilon_pilon) has 3.2x the average number of Hi-C links -> MARKED REPETITIVE
Contig #334 (tig00031596_pilon_pilon_pilon) has 2.0x the average number of Hi-C links -> MARKED REPETITIVE
Contig #347 (tig00241095_pilon_pilon_pilon_385000_387999) has 16.3x the average number of Hi-C links -> MARKED REPETITIVE
Contig #348 (tig00241095_pilon_pilon_pilon_388000_388999) has 16.4x the average number of Hi-C links -> MARKED REPETITIVE
Contig #370 (tig00241108_pilon_pilon_pilon) has 3.9x the average number of Hi-C links -> MARKED REPETITIVE
Contig #395 (tig00241122_pilon_pilon_pilon_96999_399386) has 2.0x the average number of Hi-C links -> MARKED REPETITIVE
[32m17:59:12 skipRepeats | NOTICE [0m Marked 24 contigs (avg len 187482) as repetitive (MaxLinkDensity = 2)
[32m17:59:12 Cluster | NOTICE [0m Clustering starts with 398 (251 informative) contigs with target of 12 clusters
[32m17:59:12 Cluster | NOTICE [0m Merge #50: Clusters	21 + 214 -> 447, Linkage = 2.5065256e+07
[32m17:59:12 Cluster | NOTICE [0m Merge #100: Clusters	239 + 449 -> 497, Linkage = 8.240156e+06
[32m17:59:12 Cluster | NOTICE [0m Merge #150: Clusters	409 + 510 -> 547, Linkage = 2.684394125e+06
[32m17:59:12 Cluster | NOTICE [0m 189 merges made so far; this leaves 12 clusters, and so we'r done!
[32m17:59:12 setClusters | NOTICE [0m setClusters summary (NonInformativeRatio = 3): nPassRatio = 53, nFailRatio = 84, nFailCluster=10
[32m17:59:12 printClusters | NOTICE [0m Write 12 partitions to `sample.unique.REduced.paired_only.clusters.txt`
[32m17:59:12 writeRE | NOTICE [0m RE counts in 33 contigs (total: 55801, avg 1 per 273 bp) written to `sample.unique.REduced.paired_only.counts_GATC.12g5.txt`
[32m17:59:12 writeRE | NOTICE [0m RE counts in 38 contigs (total: 49862, avg 1 per 282 bp) written to `sample.unique.REduced.paired_only.counts_GATC.12g6.txt`
[32m17:59:12 writeRE | NOTICE [0m RE counts in 7 contigs (total: 858, avg 1 per 103 bp) written to `sample.unique.REduced.paired_only.counts_GATC.12g8.txt`
[32m17:59:12 writeRE | NOTICE [0m RE counts in 2 contigs (total: 164, avg 1 per 102 bp) written to `sample.unique.REduced.paired_only.counts_GATC.12g11.txt`
[32m17:59:12 writeRE | NOTICE [0m RE counts in 56 contigs (total: 230582, avg 1 per 284 bp) written to `sample.unique.REduced.paired_only.counts_GATC.12g2.txt`
[32m17:59:12 writeRE | NOTICE [0m RE counts in 8 contigs (total: 130967, avg 1 per 279 bp) written to `sample.unique.REduced.paired_only.counts_GATC.12g3.txt`
[32m17:59:12 writeRE | NOTICE [0m RE counts in 33 contigs (total: 91014, avg 1 per 298 bp) written to `sample.unique.REduced.paired_only.counts_GATC.12g4.txt`
[32m17:59:12 writeRE | NOTICE [0m RE counts in 10 contigs (total: 5842, avg 1 per 279 bp) written to `sample.unique.REduced.paired_only.counts_GATC.12g7.txt`
[32m17:59:12 writeRE | NOTICE [0m RE counts in 3 contigs (total: 366, avg 1 per 102 bp) written to `sample.unique.REduced.paired_only.counts_GATC.12g9.txt`
[32m17:59:12 writeRE | NOTICE [0m RE counts in 3 contigs (total: 240, avg 1 per 85 bp) written to `sample.unique.REduced.paired_only.counts_GATC.12g10.txt`
[32m17:59:12 writeRE | NOTICE [0m RE counts in 2 contigs (total: 138, avg 1 per 110 bp) written to `sample.unique.REduced.paired_only.counts_GATC.12g12.txt`
[32m17:59:12 writeRE | NOTICE [0m RE counts in 59 contigs (total: 658736, avg 1 per 281 bp) written to `sample.unique.REduced.paired_only.counts_GATC.12g1.txt`
[32m17:59:12 Run | NOTICE [0m Success
rm: cannot remove 'cmd.list': No such file or directory
Number of  Commands: 12
[32m17:59:13 readRE | NOTICE [0m Parse REfile `sample.unique.REduced.paired_only.counts_GATC.12g6.txt`
[32m17:59:13 readClmLines | NOTICE [0m Parse clmfile `sample.unique.REduced.paired_only.clm`
[32m17:59:13 readRE | NOTICE [0m Parse REfile `sample.unique.REduced.paired_only.counts_GATC.12g12.txt`
[32m17:59:13 readClmLines | NOTICE [0m Parse clmfile `sample.unique.REduced.paired_only.clm`
[32m17:59:13 readRE | NOTICE [0m Parse REfile `sample.unique.REduced.paired_only.counts_GATC.12g5.txt`
[32m17:59:13 readClmLines | NOTICE [0m Parse clmfile `sample.unique.REduced.paired_only.clm`
[32m17:59:13 readRE | NOTICE [0m Parse REfile `sample.unique.REduced.paired_only.counts_GATC.12g8.txt`
[32m17:59:13 readRE | NOTICE [0m Parse REfile `sample.unique.REduced.paired_only.counts_GATC.12g1.txt`
[32m17:59:13 readClmLines | NOTICE [0m Parse clmfile `sample.unique.REduced.paired_only.clm`
[32m17:59:13 readRE | NOTICE [0m Parse REfile `sample.unique.REduced.paired_only.counts_GATC.12g9.txt`
[32m17:59:13 readClmLines | NOTICE [0m Parse clmfile `sample.unique.REduced.paired_only.clm`
[32m17:59:13 readClmLines | NOTICE [0m Parse clmfile `sample.unique.REduced.paired_only.clm`
[32m17:59:13 readRE | NOTICE [0m Parse REfile `sample.unique.REduced.paired_only.counts_GATC.12g4.txt`
[32m17:59:13 readRE | NOTICE [0m Parse REfile `sample.unique.REduced.paired_only.counts_GATC.12g7.txt`
[32m17:59:13 readClmLines | NOTICE [0m Parse clmfile `sample.unique.REduced.paired_only.clm`
[32m17:59:13 readClmLines | NOTICE [0m Parse clmfile `sample.unique.REduced.paired_only.clm`
[32m17:59:13 readRE | NOTICE [0m Parse REfile `sample.unique.REduced.paired_only.counts_GATC.12g2.txt`
[32m17:59:13 readClmLines | NOTICE [0m Parse clmfile `sample.unique.REduced.paired_only.clm`
[32m17:59:13 readRE | NOTICE [0m Parse REfile `sample.unique.REduced.paired_only.counts_GATC.12g11.txt`
[32m17:59:13 readClmLines | NOTICE [0m Parse clmfile `sample.unique.REduced.paired_only.clm`
[32m17:59:13 readRE | NOTICE [0m Parse REfile `sample.unique.REduced.paired_only.counts_GATC.12g3.txt`
[32m17:59:13 readClmLines | NOTICE [0m Parse clmfile `sample.unique.REduced.paired_only.clm`
[32m17:59:13 readRE | NOTICE [0m Parse REfile `sample.unique.REduced.paired_only.counts_GATC.12g10.txt`
[32m17:59:13 readClmLines | NOTICE [0m Parse clmfile `sample.unique.REduced.paired_only.clm`
[32m17:59:34 reportActive | NOTICE [0m Active tigs: 2 (length=16746)
[32m17:59:34 flipLog | NOTICE [0m FLIPALL: -26.94786 => -26.94786 ACCEPT
[32m17:59:34 Run | NOTICE [0m Optimization history logged to `sample.unique.REduced.paired_only.counts_GATC.12g11.tour`
>INIT
tig00007720_pilon_pilon_pilon+ tig00005758_pilon_pilon_pilon+
[32m17:59:34 GARun | NOTICE [0m GA initialized (npop: 100, ngen: 5000, mu: 0.20, rng: 42, break: 10000000)
Current iteration GA1-0: max_score=0.00036
Current iteration GA1-500: max_score=0.00036
Current iteration GA1-1000: max_score=0.00036
[32m17:59:34 reportActive | NOTICE [0m Active tigs: 10 (length=1635239)
[32m17:59:34 flipLog | NOTICE [0m FLIPALL: -41653.42583 => -42171.19243 REJECT
[32m17:59:34 Run | NOTICE [0m Optimization history logged to `sample.unique.REduced.paired_only.counts_GATC.12g7.tour`
>INIT
tig00241107_pilon_pilon_pilon+ tig00031576_pilon_pilon_pilon_1325000_1325999+ tig00031563_pilon_pilon_pilon_89000_89999+ tig00031595_pilon_pilon_pilon+ tig00000303_pilon_pilon_pilon_1_109999+ tig00031576_pilon_pilon_pilon_1_1324999+ tig00000303_pilon_pilon_pilon_115000_115999+ tig00000303_pilon_pilon_pilon_115999_238208+ tig00000303_pilon_pilon_pilon_110000_110999+ tig00031557_pilon_pilon_pilon_15297000_15319999+
[32m17:59:34 GARun | NOTICE [0m GA initialized (npop: 100, ngen: 5000, mu: 0.20, rng: 42, break: 10000000)
Current iteration GA1-0: max_score=0.00433
Current iteration GA1-1500: max_score=0.00036
[32m17:59:34 reportActive | NOTICE [0m Active tigs: 2 (length=15266)
[32m17:59:34 flipLog | NOTICE [0m FLIPALL: -34.64725 => -38.49695 REJECT
[32m17:59:34 Run | NOTICE [0m Optimization history logged to `sample.unique.REduced.paired_only.counts_GATC.12g12.tour`
>INIT
tig00017685_pilon_pilon_pilon+ tig00014678_pilon_pilon_pilon+
[32m17:59:34 GARun | NOTICE [0m GA initialized (npop: 100, ngen: 5000, mu: 0.20, rng: 42, break: 10000000)
Current iteration GA1-0: max_score=0.00052
Current iteration GA1-500: max_score=0.00529
[32m17:59:34 reportActive | NOTICE [0m Active tigs: 8 (length=36633938)
[32m17:59:34 flipLog | NOTICE [0m FLIPALL: -15723.82215 => -15704.57612 ACCEPT
[32m17:59:34 Run | NOTICE [0m Optimization history logged to `sample.unique.REduced.paired_only.counts_GATC.12g3.tour`
>INIT
tig00014800_pilon_pilon_pilon- tig00025666_pilon_pilon_pilon+ tig00031547_pilon_pilon_pilon- tig00007414_pilon_pilon_pilon+ tig00031590_pilon_pilon_pilon_218000_218999+ tig00031566_pilon_pilon_pilon_75000_124999- tig00023478_pilon_pilon_pilon- tig00031557_pilon_pilon_pilon_15319999_31408748-
[32m17:59:34 GARun | NOTICE [0m GA initialized (npop: 100, ngen: 5000, mu: 0.20, rng: 42, break: 10000000)
Current iteration GA1-0: max_score=0.00014
Current iteration GA1-2000: max_score=0.00036
Current iteration GA1-500: max_score=0.00052
Current iteration GA1-1000: max_score=0.00529
Current iteration GA1-2500: max_score=0.00036
Current iteration GA1-500: max_score=0.00014
[32m17:59:34 reportActive | NOTICE [0m Active tigs: 56 (length=65510618)
[32m17:59:34 flipLog | NOTICE [0m FLIPALL: -9945628.62268 => -9943161.69877 ACCEPT
[32m17:59:34 Run | NOTICE [0m Optimization history logged to `sample.unique.REduced.paired_only.counts_GATC.12g2.tour`
>INIT
tig00031580_pilon_pilon_pilon+ tig00031591_pilon_pilon_pilon_219000_227999- tig00031581_pilon_pilon_pilon+ tig00000676_pilon_pilon_pilon+ tig00031552_pilon_pilon_pilon_107999_229718+ tig00031577_pilon_pilon_pilon+ tig00002498_pilon_pilon_pilon+ tig00031579_pilon_pilon_pilon- tig00031590_pilon_pilon_pilon_1_139999+ tig00031554_pilon_pilon_pilon_1_677999- tig00002012_pilon_pilon_pilon_143000_172999+ tig00000688_pilon_pilon_pilon- tig00031562_pilon_pilon_pilon- tig00031560_pilon_pilon_pilon_7175999_7633732- tig00002012_pilon_pilon_pilon_1_140999- tig00031552_pilon_pilon_pilon_1_106999- tig00031570_pilon_pilon_pilon_1_1619999- tig00000419_pilon_pilon_pilon_1_269999+ tig00031582_pilon_pilon_pilon_378000_379999- tig00017538_pilon_pilon_pilon+ tig00002201_pilon_pilon_pilon+ tig00031582_pilon_pilon_pilon_1_115999- tig00031591_pilon_pilon_pilon_180000_218999+ tig00031591_pilon_pilon_pilon_227999_310901+ tig00007608_pilon_pilon_pilon+ tig00000142_pilon_pilon_pilon_818999_2132570- tig00022916_pilon_pilon_pilon- tig00000419_pilon_pilon_pilon_270000_270999+ tig00031582_pilon_pilon_pilon_116000_120999- tig00031578_pilon_pilon_pilon_1_88999- tig00031582_pilon_pilon_pilon_121000_157999+ tig00031557_pilon_pilon_pilon_1_15296999+ tig00031560_pilon_pilon_pilon_1_7174999- tig00000686_pilon_pilon_pilon- tig00031582_pilon_pilon_pilon_502000_549999- tig00031576_pilon_pilon_pilon_1325999_8981222- tig00002274_pilon_pilon_pilon+ tig00000142_pilon_pilon_pilon_1_753999- tig00031582_pilon_pilon_pilon_380000_500999- tig00002012_pilon_pilon_pilon_194999_292186+ tig00001141_pilon_pilon_pilon_4244999_4315281+ tig00031582_pilon_pilon_pilon_159000_377999- tig00002012_pilon_pilon_pilon_173000_179999+ tig00000142_pilon_pilon_pilon_818000_818999- tig00031554_pilon_pilon_pilon_703000_703999- tig00031553_pilon_pilon_pilon+ tig00000419_pilon_pilon_pilon_271000_584999+ tig00031554_pilon_pilon_pilon_678000_678999+ tig00026331_pilon_pilon_pilon+ tig00000639_pilon_pilon_pilon- tig00031593_pilon_pilon_pilon+ tig00031591_pilon_pilon_pilon_1_177999- tig00031555_pilon_pilon_pilon_1_74999+ tig00031554_pilon_pilon_pilon_703999_17546130- tig00031554_pilon_pilon_pilon_679000_702999- tig00031592_pilon_pilon_pilon+
[32m17:59:34 GARun | NOTICE [0m GA initialized (npop: 100, ngen: 5000, mu: 0.20, rng: 42, break: 10000000)
Current iteration GA1-0: max_score=0.05775
[32m17:59:35 reportActive | NOTICE [0m Active tigs: 3 (length=20542)
[32m17:59:35 flipLog | NOTICE [0m FLIPALL: -72.77513 => -72.77513 ACCEPT
[32m17:59:35 Run | NOTICE [0m Optimization history logged to `sample.unique.REduced.paired_only.counts_GATC.12g10.tour`
>INIT
tig00241105_pilon_pilon_pilon+ tig00026836_pilon_pilon_pilon+ tig00029519_pilon_pilon_pilon-
[32m17:59:35 GARun | NOTICE [0m GA initialized (npop: 100, ngen: 5000, mu: 0.20, rng: 42, break: 10000000)
Current iteration GA1-0: max_score=0.00071
Current iteration GA1-1000: max_score=0.00052
Current iteration GA1-1500: max_score=0.00529
Current iteration GA1-3000: max_score=0.00036
Current iteration GA1-1000: max_score=0.00014
Current iteration GA1-500: max_score=0.20878
Current iteration GA1-1500: max_score=0.00052
Current iteration GA1-500: max_score=0.00120
Current iteration GA1-1500: max_score=0.00014
Current iteration GA1-2000: max_score=0.00529
Current iteration GA1-3500: max_score=0.00036
Current iteration GA1-2000: max_score=0.00052
Current iteration GA1-1000: max_score=0.00120
Current iteration GA1-1000: max_score=0.21117
Current iteration GA1-2000: max_score=0.00014
Current iteration GA1-2500: max_score=0.00529
Current iteration GA1-4000: max_score=0.00036
Current iteration GA1-1500: max_score=0.00120
Current iteration GA1-2500: max_score=0.00052
Current iteration GA1-2500: max_score=0.00014
Current iteration GA1-1500: max_score=0.21164
Current iteration GA1-3000: max_score=0.00529
Current iteration GA1-4500: max_score=0.00036
Current iteration GA1-2000: max_score=0.00120
Current iteration GA1-3000: max_score=0.00052
Current iteration GA1-3000: max_score=0.00014
Current iteration GA1-2000: max_score=0.21166
[32m17:59:36 reportActive | NOTICE [0m Active tigs: 7 (length=88695)
[32m17:59:37 reportActive | NOTICE [0m Active tigs: 59 (length=185579940)
[32m17:59:37 reportActive | NOTICE [0m Active tigs: 38 (length=14091419)
[32m17:59:37 reportActive | NOTICE [0m Active tigs: 33 (length=15259036)
[32m17:59:38 reportActive | NOTICE [0m Active tigs: 33 (length=27136071)
[32m17:59:38 reportActive | NOTICE [0m Active tigs: 3 (length=37409)
[32m17:59:39 flipLog | NOTICE [0m FLIPALL: -266.26677 => -263.43012 ACCEPT
[32m17:59:39 flipLog | NOTICE [0m FLIPALL: -78.91874 => -78.91874 ACCEPT
[32m17:59:39 Run | NOTICE [0m Optimization history logged to `sample.unique.REduced.paired_only.counts_GATC.12g8.tour`
[32m17:59:39 Run | NOTICE [0m Optimization history logged to `sample.unique.REduced.paired_only.counts_GATC.12g9.tour`
>INIT
tig00029579_pilon_pilon_pilon+ tig00241118_pilon_pilon_pilon- tig00001289_pilon_pilon_pilon+ tig00018403_pilon_pilon_pilon- tig00022332_pilon_pilon_pilon- tig00009039_pilon_pilon_pilon- tig00023013_pilon_pilon_pilon-
[32m17:59:39 GARun | NOTICE [0m GA initialized (npop: 100, ngen: 5000, mu: 0.20, rng: 42, break: 10000000)
>INIT
tig00025561_pilon_pilon_pilon+ tig00005671_pilon_pilon_pilon+ tig00012671_pilon_pilon_pilon+
[32m17:59:39 GARun | NOTICE [0m GA initialized (npop: 100, ngen: 5000, mu: 0.20, rng: 42, break: 10000000)
Current iteration GA1-0: max_score=0.00126
[32m17:59:39 flipLog | NOTICE [0m FLIPALL: -4108379.04813 => -4107824.80976 ACCEPT
Current iteration GA1-0: max_score=0.00057
[32m17:59:39 Run | NOTICE [0m Optimization history logged to `sample.unique.REduced.paired_only.counts_GATC.12g4.tour`
[32m17:59:39 flipLog | NOTICE [0m FLIPALL: -812884.54496 => -813350.37017 REJECT
[32m17:59:39 flipLog | NOTICE [0m FLIPALL: -3271810.73648 => -3272191.89772 REJECT
[32m17:59:39 Run | NOTICE [0m Optimization history logged to `sample.unique.REduced.paired_only.counts_GATC.12g5.tour`
[32m17:59:39 Run | NOTICE [0m Optimization history logged to `sample.unique.REduced.paired_only.counts_GATC.12g6.tour`
>INIT
tig00001901_pilon_pilon_pilon- tig00001973_pilon_pilon_pilon- tig00031569_pilon_pilon_pilon_1_89999+ tig00000540_pilon_pilon_pilon_1_6153999+ tig00031565_pilon_pilon_pilon_26692999_26820353- tig00031569_pilon_pilon_pilon_98000_151999- tig00008191_pilon_pilon_pilon- tig00031569_pilon_pilon_pilon_184999_273806- tig00000176_pilon_pilon_pilon+ tig00031570_pilon_pilon_pilon_12250999_15953415+ tig00000610_pilon_pilon_pilon- tig00000540_pilon_pilon_pilon_6157000_7105999+ tig00001898_pilon_pilon_pilon- tig00000244_pilon_pilon_pilon_1_138999+ tig00000494_pilon_pilon_pilon- tig00000616_pilon_pilon_pilon_173999_300685- tig00031556_pilon_pilon_pilon- tig00000540_pilon_pilon_pilon_7114999_8020028+ tig00002060_pilon_pilon_pilon- tig00000540_pilon_pilon_pilon_7106000_7114999- tig00031552_pilon_pilon_pilon_107000_107999- tig00000616_pilon_pilon_pilon_1_160999+ tig00002220_pilon_pilon_pilon+ tig00000904_pilon_pilon_pilon- tig00031555_pilon_pilon_pilon_299999_376792+ tig00002273_pilon_pilon_pilon+ tig00002066_pilon_pilon_pilon+ tig00002124_pilon_pilon_pilon- tig00001987_pilon_pilon_pilon_107999_314237- tig00000244_pilon_pilon_pilon_139000_140999- tig00001987_pilon_pilon_pilon_1_105999+ tig00002035_pilon_pilon_pilon+ tig00000540_pilon_pilon_pilon_6154000_6156999-
[32m17:59:39 GARun | NOTICE [0m GA initialized (npop: 100, ngen: 5000, mu: 0.20, rng: 42, break: 10000000)
>INIT
tig00241095_pilon_pilon_pilon_389000_424999+ tig00241095_pilon_pilon_pilon_426000_707999+ tig00241122_pilon_pilon_pilon_96000_96999+ tig00031575_pilon_pilon_pilon+ tig00241122_pilon_pilon_pilon_96999_399386+ tig00241095_pilon_pilon_pilon_388000_388999+ tig00241095_pilon_pilon_pilon_1576000_1577999+ tig00241095_pilon_pilon_pilon_141000_141999+ tig00002011_pilon_pilon_pilon+ tig00241095_pilon_pilon_pilon_1050000_1051999+ tig00031597_pilon_pilon_pilon_109999_178932+ tig00031588_pilon_pilon_pilon+ tig00241095_pilon_pilon_pilon_373000_380999+ tig00002209_pilon_pilon_pilon+ tig00031566_pilon_pilon_pilon_1_74999+ tig00241095_pilon_pilon_pilon_1_140999+ tig00241095_pilon_pilon_pilon_385000_387999+ tig00031597_pilon_pilon_pilon_1_107999+ tig00241096_pilon_pilon_pilon+ tig00241095_pilon_pilon_pilon_708000_709999+ tig00241095_pilon_pilon_pilon_381000_381999+ tig00031598_pilon_pilon_pilon+ tig00241095_pilon_pilon_pilon_372000_372999+ tig00241095_pilon_pilon_pilon_142000_371999+ tig00031597_pilon_pilon_pilon_108000_109999+ tig00241095_pilon_pilon_pilon_425000_425999+ tig00241121_pilon_pilon_pilon+ tig00241122_pilon_pilon_pilon_1_95999+ tig00241095_pilon_pilon_pilon_1052000_1575999+ tig00241095_pilon_pilon_pilon_384000_384999+ tig00241095_pilon_pilon_pilon_710000_1049999+ tig00241095_pilon_pilon_pilon_1577999_1849610+ tig00241095_pilon_pilon_pilon_382000_383999+
[32m17:59:39 GARun | NOTICE [0m GA initialized (npop: 100, ngen: 5000, mu: 0.20, rng: 42, break: 10000000)
>INIT
tig00001613_pilon_pilon_pilon+ tig00031549_pilon_pilon_pilon_5860000_6005999+ tig00031549_pilon_pilon_pilon_87000_88999+ tig00241119_pilon_pilon_pilon_1_324999+ tig00031548_pilon_pilon_pilon+ tig00000535_pilon_pilon_pilon_1_1399999+ tig00031549_pilon_pilon_pilon_5660000_5669999+ tig00241119_pilon_pilon_pilon_851000_1106999+ tig00031549_pilon_pilon_pilon_6226000_6774999+ tig00241119_pilon_pilon_pilon_1107000_1107999+ tig00031549_pilon_pilon_pilon_6225000_6225999+ tig00000271_pilon_pilon_pilon+ tig00031549_pilon_pilon_pilon_6140000_6142999+ tig00031549_pilon_pilon_pilon_1_86999+ tig00000281_pilon_pilon_pilon+ tig00241119_pilon_pilon_pilon_850000_850999+ tig00241119_pilon_pilon_pilon_1350000_1393999+ tig00031549_pilon_pilon_pilon_6143000_6224999+ tig00031549_pilon_pilon_pilon_5854000_5854999+ tig00241120_pilon_pilon_pilon+ tig00031549_pilon_pilon_pilon_6136000_6139999+ tig00031549_pilon_pilon_pilon_6006000_6008999+ tig00241119_pilon_pilon_pilon_325000_325999+ tig00241119_pilon_pilon_pilon_1394000_2319999+ tig00031549_pilon_pilon_pilon_6132000_6135999+ tig00031550_pilon_pilon_pilon+ tig00241119_pilon_pilon_pilon_326000_849999+ tig00241119_pilon_pilon_pilon_1108000_1349999+ tig00000535_pilon_pilon_pilon_1400000_1403999+ tig00031549_pilon_pilon_pilon_5532000_5659999+ tig00000535_pilon_pilon_pilon_1403999_4462395+ tig00000270_pilon_pilon_pilon+ tig00031549_pilon_pilon_pilon_5855000_5858999+ tig00241119_pilon_pilon_pilon_2320000_2320999+ tig00017223_pilon_pilon_pilon+ tig00031549_pilon_pilon_pilon_89000_5530999+ tig00031549_pilon_pilon_pilon_6009000_6131999+ tig00031549_pilon_pilon_pilon_5670000_5853999+
Current iteration GA1-0: max_score=0.04226
[32m17:59:39 GARun | NOTICE [0m GA initialized (npop: 100, ngen: 5000, mu: 0.20, rng: 42, break: 10000000)
Current iteration GA1-0: max_score=0.06079
Current iteration GA1-0: max_score=0.07027
[32m17:59:39 flipLog | NOTICE [0m FLIPALL: -12034410.46270 => -12039810.11258 REJECT
[32m17:59:39 Run | NOTICE [0m Optimization history logged to `sample.unique.REduced.paired_only.counts_GATC.12g1.tour`
>INIT
tig00031565_pilon_pilon_pilon_1_4199999+ tig00031549_pilon_pilon_pilon_6775999_14411164+ tig00011762_pilon_pilon_pilon+ tig00002468_pilon_pilon_pilon+ tig00025771_pilon_pilon_pilon+ tig00031573_pilon_pilon_pilon+ tig00019430_pilon_pilon_pilon+ tig00006100_pilon_pilon_pilon+ tig00000148_pilon_pilon_pilon+ tig00241117_pilon_pilon_pilon+ tig00002357_pilon_pilon_pilon+ tig00031594_pilon_pilon_pilon+ tig00001915_pilon_pilon_pilon+ tig00001070_pilon_pilon_pilon+ tig00031570_pilon_pilon_pilon_8254000_12249999+ tig00001749_pilon_pilon_pilon+ tig00000385_pilon_pilon_pilon_10850000_10850999+ tig00000572_pilon_pilon_pilon+ tig00008901_pilon_pilon_pilon+ tig00031568_pilon_pilon_pilon+ tig00010342_pilon_pilon_pilon+ tig00000327_pilon_pilon_pilon+ tig00000977_pilon_pilon_pilon+ tig00031582_pilon_pilon_pilon_550999_2860292+ tig00001230_pilon_pilon_pilon+ tig00022394_pilon_pilon_pilon+ tig00000472_pilon_pilon_pilon+ tig00000419_pilon_pilon_pilon_1145000_1527999+ tig00000419_pilon_pilon_pilon_1528999_1911058+ tig00001158_pilon_pilon_pilon+ tig00025689_pilon_pilon_pilon+ tig00000411_pilon_pilon_pilon_1_12224999+ tig00000419_pilon_pilon_pilon_1528000_1528999+ tig00000617_pilon_pilon_pilon+ tig00025907_pilon_pilon_pilon+ tig00031570_pilon_pilon_pilon_1621000_8249999+ tig00002838_pilon_pilon_pilon+ tig00000419_pilon_pilon_pilon_592000_1142999+ tig00000004_pilon_pilon_pilon_1_13684999+ tig00002236_pilon_pilon_pilon+ tig00000109_pilon_pilon_pilon+ tig00000385_pilon_pilon_pilon_1_10849999+ tig00016707_pilon_pilon_pilon+ tig00241099_pilon_pilon_pilon+ tig00000244_pilon_pilon_pilon_148000_148999+ tig00031571_pilon_pilon_pilon+ tig00000419_pilon_pilon_pilon_1143000_1144999+ tig00023785_pilon_pilon_pilon+ tig00024051_pilon_pilon_pilon+ tig00010097_pilon_pilon_pilon+ tig00000004_pilon_pilon_pilon_13698999_34761239+ tig00001378_pilon_pilon_pilon+ tig00031569_pilon_pilon_pilon_160000_178999+ tig00030192_pilon_pilon_pilon+ tig00001141_pilon_pilon_pilon_1_4164999+ tig00000628_pilon_pilon_pilon+ tig00031565_pilon_pilon_pilon_4201000_26665999+ tig00031578_pilon_pilon_pilon_89999_3057000+ tig00002324_pilon_pilon_pilon+
[32m17:59:39 GARun | NOTICE [0m GA initialized (npop: 100, ngen: 5000, mu: 0.20, rng: 42, break: 10000000)
Current iteration GA1-0: max_score=0.06626
Current iteration GA1-3500: max_score=0.00014
Current iteration GA1-3500: max_score=0.00529
Current iteration GA1-2500: max_score=0.00120
Current iteration GA1-5000: max_score=0.00036
Current iteration GA1-3500: max_score=0.00052
[32m17:59:39 GARun | NOTICE [0m GA initialized (npop: 100, ngen: 5000, mu: 0.20, rng: 42, break: 10000000)
Current iteration GA2-0: max_score=0.00036
Current iteration GA1-500: max_score=0.00192
Current iteration GA1-500: max_score=0.13986
Current iteration GA1-2500: max_score=0.21166
Current iteration GA1-500: max_score=0.07425
Current iteration GA1-500: max_score=0.28048
Current iteration GA1-500: max_score=0.00057
Current iteration GA1-500: max_score=0.11321
Current iteration GA1-4000: max_score=0.00529
Current iteration GA1-4000: max_score=0.00014
Current iteration GA2-500: max_score=0.00036
Current iteration GA1-4000: max_score=0.00052
Current iteration GA1-3000: max_score=0.00120
Current iteration GA1-1000: max_score=0.00192
Current iteration GA1-1000: max_score=0.14007
Current iteration GA1-3000: max_score=0.21166
Current iteration GA1-1000: max_score=0.07425
Current iteration GA1-1000: max_score=0.28145
Current iteration GA1-1000: max_score=0.00057
Current iteration GA1-4500: max_score=0.00529
Current iteration GA1-4500: max_score=0.00014
Current iteration GA1-1000: max_score=0.11324
Current iteration GA2-1000: max_score=0.00036
Current iteration GA1-4500: max_score=0.00052
Current iteration GA1-1500: max_score=0.00192
Current iteration GA1-3500: max_score=0.00120
Current iteration GA1-1500: max_score=0.14007
Current iteration GA1-3500: max_score=0.21166
Current iteration GA1-1500: max_score=0.07425
Current iteration GA1-1500: max_score=0.28156
Current iteration GA1-5000: max_score=0.00014
[32m17:59:40 GARun | NOTICE [0m GA initialized (npop: 100, ngen: 5000, mu: 0.20, rng: 42, break: 10000000)
Current iteration GA2-0: max_score=0.00014
Current iteration GA1-5000: max_score=0.00529
[32m17:59:40 GARun | NOTICE [0m GA initialized (npop: 100, ngen: 5000, mu: 0.20, rng: 42, break: 10000000)
Current iteration GA2-0: max_score=0.00529
Current iteration GA2-1500: max_score=0.00036
Current iteration GA1-2000: max_score=0.00192
Current iteration GA1-5000: max_score=0.00052
[32m17:59:40 GARun | NOTICE [0m GA initialized (npop: 100, ngen: 5000, mu: 0.20, rng: 42, break: 10000000)
Current iteration GA2-0: max_score=0.00052
Current iteration GA1-4000: max_score=0.00120
Current iteration GA1-1500: max_score=0.00057
Current iteration GA1-1500: max_score=0.11324
Current iteration GA1-2000: max_score=0.14007
Current iteration GA1-4000: max_score=0.21166
Current iteration GA1-2000: max_score=0.07425
Current iteration GA1-2000: max_score=0.28156
Current iteration GA2-500: max_score=0.00014
Current iteration GA2-500: max_score=0.00529
Current iteration GA2-2000: max_score=0.00036
Current iteration GA2-500: max_score=0.00052
Current iteration GA1-2500: max_score=0.00192
Current iteration GA1-4500: max_score=0.00120
Current iteration GA1-2500: max_score=0.14007
Current iteration GA1-2000: max_score=0.00057
Current iteration GA1-2000: max_score=0.11324
Current iteration GA2-1000: max_score=0.00014
Current iteration GA1-4500: max_score=0.21166
Current iteration GA1-2500: max_score=0.07425
Current iteration GA1-2500: max_score=0.28156
Current iteration GA2-1000: max_score=0.00529
Current iteration GA2-2500: max_score=0.00036
Current iteration GA2-1000: max_score=0.00052
Current iteration GA1-3000: max_score=0.00192
Current iteration GA1-5000: max_score=0.00120
[32m17:59:40 GARun | NOTICE [0m GA initialized (npop: 100, ngen: 5000, mu: 0.20, rng: 42, break: 10000000)
Current iteration GA2-0: max_score=0.00120
Current iteration GA2-1500: max_score=0.00014
Current iteration GA1-3000: max_score=0.14007
Current iteration GA1-2500: max_score=0.11324
Current iteration GA2-1500: max_score=0.00529
Current iteration GA2-3000: max_score=0.00036
Current iteration GA1-3000: max_score=0.28156
Current iteration GA1-5000: max_score=0.21166
Current iteration GA1-3000: max_score=0.07425
Current iteration GA2-1500: max_score=0.00052
Current iteration GA1-2500: max_score=0.00057
Current iteration GA1-3500: max_score=0.00192
Current iteration GA2-500: max_score=0.00120
Current iteration GA2-2000: max_score=0.00014
Current iteration GA2-2000: max_score=0.00529
Current iteration GA2-3500: max_score=0.00036
Current iteration GA1-3500: max_score=0.14007
Current iteration GA1-3000: max_score=0.11324
Current iteration GA1-3500: max_score=0.28156
Current iteration GA2-1000: max_score=0.00120
Current iteration GA2-2000: max_score=0.00052
Current iteration GA1-4000: max_score=0.00192
Current iteration GA1-5500: max_score=0.21166
Current iteration GA1-3500: max_score=0.07425
Current iteration GA1-3000: max_score=0.00057
Current iteration GA2-2500: max_score=0.00014
Current iteration GA2-2500: max_score=0.00529
Current iteration GA2-4000: max_score=0.00036
Current iteration GA2-1500: max_score=0.00120
Current iteration GA1-4500: max_score=0.00192
Current iteration GA1-4000: max_score=0.14007
Current iteration GA2-2500: max_score=0.00052
Current iteration GA1-4000: max_score=0.28156
Current iteration GA1-3500: max_score=0.11324
Current iteration GA1-6000: max_score=0.21166
Current iteration GA2-3000: max_score=0.00014
Current iteration GA1-4000: max_score=0.07425
Current iteration GA1-3500: max_score=0.00057
Current iteration GA2-3000: max_score=0.00529
Current iteration GA2-2000: max_score=0.00120
Current iteration GA2-4500: max_score=0.00036
Current iteration GA1-5000: max_score=0.00192
[32m17:59:41 GARun | NOTICE [0m GA initialized (npop: 100, ngen: 5000, mu: 0.20, rng: 42, break: 10000000)
Current iteration GA2-0: max_score=0.00192
Current iteration GA2-3000: max_score=0.00052
Current iteration GA2-3500: max_score=0.00014
Current iteration GA1-4500: max_score=0.14007
Current iteration GA1-4000: max_score=0.11324
Current iteration GA1-4500: max_score=0.28156
Current iteration GA1-6500: max_score=0.21166
Current iteration GA1-4500: max_score=0.07425
Current iteration GA2-3500: max_score=0.00529
Current iteration GA2-2500: max_score=0.00120
Current iteration GA2-5000: max_score=0.00036
[32m17:59:41 flipLog | NOTICE [0m FLIPWHOLE: -26.94786 => -27.91029 REJECT
[32m17:59:41 flipOne | NOTICE [0m FLIPONE: N_accepts=0 N_rejects=2
[32m17:59:41 Run | NOTICE [0m Terminating ... no more ACCEPT
>FINAL
tig00007720_pilon_pilon_pilon+ tig00005758_pilon_pilon_pilon+
[32m17:59:41 Run | NOTICE [0m Success
Current iteration GA1-4000: max_score=0.00057
Current iteration GA2-4000: max_score=0.00014
Current iteration GA2-500: max_score=0.00192
Current iteration GA2-3500: max_score=0.00052
Current iteration GA1-5000: max_score=0.14007
Current iteration GA1-5000: max_score=0.28156
Current iteration GA1-4500: max_score=0.11324
Current iteration GA1-7000: max_score=0.21166
Current iteration GA2-3000: max_score=0.00120
Current iteration GA2-4000: max_score=0.00529
Current iteration GA1-5000: max_score=0.07425
Current iteration GA1-4500: max_score=0.00057
[32m17:59:41 GARun | NOTICE [0m GA initialized (npop: 100, ngen: 5000, mu: 0.20, rng: 42, break: 10000000)
Current iteration GA2-0: max_score=0.21166
Current iteration GA2-4500: max_score=0.00014
Current iteration GA2-1000: max_score=0.00192
Current iteration GA2-4000: max_score=0.00052
Current iteration GA1-5500: max_score=0.14007
Current iteration GA2-3500: max_score=0.00120
Current iteration GA1-5500: max_score=0.28156
Current iteration GA1-5000: max_score=0.11324
Current iteration GA2-4500: max_score=0.00529
Current iteration GA1-5000: max_score=0.00057
[32m17:59:41 GARun | NOTICE [0m GA initialized (npop: 100, ngen: 5000, mu: 0.20, rng: 42, break: 10000000)
Current iteration GA2-0: max_score=0.00057
Current iteration GA2-5000: max_score=0.00014
[32m17:59:41 flipLog | NOTICE [0m FLIPWHOLE: -37208.26074 => -37214.51649 REJECT
[32m17:59:41 flipOne | NOTICE [0m FLIPONE: N_accepts=2 N_rejects=6
[32m17:59:41 flipLog | NOTICE [0m FLIPWHOLE: -37197.19287 => -37224.14073 REJECT
[32m17:59:41 flipOne | NOTICE [0m FLIPONE: N_accepts=0 N_rejects=8
[32m17:59:41 Run | NOTICE [0m Terminating ... no more ACCEPT
>FINAL
tig00031547_pilon_pilon_pilon+ tig00031566_pilon_pilon_pilon_75000_124999+ tig00031557_pilon_pilon_pilon_15319999_31408748- tig00007414_pilon_pilon_pilon+ tig00014800_pilon_pilon_pilon- tig00023478_pilon_pilon_pilon- tig00031590_pilon_pilon_pilon_218000_218999+ tig00025666_pilon_pilon_pilon+
[32m17:59:41 Run | NOTICE [0m Success
[32m17:59:41 GARun | NOTICE [0m GA initialized (npop: 100, ngen: 5000, mu: 0.20, rng: 42, break: 10000000)
Current iteration GA2-0: max_score=0.07425
Current iteration GA2-500: max_score=0.21166
Current iteration GA2-1500: max_score=0.00192
Current iteration GA2-4500: max_score=0.00052
[32m17:59:41 GARun | NOTICE [0m GA initialized (npop: 100, ngen: 5000, mu: 0.20, rng: 42, break: 10000000)
Current iteration GA2-0: max_score=0.14007
Current iteration GA2-4000: max_score=0.00120
Current iteration GA2-500: max_score=0.00057
Current iteration GA1-6000: max_score=0.28156
Current iteration GA1-5500: max_score=0.11324
Current iteration GA2-5000: max_score=0.00529
[32m17:59:41 flipLog | NOTICE [0m FLIPWHOLE: -42191.38042 => -41213.19394 ACCEPT
[32m17:59:41 flipOne | NOTICE [0m FLIPONE: N_accepts=3 N_rejects=7
[32m17:59:41 flipLog | NOTICE [0m FLIPWHOLE: -41031.12524 => -42247.80707 REJECT
[32m17:59:41 flipOne | NOTICE [0m FLIPONE: N_accepts=0 N_rejects=10
[32m17:59:41 Run | NOTICE [0m Terminating ... no more ACCEPT
>FINAL
tig00031595_pilon_pilon_pilon- tig00000303_pilon_pilon_pilon_115000_115999- tig00031576_pilon_pilon_pilon_1325000_1325999- tig00031576_pilon_pilon_pilon_1_1324999- tig00000303_pilon_pilon_pilon_1_109999+ tig00000303_pilon_pilon_pilon_110000_110999- tig00000303_pilon_pilon_pilon_115999_238208+ tig00031557_pilon_pilon_pilon_15297000_15319999+ tig00031563_pilon_pilon_pilon_89000_89999- tig00241107_pilon_pilon_pilon-
[32m17:59:41 Run | NOTICE [0m Success
Current iteration GA2-500: max_score=0.07425
Current iteration GA2-2000: max_score=0.00192
Current iteration GA2-5000: max_score=0.00052
[32m17:59:42 flipLog | NOTICE [0m FLIPWHOLE: -34.64725 => -36.57210 REJECT
[32m17:59:42 flipOne | NOTICE [0m FLIPONE: N_accepts=0 N_rejects=2
[32m17:59:42 Run | NOTICE [0m Terminating ... no more ACCEPT
>FINAL
tig00017685_pilon_pilon_pilon+ tig00014678_pilon_pilon_pilon+
[32m17:59:42 Run | NOTICE [0m Success
Current iteration GA2-1000: max_score=0.21166
[32m17:59:42 GARun | NOTICE [0m GA initialized (npop: 100, ngen: 5000, mu: 0.20, rng: 42, break: 10000000)
Current iteration GA2-0: max_score=0.11324
Current iteration GA2-4500: max_score=0.00120
Current iteration GA2-500: max_score=0.14007
Current iteration GA2-1000: max_score=0.00057
[32m17:59:42 GARun | NOTICE [0m GA initialized (npop: 100, ngen: 5000, mu: 0.20, rng: 42, break: 10000000)
Current iteration GA2-0: max_score=0.28156
Current iteration GA2-2500: max_score=0.00192
Current iteration GA2-1000: max_score=0.07425
Current iteration GA2-5000: max_score=0.00120
[32m17:59:42 flipLog | NOTICE [0m FLIPWHOLE: -71.21935 => -71.21935 REJECT
[32m17:59:42 flipOne | NOTICE [0m FLIPONE: N_accepts=0 N_rejects=3
[32m17:59:42 Run | NOTICE [0m Terminating ... no more ACCEPT
>FINAL
tig00241105_pilon_pilon_pilon+ tig00029519_pilon_pilon_pilon- tig00026836_pilon_pilon_pilon+
[32m17:59:42 Run | NOTICE [0m Success
Current iteration GA2-1500: max_score=0.21166
Current iteration GA2-500: max_score=0.11324
Current iteration GA2-1500: max_score=0.00057
Current iteration GA2-1000: max_score=0.14007
Current iteration GA2-500: max_score=0.28156
Current iteration GA2-3000: max_score=0.00192
Current iteration GA2-1500: max_score=0.07425
Current iteration GA2-2000: max_score=0.00057
Current iteration GA2-1000: max_score=0.11324
Current iteration GA2-2000: max_score=0.21166
Current iteration GA2-1500: max_score=0.14007
Current iteration GA2-3500: max_score=0.00192
Current iteration GA2-2500: max_score=0.00057
Current iteration GA2-1500: max_score=0.11324
Current iteration GA2-2000: max_score=0.07425
Current iteration GA2-1000: max_score=0.28156
Current iteration GA2-2500: max_score=0.21166
Current iteration GA2-2000: max_score=0.14007
Current iteration GA2-4000: max_score=0.00192
Current iteration GA2-3000: max_score=0.00057
Current iteration GA2-2000: max_score=0.11324
Current iteration GA2-2500: max_score=0.07425
Current iteration GA2-2500: max_score=0.14007
Current iteration GA2-3000: max_score=0.21166
Current iteration GA2-4500: max_score=0.00192
Current iteration GA2-3500: max_score=0.00057
Current iteration GA2-1500: max_score=0.28156
Current iteration GA2-2500: max_score=0.11324
Current iteration GA2-3000: max_score=0.14007
Current iteration GA2-3000: max_score=0.07425
Current iteration GA2-3500: max_score=0.21166
Current iteration GA2-5000: max_score=0.00192
[32m17:59:43 flipLog | NOTICE [0m FLIPWHOLE: -248.29840 => -246.02541 ACCEPT
[32m17:59:43 flipOne | NOTICE [0m FLIPONE: N_accepts=3 N_rejects=4
[32m17:59:43 flipLog | NOTICE [0m FLIPWHOLE: -242.33948 => -253.18662 REJECT
[32m17:59:43 flipOne | NOTICE [0m FLIPONE: N_accepts=0 N_rejects=7
[32m17:59:43 Run | NOTICE [0m Terminating ... no more ACCEPT
>FINAL
tig00001289_pilon_pilon_pilon- tig00029579_pilon_pilon_pilon+ tig00009039_pilon_pilon_pilon+ tig00018403_pilon_pilon_pilon+ tig00022332_pilon_pilon_pilon+ tig00241118_pilon_pilon_pilon- tig00023013_pilon_pilon_pilon-
[32m17:59:43 Run | NOTICE [0m Success
Current iteration GA2-4000: max_score=0.00057
Current iteration GA2-3000: max_score=0.11324
Current iteration GA2-3500: max_score=0.14007
Current iteration GA2-3500: max_score=0.07425
Current iteration GA2-2000: max_score=0.28156
Current iteration GA2-4000: max_score=0.21166
Current iteration GA2-3500: max_score=0.11324
Current iteration GA2-4000: max_score=0.14007
Current iteration GA2-4500: max_score=0.00057
Current iteration GA2-4000: max_score=0.07425
Current iteration GA2-4500: max_score=0.21166
Current iteration GA2-2500: max_score=0.28156
Current iteration GA2-4500: max_score=0.14007
Current iteration GA2-4000: max_score=0.11324
Current iteration GA2-4500: max_score=0.07425
Current iteration GA2-5000: max_score=0.00057
[32m17:59:43 flipLog | NOTICE [0m FLIPWHOLE: -78.91874 => -71.21935 ACCEPT
[32m17:59:43 flipOne | NOTICE [0m FLIPONE: N_accepts=0 N_rejects=3
[32m17:59:43 flipLog | NOTICE [0m FLIPWHOLE: -71.21935 => -78.91874 REJECT
[32m17:59:43 flipOne | NOTICE [0m FLIPONE: N_accepts=0 N_rejects=3
[32m17:59:43 Run | NOTICE [0m Terminating ... no more ACCEPT
>FINAL
tig00025561_pilon_pilon_pilon- tig00005671_pilon_pilon_pilon- tig00012671_pilon_pilon_pilon-
[32m17:59:43 Run | NOTICE [0m Success
Current iteration GA2-5000: max_score=0.21166
[32m17:59:43 flipLog | NOTICE [0m FLIPWHOLE: -10669268.50686 => -10657427.29400 ACCEPT
[32m17:59:43 flipLog | NOTICE [0m FLIPONE (50/56): -10654952.42889 => -10654952.29357 ACCEPT
[32m17:59:43 flipOne | NOTICE [0m FLIPONE: N_accepts=26 N_rejects=30
[32m17:59:43 flipLog | NOTICE [0m FLIPWHOLE: -10652451.47961 => -10674366.50074 REJECT
[32m17:59:43 flipLog | NOTICE [0m FLIPONE (50/56): -10652448.65817 => -10652495.49397 REJECT
[32m17:59:43 flipOne | NOTICE [0m FLIPONE: N_accepts=1 N_rejects=55
[32m17:59:43 flipLog | NOTICE [0m FLIPWHOLE: -10652448.65817 => -10674361.77508 REJECT
[32m17:59:43 flipLog | NOTICE [0m FLIPONE (50/56): -10652448.65817 => -10652495.49397 REJECT
[32m17:59:43 flipOne | NOTICE [0m FLIPONE: N_accepts=0 N_rejects=56
[32m17:59:43 Run | NOTICE [0m Terminating ... no more ACCEPT
>FINAL
tig00007608_pilon_pilon_pilon- tig00022916_pilon_pilon_pilon+ tig00031592_pilon_pilon_pilon- tig00002498_pilon_pilon_pilon- tig00017538_pilon_pilon_pilon- tig00002012_pilon_pilon_pilon_173000_179999+ tig00002012_pilon_pilon_pilon_194999_292186+ tig00001141_pilon_pilon_pilon_4244999_4315281- tig00002012_pilon_pilon_pilon_143000_172999+ tig00002012_pilon_pilon_pilon_1_140999+ tig00031552_pilon_pilon_pilon_1_106999+ tig00031552_pilon_pilon_pilon_107999_229718- tig00031553_pilon_pilon_pilon+ tig00031554_pilon_pilon_pilon_703999_17546130- tig00031554_pilon_pilon_pilon_679000_702999- tig00031554_pilon_pilon_pilon_703000_703999+ tig00031554_pilon_pilon_pilon_1_677999- tig00031554_pilon_pilon_pilon_678000_678999- tig00000639_pilon_pilon_pilon+ tig00031570_pilon_pilon_pilon_1_1619999+ tig00031557_pilon_pilon_pilon_1_15296999+ tig00031579_pilon_pilon_pilon- tig00031593_pilon_pilon_pilon- tig00031578_pilon_pilon_pilon_1_88999- tig00031555_pilon_pilon_pilon_1_74999+ tig00000419_pilon_pilon_pilon_1_269999+ tig00000419_pilon_pilon_pilon_270000_270999- tig00000419_pilon_pilon_pilon_271000_584999+ tig00000142_pilon_pilon_pilon_1_753999+ tig00000142_pilon_pilon_pilon_818000_818999+ tig00000142_pilon_pilon_pilon_818999_2132570+ tig00031560_pilon_pilon_pilon_1_7174999+ tig00000688_pilon_pilon_pilon+ tig00031591_pilon_pilon_pilon_1_177999- tig00031560_pilon_pilon_pilon_7175999_7633732+ tig00031591_pilon_pilon_pilon_180000_218999+ tig00000676_pilon_pilon_pilon+ tig00031591_pilon_pilon_pilon_227999_310901+ tig00031591_pilon_pilon_pilon_219000_227999+ tig00000686_pilon_pilon_pilon+ tig00031562_pilon_pilon_pilon+ tig00002274_pilon_pilon_pilon+ tig00031582_pilon_pilon_pilon_502000_549999- tig00031581_pilon_pilon_pilon- tig00031582_pilon_pilon_pilon_380000_500999- tig00031582_pilon_pilon_pilon_378000_379999- tig00031577_pilon_pilon_pilon+ tig00031582_pilon_pilon_pilon_159000_377999- tig00002201_pilon_pilon_pilon- tig00031582_pilon_pilon_pilon_1_115999- tig00031582_pilon_pilon_pilon_121000_157999- tig00031582_pilon_pilon_pilon_116000_120999- tig00031580_pilon_pilon_pilon+ tig00031576_pilon_pilon_pilon_1325999_8981222- tig00031590_pilon_pilon_pilon_1_139999- tig00026331_pilon_pilon_pilon-
[32m17:59:43 Run | NOTICE [0m Success
Current iteration GA2-5000: max_score=0.14007
[32m17:59:43 flipLog | NOTICE [0m FLIPWHOLE: -3201240.31912 => -3188670.52164 ACCEPT
[32m17:59:43 flipOne | NOTICE [0m FLIPONE: N_accepts=9 N_rejects=29
[32m17:59:43 flipLog | NOTICE [0m FLIPWHOLE: -3188606.44985 => -3201275.34560 REJECT
Current iteration GA2-3000: max_score=0.28156
[32m17:59:43 flipOne | NOTICE [0m FLIPONE: N_accepts=0 N_rejects=38
[32m17:59:43 Run | NOTICE [0m Terminating ... no more ACCEPT
>FINAL
tig00001613_pilon_pilon_pilon+ tig00000535_pilon_pilon_pilon_1403999_4462395- tig00000535_pilon_pilon_pilon_1400000_1403999- tig00000535_pilon_pilon_pilon_1_1399999- tig00241120_pilon_pilon_pilon- tig00241119_pilon_pilon_pilon_2320000_2320999- tig00241119_pilon_pilon_pilon_1394000_2319999- tig00000281_pilon_pilon_pilon- tig00241119_pilon_pilon_pilon_1108000_1349999- tig00241119_pilon_pilon_pilon_1350000_1393999+ tig00241119_pilon_pilon_pilon_1107000_1107999- tig00241119_pilon_pilon_pilon_851000_1106999- tig00241119_pilon_pilon_pilon_850000_850999+ tig00241119_pilon_pilon_pilon_326000_849999- tig00241119_pilon_pilon_pilon_1_324999- tig00241119_pilon_pilon_pilon_325000_325999- tig00000270_pilon_pilon_pilon+ tig00031550_pilon_pilon_pilon+ tig00031549_pilon_pilon_pilon_5855000_5858999- tig00031549_pilon_pilon_pilon_5854000_5854999- tig00031549_pilon_pilon_pilon_6226000_6774999- tig00031549_pilon_pilon_pilon_6143000_6224999+ tig00031549_pilon_pilon_pilon_6140000_6142999- tig00031549_pilon_pilon_pilon_6225000_6225999- tig00031549_pilon_pilon_pilon_6136000_6139999+ tig00031549_pilon_pilon_pilon_6006000_6008999+ tig00031549_pilon_pilon_pilon_6009000_6131999- tig00031549_pilon_pilon_pilon_6132000_6135999- tig00031549_pilon_pilon_pilon_5860000_6005999- tig00031549_pilon_pilon_pilon_5532000_5659999- tig00031549_pilon_pilon_pilon_5670000_5853999- tig00031549_pilon_pilon_pilon_5660000_5669999- tig00031549_pilon_pilon_pilon_89000_5530999- tig00031549_pilon_pilon_pilon_1_86999+ tig00000271_pilon_pilon_pilon- tig00031549_pilon_pilon_pilon_87000_88999- tig00031548_pilon_pilon_pilon- tig00017223_pilon_pilon_pilon-
[32m17:59:43 Run | NOTICE [0m Success
Current iteration GA2-4500: max_score=0.11324
Current iteration GA2-5000: max_score=0.07425
[32m17:59:43 flipLog | NOTICE [0m FLIPWHOLE: -6265393.85657 => -6275413.46322 REJECT
[32m17:59:43 flipOne | NOTICE [0m FLIPONE: N_accepts=9 N_rejects=24
[32m17:59:43 flipLog | NOTICE [0m FLIPWHOLE: -6265330.08479 => -6275451.30800 REJECT
[32m17:59:43 flipOne | NOTICE [0m FLIPONE: N_accepts=0 N_rejects=33
[32m17:59:43 Run | NOTICE [0m Terminating ... no more ACCEPT
>FINAL
tig00000610_pilon_pilon_pilon- tig00001901_pilon_pilon_pilon+ tig00000540_pilon_pilon_pilon_1_6153999+ tig00000540_pilon_pilon_pilon_6154000_6156999- tig00000540_pilon_pilon_pilon_6157000_7105999+ tig00000540_pilon_pilon_pilon_7114999_8020028+ tig00000540_pilon_pilon_pilon_7106000_7114999- tig00000244_pilon_pilon_pilon_1_138999+ tig00000244_pilon_pilon_pilon_139000_140999- tig00031570_pilon_pilon_pilon_12250999_15953415+ tig00000494_pilon_pilon_pilon- tig00002035_pilon_pilon_pilon- tig00001987_pilon_pilon_pilon_1_105999+ tig00000616_pilon_pilon_pilon_173999_300685- tig00000904_pilon_pilon_pilon- tig00031569_pilon_pilon_pilon_98000_151999- tig00031569_pilon_pilon_pilon_184999_273806- tig00031569_pilon_pilon_pilon_1_89999+ tig00002220_pilon_pilon_pilon+ tig00031565_pilon_pilon_pilon_26692999_26820353- tig00002273_pilon_pilon_pilon+ tig00002066_pilon_pilon_pilon- tig00002124_pilon_pilon_pilon- tig00002060_pilon_pilon_pilon+ tig00001987_pilon_pilon_pilon_107999_314237+ tig00000616_pilon_pilon_pilon_1_160999+ tig00000176_pilon_pilon_pilon- tig00031552_pilon_pilon_pilon_107000_107999- tig00001898_pilon_pilon_pilon+ tig00001973_pilon_pilon_pilon+ tig00031555_pilon_pilon_pilon_299999_376792+ tig00031556_pilon_pilon_pilon+ tig00008191_pilon_pilon_pilon-
[32m17:59:43 Run | NOTICE [0m Success
Current iteration GA2-5000: max_score=0.11324
[32m17:59:43 flipLog | NOTICE [0m FLIPWHOLE: -483064.78402 => -486666.52094 REJECT
[32m17:59:43 flipOne | NOTICE [0m FLIPONE: N_accepts=13 N_rejects=20
[32m17:59:43 flipLog | NOTICE [0m FLIPWHOLE: -483010.86535 => -486713.69056 REJECT
[32m17:59:44 flipOne | NOTICE [0m FLIPONE: N_accepts=1 N_rejects=32
[32m17:59:44 flipLog | NOTICE [0m FLIPWHOLE: -483009.20764 => -486712.59735 REJECT
[32m17:59:44 flipOne | NOTICE [0m FLIPONE: N_accepts=0 N_rejects=33
[32m17:59:44 Run | NOTICE [0m Terminating ... no more ACCEPT
>FINAL
tig00031575_pilon_pilon_pilon- tig00241095_pilon_pilon_pilon_382000_383999- tig00241095_pilon_pilon_pilon_141000_141999- tig00241095_pilon_pilon_pilon_1_140999+ tig00241095_pilon_pilon_pilon_384000_384999+ tig00241095_pilon_pilon_pilon_142000_371999+ tig00241095_pilon_pilon_pilon_372000_372999- tig00241095_pilon_pilon_pilon_373000_380999+ tig00241095_pilon_pilon_pilon_385000_387999+ tig00241095_pilon_pilon_pilon_388000_388999- tig00241095_pilon_pilon_pilon_389000_424999+ tig00241095_pilon_pilon_pilon_425000_425999+ tig00241095_pilon_pilon_pilon_426000_707999+ tig00241095_pilon_pilon_pilon_708000_709999+ tig00241095_pilon_pilon_pilon_710000_1049999+ tig00241095_pilon_pilon_pilon_1050000_1051999- tig00241095_pilon_pilon_pilon_381000_381999+ tig00241095_pilon_pilon_pilon_1052000_1575999+ tig00241095_pilon_pilon_pilon_1576000_1577999+ tig00241095_pilon_pilon_pilon_1577999_1849610+ tig00241096_pilon_pilon_pilon- tig00002209_pilon_pilon_pilon- tig00241122_pilon_pilon_pilon_1_95999+ tig00031597_pilon_pilon_pilon_108000_109999+ tig00241122_pilon_pilon_pilon_96000_96999- tig00241122_pilon_pilon_pilon_96999_399386+ tig00031588_pilon_pilon_pilon+ tig00031597_pilon_pilon_pilon_1_107999- tig00031598_pilon_pilon_pilon+ tig00002011_pilon_pilon_pilon- tig00031597_pilon_pilon_pilon_109999_178932+ tig00241121_pilon_pilon_pilon+ tig00031566_pilon_pilon_pilon_1_74999-
[32m17:59:44 Run | NOTICE [0m Success
Current iteration GA2-3500: max_score=0.28156
Current iteration GA2-4000: max_score=0.28156
Current iteration GA2-4500: max_score=0.28156
Current iteration GA2-5000: max_score=0.28156
[32m17:59:44 flipLog | NOTICE [0m FLIPWHOLE: -23573966.88679 => -23586935.77365 REJECT
[32m17:59:45 flipLog | NOTICE [0m FLIPONE (50/59): -23539584.15356 => -23539580.66730 ACCEPT
[32m17:59:45 flipOne | NOTICE [0m FLIPONE: N_accepts=20 N_rejects=39
[32m17:59:45 flipLog | NOTICE [0m FLIPWHOLE: -23539580.66730 => -23603005.79943 REJECT
[32m17:59:45 flipLog | NOTICE [0m FLIPONE (50/59): -23539578.09705 => -23539581.58331 REJECT
[32m17:59:45 flipOne | NOTICE [0m FLIPONE: N_accepts=2 N_rejects=57
[32m17:59:45 flipLog | NOTICE [0m FLIPWHOLE: -23539578.09705 => -23603010.30002 REJECT
[32m17:59:45 flipLog | NOTICE [0m FLIPONE (50/59): -23539578.09705 => -23539581.58331 REJECT
[32m17:59:45 flipOne | NOTICE [0m FLIPONE: N_accepts=0 N_rejects=59
[32m17:59:45 Run | NOTICE [0m Terminating ... no more ACCEPT
>FINAL
tig00031565_pilon_pilon_pilon_4201000_26665999- tig00011762_pilon_pilon_pilon+ tig00025907_pilon_pilon_pilon+ tig00016707_pilon_pilon_pilon+ tig00010097_pilon_pilon_pilon+ tig00030192_pilon_pilon_pilon+ tig00001378_pilon_pilon_pilon- tig00000628_pilon_pilon_pilon- tig00001158_pilon_pilon_pilon- tig00031571_pilon_pilon_pilon+ tig00000472_pilon_pilon_pilon- tig00031573_pilon_pilon_pilon+ tig00000327_pilon_pilon_pilon+ tig00002357_pilon_pilon_pilon+ tig00002324_pilon_pilon_pilon- tig00002236_pilon_pilon_pilon- tig00001230_pilon_pilon_pilon+ tig00000617_pilon_pilon_pilon- tig00031578_pilon_pilon_pilon_89999_3057000+ tig00031582_pilon_pilon_pilon_550999_2860292- tig00001915_pilon_pilon_pilon- tig00000411_pilon_pilon_pilon_1_12224999+ tig00000148_pilon_pilon_pilon- tig00031570_pilon_pilon_pilon_1621000_8249999+ tig00031570_pilon_pilon_pilon_8254000_12249999+ tig00241099_pilon_pilon_pilon- tig00031569_pilon_pilon_pilon_160000_178999- tig00031565_pilon_pilon_pilon_1_4199999+ tig00000109_pilon_pilon_pilon- tig00031594_pilon_pilon_pilon+ tig00000977_pilon_pilon_pilon- tig00000385_pilon_pilon_pilon_10850000_10850999+ tig00000572_pilon_pilon_pilon+ tig00000004_pilon_pilon_pilon_1_13684999- tig00001749_pilon_pilon_pilon+ tig00001141_pilon_pilon_pilon_1_4164999+ tig00001070_pilon_pilon_pilon+ tig00000419_pilon_pilon_pilon_592000_1142999+ tig00000419_pilon_pilon_pilon_1143000_1144999- tig00000419_pilon_pilon_pilon_1145000_1527999+ tig00000419_pilon_pilon_pilon_1528000_1528999- tig00000419_pilon_pilon_pilon_1528999_1911058+ tig00000385_pilon_pilon_pilon_1_10849999+ tig00031549_pilon_pilon_pilon_6775999_14411164- tig00006100_pilon_pilon_pilon+ tig00008901_pilon_pilon_pilon+ tig00241117_pilon_pilon_pilon+ tig00023785_pilon_pilon_pilon+ tig00000244_pilon_pilon_pilon_148000_148999+ tig00031568_pilon_pilon_pilon- tig00025771_pilon_pilon_pilon+ tig00025689_pilon_pilon_pilon+ tig00000004_pilon_pilon_pilon_13698999_34761239+ tig00019430_pilon_pilon_pilon+ tig00002838_pilon_pilon_pilon+ tig00002468_pilon_pilon_pilon+ tig00010342_pilon_pilon_pilon+ tig00022394_pilon_pilon_pilon+ tig00024051_pilon_pilon_pilon+
[32m17:59:45 Run | NOTICE [0m Success


All commands completed successfully. :-)

1. tour format to agp ...
Processing sample.unique.REduced.paired_only.counts_GATC.12g1.tour ...
Processing sample.unique.REduced.paired_only.counts_GATC.12g10.tour ...
Processing sample.unique.REduced.paired_only.counts_GATC.12g11.tour ...
Processing sample.unique.REduced.paired_only.counts_GATC.12g12.tour ...
Processing sample.unique.REduced.paired_only.counts_GATC.12g2.tour ...
Processing sample.unique.REduced.paired_only.counts_GATC.12g3.tour ...
Processing sample.unique.REduced.paired_only.counts_GATC.12g4.tour ...
Processing sample.unique.REduced.paired_only.counts_GATC.12g5.tour ...
Processing sample.unique.REduced.paired_only.counts_GATC.12g6.tour ...
Processing sample.unique.REduced.paired_only.counts_GATC.12g7.tour ...
Processing sample.unique.REduced.paired_only.counts_GATC.12g8.tour ...
Processing sample.unique.REduced.paired_only.counts_GATC.12g9.tour ...
/ifs1/User/pengjx/biosoft/ALLHiC-master/bin/ALLHiC_plot:194: MatplotlibDeprecationWarning: You are modifying the state of a globally registered colormap. In future versions, you will not be able to modify a registered colormap in-place. To remove this warning, you can make a copy of the colormap first. cmap = copy.copy(mpl.cm.get_cmap("YlOrRd"))
  cmap.set_over('black')
/ifs1/User/pengjx/biosoft/ALLHiC-master/bin/ALLHiC_plot:222: MatplotlibDeprecationWarning: savefig() got unexpected keyword argument "filetype" which is no longer supported as of 3.3 and will become an error two minor releases later
  plt.savefig(file_prefix+'.'+ext, filetype=ext, bbox_inches='tight', dpi=200)
/ifs1/User/pengjx/biosoft/ALLHiC-master/bin/ALLHiC_plot:194: MatplotlibDeprecationWarning: You are modifying the state of a globally registered colormap. In future versions, you will not be able to modify a registered colormap in-place. To remove this warning, you can make a copy of the colormap first. cmap = copy.copy(mpl.cm.get_cmap("YlOrRd"))
  cmap.set_over('black')
/ifs1/User/pengjx/biosoft/ALLHiC-master/bin/ALLHiC_plot:222: MatplotlibDeprecationWarning: savefig() got unexpected keyword argument "filetype" which is no longer supported as of 3.3 and will become an error two minor releases later
  plt.savefig(file_prefix+'.'+ext, filetype=ext, bbox_inches='tight', dpi=200)
/ifs1/User/pengjx/biosoft/ALLHiC-master/bin/ALLHiC_plot:194: MatplotlibDeprecationWarning: You are modifying the state of a globally registered colormap. In future versions, you will not be able to modify a registered colormap in-place. To remove this warning, you can make a copy of the colormap first. cmap = copy.copy(mpl.cm.get_cmap("YlOrRd"))
  cmap.set_over('black')
/ifs1/User/pengjx/biosoft/ALLHiC-master/bin/ALLHiC_plot:222: MatplotlibDeprecationWarning: savefig() got unexpected keyword argument "filetype" which is no longer supported as of 3.3 and will become an error two minor releases later
  plt.savefig(file_prefix+'.'+ext, filetype=ext, bbox_inches='tight', dpi=200)
/ifs1/User/pengjx/biosoft/ALLHiC-master/bin/ALLHiC_plot:194: MatplotlibDeprecationWarning: You are modifying the state of a globally registered colormap. In future versions, you will not be able to modify a registered colormap in-place. To remove this warning, you can make a copy of the colormap first. cmap = copy.copy(mpl.cm.get_cmap("YlOrRd"))
  cmap.set_over('black')
/ifs1/User/pengjx/biosoft/ALLHiC-master/bin/ALLHiC_plot:222: MatplotlibDeprecationWarning: savefig() got unexpected keyword argument "filetype" which is no longer supported as of 3.3 and will become an error two minor releases later
  plt.savefig(file_prefix+'.'+ext, filetype=ext, bbox_inches='tight', dpi=200)
/ifs1/User/pengjx/biosoft/ALLHiC-master/bin/ALLHiC_plot:194: MatplotlibDeprecationWarning: You are modifying the state of a globally registered colormap. In future versions, you will not be able to modify a registered colormap in-place. To remove this warning, you can make a copy of the colormap first. cmap = copy.copy(mpl.cm.get_cmap("YlOrRd"))
  cmap.set_over('black')
/ifs1/User/pengjx/biosoft/ALLHiC-master/bin/ALLHiC_plot:222: MatplotlibDeprecationWarning: savefig() got unexpected keyword argument "filetype" which is no longer supported as of 3.3 and will become an error two minor releases later
  plt.savefig(file_prefix+'.'+ext, filetype=ext, bbox_inches='tight', dpi=200)
/ifs1/User/pengjx/biosoft/ALLHiC-master/bin/ALLHiC_plot:194: MatplotlibDeprecationWarning: You are modifying the state of a globally registered colormap. In future versions, you will not be able to modify a registered colormap in-place. To remove this warning, you can make a copy of the colormap first. cmap = copy.copy(mpl.cm.get_cmap("YlOrRd"))
  cmap.set_over('black')
/ifs1/User/pengjx/biosoft/ALLHiC-master/bin/ALLHiC_plot:222: MatplotlibDeprecationWarning: savefig() got unexpected keyword argument "filetype" which is no longer supported as of 3.3 and will become an error two minor releases later
  plt.savefig(file_prefix+'.'+ext, filetype=ext, bbox_inches='tight', dpi=200)
/ifs1/User/pengjx/biosoft/ALLHiC-master/bin/ALLHiC_plot:194: MatplotlibDeprecationWarning: You are modifying the state of a globally registered colormap. In future versions, you will not be able to modify a registered colormap in-place. To remove this warning, you can make a copy of the colormap first. cmap = copy.copy(mpl.cm.get_cmap("YlOrRd"))
  cmap.set_over('black')
/ifs1/User/pengjx/biosoft/ALLHiC-master/bin/ALLHiC_plot:222: MatplotlibDeprecationWarning: savefig() got unexpected keyword argument "filetype" which is no longer supported as of 3.3 and will become an error two minor releases later
  plt.savefig(file_prefix+'.'+ext, filetype=ext, bbox_inches='tight', dpi=200)
/ifs1/User/pengjx/biosoft/ALLHiC-master/bin/ALLHiC_plot:194: MatplotlibDeprecationWarning: You are modifying the state of a globally registered colormap. In future versions, you will not be able to modify a registered colormap in-place. To remove this warning, you can make a copy of the colormap first. cmap = copy.copy(mpl.cm.get_cmap("YlOrRd"))
  cmap.set_over('black')
/ifs1/User/pengjx/biosoft/ALLHiC-master/bin/ALLHiC_plot:222: MatplotlibDeprecationWarning: savefig() got unexpected keyword argument "filetype" which is no longer supported as of 3.3 and will become an error two minor releases later
  plt.savefig(file_prefix+'.'+ext, filetype=ext, bbox_inches='tight', dpi=200)
/ifs1/User/pengjx/biosoft/ALLHiC-master/bin/ALLHiC_plot:194: MatplotlibDeprecationWarning: You are modifying the state of a globally registered colormap. In future versions, you will not be able to modify a registered colormap in-place. To remove this warning, you can make a copy of the colormap first. cmap = copy.copy(mpl.cm.get_cmap("YlOrRd"))
  cmap.set_over('black')
/ifs1/User/pengjx/biosoft/ALLHiC-master/bin/ALLHiC_plot:222: MatplotlibDeprecationWarning: savefig() got unexpected keyword argument "filetype" which is no longer supported as of 3.3 and will become an error two minor releases later
  plt.savefig(file_prefix+'.'+ext, filetype=ext, bbox_inches='tight', dpi=200)
/ifs1/User/pengjx/biosoft/ALLHiC-master/bin/ALLHiC_plot:194: MatplotlibDeprecationWarning: You are modifying the state of a globally registered colormap. In future versions, you will not be able to modify a registered colormap in-place. To remove this warning, you can make a copy of the colormap first. cmap = copy.copy(mpl.cm.get_cmap("YlOrRd"))
  cmap.set_over('black')
/ifs1/User/pengjx/biosoft/ALLHiC-master/bin/ALLHiC_plot:222: MatplotlibDeprecationWarning: savefig() got unexpected keyword argument "filetype" which is no longer supported as of 3.3 and will become an error two minor releases later
  plt.savefig(file_prefix+'.'+ext, filetype=ext, bbox_inches='tight', dpi=200)
/ifs1/User/pengjx/biosoft/ALLHiC-master/bin/ALLHiC_plot:194: MatplotlibDeprecationWarning: You are modifying the state of a globally registered colormap. In future versions, you will not be able to modify a registered colormap in-place. To remove this warning, you can make a copy of the colormap first. cmap = copy.copy(mpl.cm.get_cmap("YlOrRd"))
  cmap.set_over('black')
/ifs1/User/pengjx/biosoft/ALLHiC-master/bin/ALLHiC_plot:222: MatplotlibDeprecationWarning: savefig() got unexpected keyword argument "filetype" which is no longer supported as of 3.3 and will become an error two minor releases later
  plt.savefig(file_prefix+'.'+ext, filetype=ext, bbox_inches='tight', dpi=200)
/ifs1/User/pengjx/biosoft/ALLHiC-master/bin/ALLHiC_plot:194: MatplotlibDeprecationWarning: You are modifying the state of a globally registered colormap. In future versions, you will not be able to modify a registered colormap in-place. To remove this warning, you can make a copy of the colormap first. cmap = copy.copy(mpl.cm.get_cmap("YlOrRd"))
  cmap.set_over('black')
/ifs1/User/pengjx/biosoft/ALLHiC-master/bin/ALLHiC_plot:222: MatplotlibDeprecationWarning: savefig() got unexpected keyword argument "filetype" which is no longer supported as of 3.3 and will become an error two minor releases later
  plt.savefig(file_prefix+'.'+ext, filetype=ext, bbox_inches='tight', dpi=200)
/ifs1/User/pengjx/biosoft/ALLHiC-master/bin/ALLHiC_plot:194: MatplotlibDeprecationWarning: You are modifying the state of a globally registered colormap. In future versions, you will not be able to modify a registered colormap in-place. To remove this warning, you can make a copy of the colormap first. cmap = copy.copy(mpl.cm.get_cmap("YlOrRd"))
  cmap.set_over('black')
/ifs1/User/pengjx/biosoft/ALLHiC-master/bin/ALLHiC_plot:222: MatplotlibDeprecationWarning: savefig() got unexpected keyword argument "filetype" which is no longer supported as of 3.3 and will become an error two minor releases later
  plt.savefig(file_prefix+'.'+ext, filetype=ext, bbox_inches='tight', dpi=200)
/ifs1/User/pengjx/biosoft/ALLHiC-master/bin/ALLHiC_plot:157: MatplotlibDeprecationWarning: You are modifying the state of a globally registered colormap. In future versions, you will not be able to modify a registered colormap in-place. To remove this warning, you can make a copy of the colormap first. cmap = copy.copy(mpl.cm.get_cmap("YlOrRd"))
  cmap.set_over('black')
/ifs1/User/pengjx/biosoft/ALLHiC-master/bin/ALLHiC_plot:164: MatplotlibDeprecationWarning: savefig() got unexpected keyword argument "filetype" which is no longer supported as of 3.3 and will become an error two minor releases later
  plt.savefig(file_prefix+'.'+ext, filetype=ext, bbox_inches='tight', dpi=200)
[17:59:56] Step 1: Get read position based on chromosome
[19:25:56] Step 2: Get chromosome length
[19:25:56] Step 3: Calculating and Drawing heatmap
[19:25:56] Calculating
[19:33:49] Drawing heatmap
[19:33:49] Drawing with bin size 500k
[19:34:15] Draw 500K_sample.unique.REduced.paired_only.counts_GATC.12g1
[19:34:18] Draw 500K_sample.unique.REduced.paired_only.counts_GATC.12g10
[19:34:18] Draw 500K_sample.unique.REduced.paired_only.counts_GATC.12g11
[19:34:19] Draw 500K_sample.unique.REduced.paired_only.counts_GATC.12g12
[19:34:19] Draw 500K_sample.unique.REduced.paired_only.counts_GATC.12g2
[19:34:20] Draw 500K_sample.unique.REduced.paired_only.counts_GATC.12g3
[19:34:20] Draw 500K_sample.unique.REduced.paired_only.counts_GATC.12g4
[19:34:20] Draw 500K_sample.unique.REduced.paired_only.counts_GATC.12g5
[19:34:21] Draw 500K_sample.unique.REduced.paired_only.counts_GATC.12g6
[19:34:21] Draw 500K_sample.unique.REduced.paired_only.counts_GATC.12g7
[19:34:22] Draw 500K_sample.unique.REduced.paired_only.counts_GATC.12g8
[19:34:22] Draw 500K_sample.unique.REduced.paired_only.counts_GATC.12g9
[19:34:23] Draw 500K_Whole_genome
[19:34:24] Draw 500K_all_chrs
[19:59:00] Success
