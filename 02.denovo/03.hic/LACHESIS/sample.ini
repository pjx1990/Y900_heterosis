###############################################################################################################################################################
#
#
#   Lachesis.ini - initialization file for Lachesis runs
#
#   This file controls how the Lachesis program is run.  Changing this file will change the inputs to Lachesis, which algorithms it runs, the heuristic
#   parameters it uses, and so forth.
#
#   When modifying Lachesis.ini, be careful about formatting!  Each line must be of the form "key = value", where key and value are text strings, with no
#   internal spaces.  There must be some space around the equals sign, and there should be no leading whitespace.
#   In some cases there can be multiple values, which should be separated by tabs or spaces, without commas.
#   Commented lines (such as this one) are ignored.  Do not append comments at the end of an otherwise non-commented line.  To add or remove comments en masse
#   from this file, use the scripts commentify_INI.pl and decommentify_INI.pl in INIs/.
#   You may add or remove empty lines and commented lines, but DO NOT remove any parameters, or change the order in which the parameters appear in the file.
#   Lachesis.ini is parsed in the module RunParams.cc, in the function ParseIniFile().  If this file is formatted incorrectly, this function throws an error.
#
#   Note that values for boolean keys must be either '0' or '1'.  Any other value (including e.g., "true") will fail.
#
#
#   Josh Burton
#   June 2013
#
#
###############################################################################################################################################################



# Species.  If assembling a species for which there is already a reference, use "human" or "mouse" or "fly"; these names are hard-wired into the code.
# If assembling any other species (including e.g., other Drosophila species), DO NOT use these strings.
SPECIES = rice


# Directory which will contain the output.  When Lachesis is run, it will create this directory, along with subdirectories main_results/ and cached_data/.
# If DO_REPORTING = 1 below, the file REPORT.txt, which is the main output reporting file, will be created in here.
OUTPUT_DIR = out/



#################################################
#
#   PARAMETERS FOR THE INPUT ASSEMBLY
#

# Draft assembly fasta file.
DRAFT_ASSEMBLY_FASTA = 58S_3rd_polish.fasta

# Directory containing the input SAM/BAM files that describe Hi-C read alignments to the draft assembly.
# This directory path can be absolute, or relative to the directory in which Lachesis is run.  This should be listed before SAM_FILES.
SAM_DIR = ./align

# The input SAM/BAM files that describe Hi-C read alignments to the draft assembly.
# These files should exist in SAM_DIR, above, and they should already be pre-processed (e.g., to remove PCR duplicates) and sorted by read name (not by order).
# If any of these files fails to exist, Lachesis won't run.
SAM_FILES = SRR400260.sample.bam SRR400261.sample.bam SRR400262.sample.bam SRR400263.sample.bam SRR442155.sample.bam SRR442156.sample.bam SRR442157.sample.bam

# Sequence at the restriction enzyme (RE) site used in Hi-C digestion.
# For each contig in the draft assembly, the number of RE sites on the contig will be counted, and the Hi-C link density will be normalized by this number.
RE_SITE_SEQ = AAGCTT






#################################################
#
#   PARAMETERS FOR THE REFERENCE GENOME
#
#   If you are assembling a genome for which a reference already exists, you can use these parameters to inform Lachesis of the reference genome sequence.
#   You must align your draft assembly to the reference genome.  Lachesis will then evaluate its performance by comparing its clustering, ordering, and
#   orienting results to the results implied by the alignments to reference.
#   If USE_REFERENCE = 0, none of these parameters are examined or used.
#

# Use a reference genome?  Options: 0 (false), 1 (true).
USE_REFERENCE = 1

# If the draft assembly is just the reference genome chopped into simulated bins (e.g., Table 2 in the original Lachesis publication) put the bin size here.
# Otherwise set to 0.  Note that this must be set to 0 if SPECIES is set to anything other than "human".
SIM_BIN_SIZE = 0

# Reference assembly fasta file.  Ignored if USE_REFERENCE = 0.
REF_ASSEMBLY_FASTA = /ifs1/User/pengjx/database/ref_genome/R498_Chr.fasta

# File head for BLAST alignments.  You must align the draft assembly to the reference genome using BLAST (UNIX command: `blastn -outfmt 7 ...`).
# The output should go into a set of one or more files called <BLAST_FILE_HEAD>.*.blast.out, where * = 1,2,3,...
# Lachesis will create a file at <OUTPUT_DIR>/cached_data/TrueMapping.assembly.txt.  Once this file exists, you no longer need the BLAST files.
# Alternatively, if SIM_BIN_SIZE > 0 (above), BLAST_FILE_HEAD is ignored because no alignments to reference are needed.
BLAST_FILE_HEAD = test_case/draft_assembly/assembly





#################################################
#
#   WHICH ALGORITHMIC STEPS TO PERFORM?
#
#   For each of these keys, options are 0 (false), 1 (true).
#   The orientation step is considered part of the ordering step.
#   If USE_REFERENCE = 1 (above), there will be reference-assisted evaluation in each of clustering, ordering, and reporting.
#

DO_CLUSTERING = 1
DO_ORDERING   = 1
DO_REPORTING  = 1

# At the beginning of clustering, the Hi-C links are loaded from the SAM files, and then the cache file <OUTPUT_DIR>/cached_data/all.GLM is created.
# If this cache file already exists, and if OVERWRITE_GLM = 0, the links are loaded from cache, saving time.  Set to 1 if the content of SAM_FILES changes.
OVERWRITE_GLM = 0

# At the beginning of ordering, the links are loaded from the SAM files, and then the cache files <OUTPUT_DIR>/cached_data/group*.CLM are created.
# If these cache files already exist, and if OVERWRITE_CLMS = 0, the links are loaded from cache, saving time.
# Set to 1 if you change anything about the clustering, so that the change will propagate to the ordering.  Otherwise Lachesis will throw an error.
OVERWRITE_CLMS = 0





#################################################
#
#   HEURISTIC PARAMETERS FOR CLUSTERING AND ORDERING
#
#   For these keys, the accepted values are integers and decimal numbers.
#

# Number of clusters.  Set this to the number of chromosomes in the input assembly.
CLUSTER_N = 12
# Mark some contigs as containing CENs (centromeres), which will cause Lachesis not to combine any two of these contigs into a single cluster.
# This is useful in yeast genomes, in which centromere clustering creates a strong Hi-C signal among the CEN-containing contigs which Lachesis will mistake
# for intra-chromosome linkage.  It should be easy to pick out the CEN-containing contigs just by looking at a pre-Lachesis heatmap of the links; for example,
# see https://doi.org/10.1093/bioinformatics/btu162.  The number of contigs listed here can't be greater than CLUSTER_N.
# Specify the contigs by their ID in the input draft assembly (first contig = 0).  To not mark any contigs, set to "-1".
CLUSTER_CONTIGS_WITH_CENS = -1
# Only use contigs as informative for clustering if they have at least this many restriction enzyme (RE) sites.
CLUSTER_MIN_RE_SITES = 25
# Only use contigs as informative for clustering if they have LESS than this much times the average density of Hi-C links.
# Contigs with too many Hi-C links tend to be in heterochromatin or other repeat-rich regions.
CLUSTER_MAX_LINK_DENSITY = 2
# Non-informative contigs (the ones that fail the CLUSTER_MIN_RE_SITES or CLUSTER_MAX_LINK_DENSITY filters) may be added to groups after clustering is over, if
# they fit cleanly into one group.  "Fitting cleanly" into a group means having at least CLUSTER_NONINFORMATIVE_RATIO times as much linkage into that group as
# into any other.  Set CLUSTER_NONINFORMATIVE_RATIO to 0 to prevent non-informative contigs from being clustered at all; otherwise it must be set to > 1.
CLUSTER_NONINFORMATIVE_RATIO = 3
# Boolean (0/1).  Draw a 2-D heatmap of the entire Hi-C link dataset before clustering.
CLUSTER_DRAW_HEATMAP = 1
# Boolean (0/1).  Draw a 2-D dotplot of the clustering result, compared to truth.  This is time-consuming and eats up file I/O.  Ignored if USE_REFERENCE = 0.
# The dotplots go to ~/public_html/dotplot.SKY.*.jpg
CLUSTER_DRAW_DOTPLOT = 1


# Minimum number of RE sites in contigs allowed into the initial trunk.
ORDER_MIN_N_RES_IN_TRUNK = 15
# Minimum number of RE sites in shreds considered for reinsertion.
ORDER_MIN_N_RES_IN_SHREDS = 15
# Boolean (0/1).  If 1, draw a 2-D dotplot for each cluster, showing the ordering results compared to truth.  Ignored if USE_REFERENCE = 0.
ORDER_DRAW_DOTPLOTS = 1



#################################################
#
#   OUTPUT PARAMETERS
#
#   These parameters do not change the results of Lachesis, but they change where and how the results are reported in OUTPUT_DIR.
#

# IDs of groups to exclude from the REPORT.txt numbers (e.g. groups determined to be small, crappy and/or chimeric.)  If not excluding any groups, set to "-1".
REPORT_EXCLUDED_GROUPS = -1
# Quality filter.  Contigs whose orientation quality scores (differential log-likelihoods) are this or greater are considered high-quality.
# The quality scores depend on Hi-C read coverage, so you'll want to try out some values in order to achieve an informative differentiation in REPORT.txt.
REPORT_QUALITY_FILTER = 1
# Boolean (0/1).  If 1, create a Hi-C heatmap of the overall result via the script heatmap.MWAH.R.  This is a useful reference-free evaluation.
REPORT_DRAW_HEATMAP = 1
